SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: versions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY versions (super, major, minor, upgrade_warning) FROM stdin;
8	0	8	A dump/restore is not required for those running 8.0.X. However, if you are upgrading from a version earlier than 8.0.6, see the release notes for 8.0.6. Full security against the SQL-injection attacks described in CVE-2006-2313 and CVE-2006-2314 might require changes in application code. If you have applications that embed untrustworthy strings into SQL commands, you should examine them as soon as possible to ensure that they are using recommended escaping techniques. In most cases, applications should be using subroutines provided by libraries or drivers (such as libpq 's PQescapeStringConn() ) to perform string escaping, rather than relying on ad hoc code to do it.
8	0	6	A dump/restore is not required for those running 8.0.X. However, if you are upgrading from a version earlier than 8.0.3, see the release notes for 8.0.3. Also, you might need to REINDEX indexes on textual columns after updating, if you are affected by the locale or plperl issues described below.
8	0	3	A dump/restore is not required for those running 8.0.X. However, it is one possible way of handling two significant security problems that have been found in the initial contents of 8.0.X system catalogs. A dump/initdb/reload sequence using 8.0.3's initdb will automatically correct these problems. The larger security problem is that the built-in character set encoding conversion functions can be invoked from SQL commands by unprivileged users, but the functions were not designed for such use and are not secure against malicious choices of arguments. The fix involves changing the declared parameter list of these functions so that they can no longer be invoked from SQL commands. (This does not affect their normal use by the encoding conversion machinery.) The lesser problem is that the contrib/tsearch2 module creates several functions that are improperly declared to return internal when they do not accept internal arguments. This breaks type safety for all functions using internal arguments. It is strongly recommended that all installations repair these errors, either by initdb or by following the manual repair procedure given below. The errors at least allow unprivileged database users to crash their server process, and might allow unprivileged users to gain the privileges of a database superuser. If you wish not to do an initdb, perform the same manual repair procedures shown in the 7.4.8 release notes .
8	0	2	A dump/restore is not required for those running 8.0.*. This release updates the major version number of the PostgreSQL libraries, so it might be necessary to re-link some user applications if they cannot find the properly-numbered shared library.
8	0	1	A dump/restore is not required for those running 8.0.0.
8	0	0	A dump/restore using pg_dump is required for those wishing to migrate data from any previous release. Observe the following incompatibilities: In READ COMMITTED serialization mode, volatile functions now see the results of concurrent transactions committed up to the beginning of each statement within the function, rather than up to the beginning of the interactive command that called the function. Functions declared STABLE or IMMUTABLE always use the snapshot of the calling query, and therefore do not see the effects of actions taken after the calling query starts, whether in their own transaction or other transactions. Such a function must be read-only, too, meaning that it cannot use any SQL commands other than SELECT . Nondeferred AFTER triggers are now fired immediately after completion of the triggering query, rather than upon finishing the current interactive command. This makes a difference when the triggering query occurred within a function: the trigger is invoked before the function proceeds to its next operation. Server configuration parameters virtual_host and tcpip_socket have been replaced with a more general parameter listen_addresses . Also, the server now listens on localhost by default, which eliminates the need for the -i postmaster switch in many scenarios. Server configuration parameters SortMem and VacuumMem have been renamed to work_mem and maintenance_work_mem to better reflect their use. The original names are still supported in SET and SHOW . Server configuration parameters log_pid , log_timestamp , and log_source_port have been replaced with a more general parameter log_line_prefix . Server configuration parameter syslog has been replaced with a more logical log_destination variable to control the log output destination. Server configuration parameter log_statement has been changed so it can selectively log just database modification or data definition statements. Server configuration parameter log_duration now prints only when log_statement prints the query. Server configuration parameter max_expr_depth parameter has been replaced with max_stack_depth which measures the physical stack size rather than the expression nesting depth. This helps prevent session termination due to stack overflow caused by recursive functions. The length() function no longer counts trailing spaces in CHAR(n) values. Casting an integer to BIT(N) selects the rightmost N bits of the integer, not the leftmost N bits as before. Updating an element or slice of a NULL array value now produces a nonnull array result, namely an array containing just the assigned-to positions. Syntax checking of array input values has been tightened up considerably. Junk that was previously allowed in odd places with odd results now causes an error. Empty-string element values must now be written as "" , rather than writing nothing. Also changed behavior with respect to whitespace surrounding array elements: trailing whitespace is now ignored, for symmetry with leading whitespace (which has always been ignored). Overflow in integer arithmetic operations is now detected and reported as an error. The arithmetic operators associated with the single-byte "char" data type have been removed. The extract() function (also called date_part ) now returns the proper year for BC dates. It previously returned one less than the correct year. The function now also returns the proper values for millennium and century. CIDR values now must have their nonmasked bits be zero. For example, we no longer allow 204.248.199.1/31 as a CIDR value. Such values should never have been accepted by PostgreSQL and will now be rejected. EXECUTE now returns a completion tag that matches the executed statement. psql 's \\copy command now reads or writes to the query's stdin/stdout , rather than psql 's stdin/stdout . The previous behavior can be accessed via new pstdin / pstdout parameters. The JDBC client interface has been removed from the core distribution, and is now hosted at . The Tcl client interface has also been removed. There are several Tcl interfaces now hosted at . The server now uses its own time zone database, rather than the one supplied by the operating system. This will provide consistent behavior across all platforms. In most cases, there should be little noticeable difference in time zone behavior, except that the time zone names used by SET / SHOW TimeZone might be different from what your platform provides. Configure 's threading option no longer requires users to run tests or edit configuration files; threading options are now detected automatically. Now that tablespaces have been implemented, initlocation has been removed. The API for user-defined GiST indexes has been changed. The Union and PickSplit methods are now passed a pointer to a special GistEntryVector structure, rather than a bytea .
8	1	15	A dump/restore is not required for those running 8.1.X. However, if you are upgrading from a version earlier than 8.1.2, see the release notes for 8.1.2. Also, if you were running a previous 8.1.X release, it is recommended to REINDEX all GiST indexes after the upgrade.
8	0	21	
8	0	20	
8	0	19	
8	0	18	
8	0	17	
8	0	16	
8	0	15	
8	0	14	
8	0	13	
8	0	12	
8	1	4	A dump/restore is not required for those running 8.1.X. However, if you are upgrading from a version earlier than 8.1.2, see the release notes for 8.1.2. Full security against the SQL-injection attacks described in CVE-2006-2313 and CVE-2006-2314 might require changes in application code. If you have applications that embed untrustworthy strings into SQL commands, you should examine them as soon as possible to ensure that they are using recommended escaping techniques. In most cases, applications should be using subroutines provided by libraries or drivers (such as libpq 's PQescapeStringConn() ) to perform string escaping, rather than relying on ad hoc code to do it.
8	1	2	A dump/restore is not required for those running 8.1.X. However, you might need to REINDEX indexes on textual columns after updating, if you are affected by the locale or plperl issues described below.
8	1	1	A dump/restore is not required for those running 8.1.X.
8	1	0	A dump/restore using pg_dump is required for those wishing to migrate data from any previous release. The 8.0 release announced that the to_char() function for intervals would be removed in 8.1. However, since no better API has been suggested, to_char(interval) has been enhanced in 8.1 and will remain in the server. Observe the following incompatibilities: add_missing_from is now false by default (Neil) By default, we now generate an error if a table is used in a query without a FROM reference. The old behavior is still available, but the parameter must be set to 'true' to obtain it. It might be necessary to set add_missing_from to true in order to load an existing dump file, if the dump contains any views or rules created using the implicit- FROM syntax. This should be a one-time annoyance, because PostgreSQL 8.1 will convert such views and rules to standard explicit- FROM syntax. Subsequent dumps will therefore not have the problem. Cause input of a zero-length string ( '' ) for float4 / float8 / oid to throw an error, rather than treating it as a zero (Neil) This change is consistent with the current handling of zero-length strings for integers. The schedule for this change was announced in 8.0. default_with_oids is now false by default (Neil) With this option set to false, user-created tables no longer have an OID column unless WITH OIDS is specified in CREATE TABLE . Though OIDs have existed in all releases of PostgreSQL , their use is limited because they are only four bytes long and the counter is shared across all installed databases. The preferred way of uniquely identifying rows is via sequences and the SERIAL type, which have been supported since PostgreSQL 6.4. Add E'' syntax so eventually ordinary strings can treat backslashes literally (Bruce) Currently PostgreSQL processes a backslash in a string literal as introducing a special escape sequence, e.g. \\n or \\010 . While this allows easy entry of special values, it is nonstandard and makes porting of applications from other databases more difficult. For this reason, the PostgreSQL project is planning to remove the special meaning of backslashes in strings. For backward compatibility and for users who want special backslash processing, a new string syntax has been created. This new string syntax is formed by writing an E immediately preceding the single quote that starts the string, e.g. E'hi\\n' . While this release does not change the handling of backslashes in strings, it does add new configuration parameters to help users migrate applications for future releases: standard_conforming_strings &mdash; does this release treat backslashes literally in ordinary strings? escape_string_warning &mdash; warn about backslashes in ordinary (non-E) strings The standard_conforming_strings value is read-only. Applications can retrieve the value to know how backslashes are processed. (Presence of the parameter can also be taken as an indication that E'' string syntax is supported.) In a future release, standard_conforming_strings will be true, meaning backslashes will be treated literally in non-E strings. To prepare for this change, use E'' strings in places that need special backslash processing, and turn on escape_string_warning to find additional strings that need to be converted to use E'' . Also, use two single-quotes ( '' ) to embed a literal single-quote in a string, rather than the PostgreSQL -supported syntax of backslash single-quote ( \\' ). The former is standards-conforming and does not require the use of the E'' string syntax. You can also use the $$ string syntax, which does not treat backslashes specially. Make REINDEX DATABASE reindex all indexes in the database (Tom) Formerly, REINDEX DATABASE reindexed only system tables. This new behavior seems more intuitive. A new command REINDEX SYSTEM provides the old functionality of reindexing just the system tables. Read-only large object descriptors now obey MVCC snapshot semantics When a large object is opened with INV_READ (and not INV_WRITE ), the data read from the descriptor will now reflect a snapshot of the large object's state at the time of the transaction snapshot in use by the query that called lo_open() . To obtain the old behavior of always returning the latest committed data, include INV_WRITE in the mode flags for lo_open() . Add proper dependencies for arguments of sequence functions (Tom) In previous releases, sequence names passed to nextval() , currval() , and setval() were stored as simple text strings, meaning that renaming or dropping a sequence used in a DEFAULT clause made the clause invalid. This release stores all newly-created sequence function arguments as internal OIDs, allowing them to track sequence renaming, and adding dependency information that prevents improper sequence removal. It also makes such DEFAULT clauses immune to schema renaming and search path changes. Some applications might rely on the old behavior of run-time lookup for sequence names. This can still be done by explicitly casting the argument to text , for example nextval('myseq'::text) . Pre-8.1 database dumps loaded into 8.1 will use the old text-based representation and therefore will not have the features of OID-stored arguments. However, it is possible to update a database containing text-based DEFAULT clauses. First, save this query into a file, such as fixseq.sql : SELECT 'ALTER TABLE ' || pg_catalog.quote_ident(n.nspname) || '.' || pg_catalog.quote_ident(c.relname) || ' ALTER COLUMN ' || pg_catalog.quote_ident(a.attname) || ' SET DEFAULT ' || regexp_replace(d.adsrc, $$val\\(\\(('[^']*')::text\\)::regclass$$, $$val(\\1$$, 'g') || ';' FROM pg_namespace n, pg_class c, pg_attribute a, pg_attrdef d WHERE n.oid = c.relnamespace AND c.oid = a.attrelid AND a.attrelid = d.adrelid AND a.attnum = d.adnum AND d.adsrc ~ $$val\\(\\('[^']*'::text\\)::regclass$$; Next, run the query against a database to find what adjustments are required, like this for database db1 : psql -t -f fixseq.sql db1 This will show the ALTER TABLE commands needed to convert the database to the newer OID-based representation. If the commands look reasonable, run this to update the database: psql -t -f fixseq.sql db1 | psql -e db1 This process must be repeated in each database to be updated. In psql , treat unquoted \\{digit}+ sequences as octal (Bruce) In previous releases, \\{digit}+ sequences were treated as decimal, and only \\0{digit}+ were treated as octal. This change was made for consistency. Remove grammar productions for prefix and postfix % and ^ operators (Tom) These have never been documented and complicated the use of the modulus operator ( % ) with negative numbers. Make &amp;&lt; and &amp;&gt; for polygons consistent with the box "over" operators (Tom) CREATE LANGUAGE can ignore the provided arguments in favor of information from pg_pltemplate (Tom) A new system catalog pg_pltemplate has been defined to carry information about the preferred definitions of procedural languages (such as whether they have validator functions). When an entry exists in this catalog for the language being created, CREATE LANGUAGE will ignore all its parameters except the language name and instead use the catalog information. This measure was taken because of increasing problems with obsolete language definitions being loaded by old dump files. As of 8.1, pg_dump will dump procedural language definitions as just CREATE LANGUAGE name , relying on a template entry to exist at load time. We expect this will be a more future-proof representation. Make pg_cancel_backend(int) return a boolean rather than an integer (Neil) Some users are having problems loading UTF-8 data into 8.1.X. This is because previous versions allowed invalid UTF-8 byte sequences to be entered into the database, and this release properly accepts only valid UTF-8 sequences. One way to correct a dumpfile is to run the command iconv -c -f UTF-8 -t UTF-8 -o cleanfile.sql dumpfile.sql . The -c option removes invalid character sequences. A diff of the two files will show the sequences that are invalid. iconv reads the entire input file into memory so it might be necessary to use split to break up the dump into multiple smaller files for processing.
8	1	9	
8	1	8	
8	1	7	
8	1	6	
8	1	5	
8	1	3	
8	3	5	A dump/restore is not required for those running 8.3.X. However, if you are upgrading from a version earlier than 8.3.1, see the release notes for 8.3.1. Also, if you were running a previous 8.3.X release, it is recommended to REINDEX all GiST indexes after the upgrade.
8	2	11	A dump/restore is not required for those running 8.2.X. However, if you are upgrading from a version earlier than 8.2.7, see the release notes for 8.2.7. Also, if you were running a previous 8.2.X release, it is recommended to REINDEX all GiST indexes after the upgrade.
8	2	7	A dump/restore is not required for those running 8.2.X. However, you might need to REINDEX indexes on textual columns after updating, if you are affected by the Windows locale issue described below.
8	2	1	A dump/restore is not required for those running 8.2.
8	2	0	A dump/restore using pg_dump is required for those wishing to migrate data from any previous release. Observe the following incompatibilities: Set escape_string_warning to on by default (Bruce) This issues a warning if backslash escapes are used in non-escape (non- E'' ) strings . Change the row constructor syntax ( ROW(...) ) so that list elements foo.* will be expanded to a list of their member fields, rather than creating a nested row type field as formerly (Tom) The new behavior is substantially more useful since it allows, for example, triggers to check for data changes with IF row(new.*) IS DISTINCT FROM row(old.*) . The old behavior is still available by omitting .* . Make row comparisons follow SQL standard semantics and allow them to be used in index scans (Tom) Previously, row = and &lt;&gt; comparisons followed the standard but &lt; &lt;= &gt; &gt;= did not. A row comparison can now be used as an index constraint for a multicolumn index matching the row value. Make row IS NOT NULL tests follow SQL standard semantics (Tom) The former behavior conformed to the standard for simple cases with IS NULL , but IS NOT NULL would return true if any row field was non-null, whereas the standard says it should return true only when all fields are non-null. Make SET CONSTRAINT affect only one constraint (Kris Jurka) In previous releases, SET CONSTRAINT modified all constraints with a matching name. In this release, the schema search path is used to modify only the first matching constraint. A schema specification is also supported. This more nearly conforms to the SQL standard. Remove RULE permission for tables, for security reasons (Tom) As of this release, only a table's owner can create or modify rules for the table. For backwards compatibility, GRANT / REVOKE RULE is still accepted, but it does nothing. Array comparison improvements (Tom) Now array dimensions are also compared. Change array concatenation to match documented behavior (Tom) This changes the previous behavior where concatenation would modify the array lower bound. Make command-line options of postmaster and postgres identical (Peter) This allows the postmaster to pass arguments to each backend without using -o . Note that some options are now only available as long-form options, because there were conflicting single-letter options. Deprecate use of postmaster symbolic link (Peter) postmaster and postgres commands now act identically, with the behavior determined by command-line options. The postmaster symbolic link is kept for compatibility, but is not really needed. Change log_duration to output even if the query is not output (Tom) In prior releases, log_duration only printed if the query appeared earlier in the log. Make to_char(time) and to_char(interval) treat HH and HH12 as 12-hour intervals Most applications should use HH24 unless they want a 12-hour display. Zero unmasked bits in conversion from INET to CIDR (Tom) This ensures that the converted value is actually valid for CIDR . Remove australian_timezones configuration variable (Joachim Wieland) This variable has been superseded by a more general facility for configuring timezone abbreviations. Improve cost estimation for nested-loop index scans (Tom) This might eliminate the need to set unrealistically small values of random_page_cost . If you have been using a very small random_page_cost , please recheck your test cases. Change behavior of pg_dump -n and -t options. (Greg Sabino Mullane) See the pg_dump manual page for details. Change libpq PQdsplen() to return a useful value (Martijn van Oosterhout) Declare libpq PQgetssl() as returning void * , rather than SSL * (Martijn van Oosterhout) This allows applications to use the function without including the OpenSSL headers. C-language loadable modules must now include a PG_MODULE_MAGIC macro call for version compatibility checking (Martijn van Oosterhout) For security's sake, modules used by a PL/PerlU function are no longer available to PL/Perl functions (Andrew) This also implies that data can no longer be shared between a PL/Perl function and a PL/PerlU function. Some Perl installations have not been compiled with the correct flags to allow multiple interpreters to exist within a single process. In this situation PL/Perl and PL/PerlU cannot both be used in a single backend. The solution is to get a Perl installation which supports multiple interpreters. In contrib/xml2/ , rename xml_valid() to xml_is_well_formed() (Tom) xml_valid() will remain for backward compatibility, but its behavior will change to do schema checking in a future release. Remove contrib/ora2pg/ , now at Remove contrib modules that have been migrated to PgFoundry: adddepend , dbase , dbmirror , fulltextindex , mac , userlock Remove abandoned contrib modules: mSQL-interface , tips Remove QNX and BEOS ports (Bruce) These ports no longer had active maintainers.
8	3	1	A dump/restore is not required for those running 8.3.X. However, you might need to REINDEX indexes on textual columns after updating, if you are affected by the Windows locale issue described below.
8	0	11	
8	0	10	
8	0	9	
8	0	7	
8	0	5	
8	0	4	
8	1	17	
8	1	16	
8	1	14	
8	1	13	
8	1	12	
8	1	11	
8	1	10	
8	3	7	
8	3	6	
8	3	4	
8	2	13	
8	2	12	
8	2	10	
8	2	9	
8	2	8	
8	2	6	
8	2	5	
8	2	4	
8	2	3	
8	2	2	
8	3	3	
8	3	2	
8	3	0	
8	4	0	
\.


--
-- Data for Name: fixes; Type: TABLE DATA; Schema: public; Owner: -
--

COPY fixes (super, major, minor, fix_md5, fix_desc, fix_tsv) FROM stdin;
8	0	21	823a5ca6b2bbd23f7396677c912fcb2a	Prevent error recursion crashes when encoding conversion fails (Tom) This change extends fixes made in the last two minor releases for related failure scenarios. The previous fixes were narrowly tailored for the original problem reports, but we have now recognized that any error thrown by an encoding conversion function could potentially lead to infinite recursion while trying to report the error. The solution therefore is to disable translation and encoding conversion and report the plain-ASCII form of any error message, if we find we have gotten into a recursive error reporting situation. (CVE-2009-0922)	'-0922':97 '-2009':96 'ascii':77 'chang':11 'convers':7,48,71 'could':50 'crash':4 'cve':95 'disabl':67 'encod':6,47,70 'error':2,43,61,81,92 'extend':12 'fail':8 'failur':23 'find':85 'fix':13,27 'form':78 'function':49 'gotten':88 'infinit':54 'last':17 'lead':52 'made':14 'messag':82 'minor':19 'narrowli':29 'origin':33 'plain':76 'plain-ascii':75 'potenti':51 'prevent':1 'previous':26 'problem':34 'recogn':40 'recurs':3,55,91 'relat':22 'releas':20 'report':35,59,73,93 'scenario':24 'situat':94 'solut':63 'tailor':30 'therefor':64 'thrown':44 'tom':9 'translat':68 'tri':57 'two':18
8	0	21	029dd667f0b3c50067008fadae2d5c39	Disallow CREATE CONVERSION with the wrong encodings for the specified conversion function (Heikki) This prevents one possible scenario for encoding conversion failure. The previous change is a backstop to guard against other kinds of failures in the same area.	'area':39 'backstop':28 'chang':25 'convers':3,11,21 'creat':2 'disallow':1 'encod':7,20 'failur':22,35 'function':12 'guard':30 'heikki':13 'kind':33 'one':16 'possibl':17 'prevent':15 'previous':24 'scenario':18 'specifi':10 'wrong':6
8	0	21	c57ebc9c3b373992f1a0ed31f9e15011	Fix core dump when to_char() is given format codes that are inappropriate for the type of the data argument (Tom)	'argument':20 'char':6 'code':10 'core':2 'data':19 'dump':3 'fix':1 'format':9 'given':8 'inappropri':13 'tom':21 'type':16
8	0	21	16364a26b80915323dd1cc503f14e851	Add MUST (Mauritius Island Summer Time) to the default list of known timezone abbreviations (Xavier Bugaud)	'abbrevi':14 'add':1 'bugaud':16 'default':9 'island':4 'known':12 'list':10 'mauritius':3 'must':2 'summer':5 'time':6 'timezon':13 'xavier':15
8	0	20	43d54f6f6facad24a74fae2bf1fc594a	Improve handling of URLs in headline() function (Teodor)	'function':7 'handl':2 'headlin':6 'improv':1 'teodor':8 'url':4
8	0	20	b7a30488addd44acfd80b1a32536ed98	Improve handling of overlength headlines in headline() function (Teodor)	'function':8 'handl':2 'headlin':5,7 'improv':1 'overlength':4 'teodor':9
8	0	20	6c4bde05922323122598c20e06c184ff	Prevent possible Assert failure or misconversion if an encoding conversion is created with the wrong conversion function for the specified pair of encodings (Tom, Heikki)	'assert':3 'convers':10,16 'creat':12 'encod':9,23 'failur':4 'function':17 'heikki':25 'misconvers':6 'pair':21 'possibl':2 'prevent':1 'specifi':20 'tom':24 'wrong':15
8	0	20	ee82c3df361cb89bcd075dbbc6f1a63f	Avoid unnecessary locking of small tables in VACUUM (Heikki)	'avoid':1 'heikki':9 'lock':3 'small':5 'tabl':6 'unnecessari':2 'vacuum':8
8	0	20	1bb29607166f04c974553f29bc64a1e7	Fix uninitialized variables in contrib/tsearch2 's get_covers() function (Teodor)	'contrib/tsearch2':5 'cover':8 'fix':1 'function':9 'get':7 'teodor':10 'uniniti':2 'variabl':3
8	0	20	7dbc05bf9e4f556ca7d7446dd7b76cea	Make all documentation reference pgsql-bugs and/or pgsql-hackers as appropriate, instead of the now-decommissioned pgsql-ports and pgsql-patches mailing lists (Tom)	'and/or':8 'appropri':13 'bug':7 'decommiss':19 'document':3 'hacker':11 'instead':14 'list':28 'mail':27 'make':1 'now-decommiss':17 'patch':26 'pgsql':6,10,21,25 'pgsql-bug':5 'pgsql-hacker':9 'pgsql-patch':24 'pgsql-port':20 'port':22 'refer':4 'tom':29
8	0	20	a137f3d11406ba38e754a4441b9e6752	Update time zone data files to tzdata release 2009a (for Kathmandu and historical DST corrections in Switzerland, Cuba)	'2009a':9 'correct':15 'cuba':18 'data':4 'dst':14 'file':5 'histor':13 'kathmandu':11 'releas':8 'switzerland':17 'time':2 'tzdata':7 'updat':1 'zone':3
8	0	19	397c350d8275d5b104e3c065081708a7	Fix backend crash when the client encoding cannot represent a localized error message (Tom) We have addressed similar issues before, but it would still fail if the character has no equivalent message itself couldn't be converted. The fix is to disable localization and send the plain ASCII error message when we detect such a situation.	'address':17 'ascii':48 'backend':2 'cannot':8 'charact':28 'client':6 'convert':37 'couldn':34 'crash':3 'detect':53 'disabl':42 'encod':7 'equival':31 'error':12,49 'fail':25 'fix':1,39 'issu':19 'local':11,43 'messag':13,32,50 'plain':47 'repres':9 'send':45 'similar':18 'situat':56 'still':24 'tom':14 'would':23
8	0	19	a9f7d93fbd56975e91b88bbe9416360c	Fix possible crash when deeply nested functions are invoked from a trigger (Tom)	'crash':3 'deepli':5 'fix':1 'function':7 'invok':9 'nest':6 'possibl':2 'tom':13 'trigger':12
8	0	19	5331107353ccbe0920d333113a7771a2	Ensure an error is reported when a newly-defined PL/pgSQL trigger function is invoked as a normal function (Tom)	'defin':10 'ensur':1 'error':3 'function':13,19 'invok':15 'newli':9 'newly-defin':8 'normal':18 'pl/pgsql':11 'report':5 'tom':20 'trigger':12
8	0	19	a5725c9b8bbcbc0c04c9614744987fb8	Fix incorrect tsearch2 headline generation when single query item matches first word of text (Sushant Sinha)	'first':11 'fix':1 'generat':5 'headlin':4 'incorrect':2 'item':9 'match':10 'queri':8 'singl':7 'sinha':16 'sushant':15 'text':14 'tsearch2':3 'word':12
8	0	19	46ec7f88abf6be219a4abca766871823	Fix improper display of fractional seconds in interval values when using a non-ISO datestyle in an --enable-integer-datetimes build (Ron Mayer)	'build':23 'datestyl':16 'datetim':22 'display':3 'enabl':20 'enable-integer-datetim':19 'fix':1 'fraction':5 'improp':2 'integ':21 'interv':8 'iso':15 'mayer':25 'non':14 'non-iso':13 'ron':24 'second':6 'use':11 'valu':9
8	0	16	b8bc3d8f2054b5621751e05d0543026b	Fix input of datetime values for February 29 in years BC (Tom) The former coding was mistaken about which years were leap years.	'29':8 'bc':11 'code':15 'datetim':4 'februari':7 'fix':1 'former':14 'input':2 'leap':22 'mistaken':17 'tom':12 'valu':5 'year':10,20,23
8	1	0	4f6efae29809292959b05680833b1184	pg_database_size()	'databas':2 'pg':1 'size':3
8	0	16	fd658d336c599356fbaa956aedd2e10c	Fix ALTER TABLE ADD COLUMN ... PRIMARY KEY so that the new column is correctly checked to see if it's been initialized to all non-nulls (Brendan Jurd) Previous versions neglected to check this requirement at all.	'add':4 'alter':2 'brendan':28 'check':15,34 'column':5,12 'correct':14 'fix':1 'initi':22 'jurd':29 'key':7 'neglect':32 'new':11 'non':26 'non-nul':25 'null':27 'previous':30 'primari':6 'requir':36 'see':17 'tabl':3 'version':31
8	0	19	c706c337d807900d535ad406ff966b86	Ensure SPI_getvalue and SPI_getbinval behave correctly when the passed tuple and tuple descriptor have different numbers of columns (Tom) This situation is normal when a table has had columns added or removed, but these two functions didn't handle it properly. The only likely consequence is an incorrect error indication.	'ad':32 'behav':7 'column':20,31 'consequ':47 'correct':8 'descriptor':15 'didn':39 'differ':17 'ensur':1 'error':51 'function':38 'getbinv':6 'getvalu':3 'handl':41 'incorrect':50 'indic':52 'like':46 'normal':25 'number':18 'pass':11 'proper':43 'remov':34 'situat':23 'spi':2,5 'tabl':28 'tom':21 'tupl':12,14 'two':37
8	0	19	43c7ba1e126dbbe471ef5bddf76ee716	Fix ecpg 's parsing of CREATE USER (Michael)	'creat':6 'ecpg':2 'fix':1 'michael':8 'pars':4 'user':7
8	0	19	3dbfb8a024c3fd8d3d1d95d750222bf3	Fix recent breakage of pg_ctl restart (Tom)	'breakag':3 'ctl':6 'fix':1 'pg':5 'recent':2 'restart':7 'tom':8
8	0	19	9bf87483bd69d58d2b6e0cd2934c66ef	Update time zone data files to tzdata release 2008i (for DST law changes in Argentina, Brazil, Mauritius, Syria)	'2008i':9 'argentina':15 'brazil':16 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':17 'releas':8 'syria':18 'time':2 'tzdata':7 'updat':1 'zone':3
8	0	18	ac11de008a8e58a5d1dbb3b637bdfedf	Widen local lock counters from 32 to 64 bits (Tom) This responds to reports that the counters could overflow in sufficiently long transactions, leading to unexpected lock is already held errors.	'32':6 '64':8 'alreadi':29 'bit':9 'could':18 'counter':4,17 'error':31 'held':30 'lead':24 'local':2 'lock':3,27 'long':22 'overflow':19 'report':14 'respond':12 'suffici':21 'tom':10 'transact':23 'unexpect':26 'widen':1
8	0	18	597761c6603cf784d2292b20f0f4062b	Add checks in executor startup to ensure that the tuples produced by an INSERT or UPDATE will match the target table's current rowtype (Tom) ALTER COLUMN TYPE , followed by re-use of a previously cached plan, could produce this type of situation. The check protects against data corruption and/or crashes that could ensue.	'add':1 'alter':26 'and/or':51 'cach':37 'check':2,46 'column':27 'corrupt':50 'could':39,54 'crash':52 'current':23 'data':49 'ensu':55 'ensur':7 'executor':4 'follow':29 'insert':14 'match':18 'plan':38 'previous':36 'produc':11,40 'protect':47 're':32 're-us':31 'rowtyp':24 'situat':44 'startup':5 'tabl':21 'target':20 'tom':25 'tupl':10 'type':28,42 'updat':16 'use':33
8	0	18	2a23a4ad2dad26a347325d454794dd21	Fix datetime input functions to correctly detect integer overflow when running on a 64-bit platform (Tom)	'64':14 'bit':15 'correct':6 'datetim':2 'detect':7 'fix':1 'function':4 'input':3 'integ':8 'overflow':9 'platform':16 'run':11 'tom':17
8	0	18	29a9d16ebb0879a3ca692b8fd6f2b3c5	Improve performance of writing very long log messages to syslog (Tom)	'improv':1 'log':7 'long':6 'messag':8 'perform':2 'syslog':10 'tom':11 'write':4
8	0	18	47d3340fd4ac365b13ef28eab8d4437a	Fix bug in backwards scanning of a cursor on a SELECT DISTINCT ON query (Tom)	'backward':4 'bug':2 'cursor':8 'distinct':12 'fix':1 'queri':14 'scan':5 'select':11 'tom':15
8	0	18	759db704b2320d4bc4bccae74a052ec0	Fix planner to estimate that GROUP BY expressions yielding boolean results always result in two groups, regardless of the expressions' contents (Tom) This is very substantially more accurate than the regular GROUP BY estimate for certain boolean tests like col IS NULL .	'accur':28 'alway':12 'boolean':10,37 'certain':36 'col':40 'content':21 'estim':4,34 'express':8,20 'fix':1 'group':6,16,32 'like':39 'null':42 'planner':2 'regardless':17 'regular':31 'result':11,13 'substanti':26 'test':38 'tom':22 'two':15 'yield':9
8	0	18	70fc9a4f185e818e99c7bfe937165c65	Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful about the encoding of data sent to or from Tcl (Tom)	'8.5':8 'behav':4 'care':13 'correct':5 'data':18 'encod':16 'fix':1 'pl/tcl':2 'sent':19 'tcl':7,23 'tom':24
8	0	18	764f898bd5f6c99028b328896da9416c	Fix PL/Python to work with Python 2.5 This is a back-port of fixes made during the 8.2 development cycle.	'2.5':7 '8.2':19 'back':12 'back-port':11 'cycl':21 'develop':20 'fix':1,15 'made':16 'pl/python':2 'port':13 'python':6 'work':4
8	0	18	af452e00b3eafc6294a31f6b5d3d0b4d	Improve pg_dump and pg_restore 's error reporting after failure to send a SQL command (Tom)	'command':16 'dump':3 'error':8 'failur':11 'improv':1 'pg':2,5 'report':9 'restor':6 'send':13 'sql':15 'tom':17
8	0	18	1277360c4443f843fc81df97fed6bad1	Fix pg_ctl to properly preserve postmaster command-line arguments across a restart (Bruce)	'across':12 'argument':11 'bruce':15 'command':9 'command-lin':8 'ctl':3 'fix':1 'line':10 'pg':2 'postmast':7 'preserv':6 'proper':5 'restart':14
8	0	18	ec45c869c77e0c74a72c406fa0d7e4e0	Update time zone data files to tzdata release 2008f (for DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco, Pakistan, Palestine, and Paraguay)	'2008f':9 'argentina':15 'bahama':16 'brazil':17 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':18 'morocco':19 'pakistan':20 'palestin':21 'paraguay':23 'releas':8 'time':2 'tzdata':7 'updat':1 'zone':3
8	0	16	b38bcdf66579d921c9948bc8573ee4e6	Fix unrecognized node type error in some variants of ALTER OWNER (Tom)	'alter':10 'error':5 'fix':1 'node':3 'owner':11 'tom':12 'type':4 'unrecogn':2 'variant':8
8	0	16	b29a1d221ce8a748eb7df87b6ea5daad	Fix pg_ctl to correctly extract the postmaster's port number from command-line options (Itagaki Takahiro, Tom) Previously, pg_ctl start -w could try to contact the postmaster on the wrong port, leading to bogus reports of startup failure.	'bogus':37 'command':14 'command-lin':13 'contact':28 'correct':5 'could':25 'ctl':3,22 'extract':6 'failur':41 'fix':1 'itagaki':17 'lead':35 'line':15 'number':11 'option':16 'pg':2,21 'port':10,34 'postmast':8,30 'previous':20 'report':38 'start':23 'startup':40 'takahiro':18 'tom':19 'tri':26 'w':24 'wrong':33
8	0	17	db798581b8b44ea9d6cab7fea4a6bc46	Make pg_get_ruledef() parenthesize negative constants (Tom) Before this fix, a negative constant in a view or rule might be dumped as, say, -42::integer , which is subtly incorrect: it should be (-42)::integer due to operator precedence rules. Usually this would make little difference, but it could interact with another recent patch to cause PostgreSQL to reject what had been a valid SELECT DISTINCT view query. Since this could result in pg_dump output failing to reload, it is being treated as a high-priority fix. The only released versions in which dump output is actually incorrect are 8.3.1 and 8.2.7.	'-42':25,34 '8.2.7':104 '8.3.1':102 'actual':99 'anoth':52 'caus':56 'constant':7,14 'could':49,71 'differ':46 'distinct':66 'due':36 'dump':22,75,96 'fail':77 'fix':11,89 'get':3 'high':87 'high-prior':86 'incorrect':30,100 'integ':26,35 'interact':50 'littl':45 'make':1,44 'might':20 'negat':6,13 'oper':38 'output':76,97 'parenthes':5 'patch':54 'pg':2,74 'postgresql':57 'preced':39 'prioriti':88 'queri':68 'recent':53 'reject':59 'releas':92 'reload':79 'result':72 'rule':19,40 'ruledef':4 'say':24 'select':65 'sinc':69 'subt':29 'tom':8 'treat':83 'usual':41 'valid':64 'version':93 'view':17,67 'would':43
8	0	7	f70e81a108893153336f56e65603aaa8	Fix pg_ctl unregister crash	'crash':5 'ctl':3 'fix':1 'pg':2 'unregist':4
8	0	16	e8ee123b907c8cf7dd2057da017d9806	Fix possible CREATE TABLE failure when inheriting the same constraint from multiple parent relations that inherited that constraint from a common ancestor (Tom)	'ancestor':22 'common':21 'constraint':10,18 'creat':3 'failur':5 'fix':1 'inherit':7,16 'multipl':12 'parent':13 'possibl':2 'relat':14 'tabl':4 'tom':23
8	0	16	56c8907c422c955208a03b738693a4a2	Fix conversions between ISO-8859-5 and other encodings to handle Cyrillic Yo characters ( e and E with two dots) (Sergey Burladyan)	'-5':6 '-8859':5 'burladyan':22 'charact':14 'convers':2 'cyril':12 'dot':20 'e':15,17 'encod':9 'fix':1 'handl':11 'iso':4 'sergey':21 'two':19 'yo':13
8	0	16	6a545c4dbe1c23a5889e0456db80ab36	Fix a few datatype input functions that were allowing unused bytes in their results to contain uninitialized, unpredictable values (Tom) This could lead to failures in which two apparently identical literal values were not seen as equal, resulting in the parser complaining about unmatched ORDER BY and DISTINCT expressions.	'allow':9 'appar':29 'byte':11 'complain':42 'contain':16 'could':22 'datatyp':4 'distinct':48 'equal':37 'express':49 'failur':25 'fix':1 'function':6 'ident':30 'input':5 'lead':23 'liter':31 'order':45 'parser':41 'result':14,38 'seen':35 'tom':20 'two':28 'uniniti':17 'unmatch':44 'unpredict':18 'unus':10 'valu':19,32
8	0	16	e433bfce0c4b7a064ae159dec508499a	Fix a corner case in regular-expression substring matching ( substring( string from pattern ) ) (Tom) The problem occurs when there is a match to the pattern overall but the user has specified a parenthesized subexpression and that subexpression hasn't got a match. An example is substring('foo' from 'foo(bar)?') . This should return NULL, since (bar) isn't matched, but it was mistakenly returning the whole-pattern match instead (ie, foo ).	'bar':51,57 'case':4 'corner':3 'exampl':45 'express':8 'fix':1 'foo':48,50,73 'got':41 'hasn':39 'ie':72 'instead':71 'isn':58 'match':10,23,43,60,70 'mistaken':64 'null':55 'occur':18 'overal':27 'parenthes':34 'pattern':14,26,69 'problem':17 'regular':7 'regular-express':6 'return':54,65 'sinc':56 'specifi':32 'string':12 'subexpress':35,38 'substr':9,11,47 'tom':15 'user':30 'whole':68 'whole-pattern':67
8	0	16	0f2891810bc28e5cb911544bce857c96	Update time zone data files to tzdata release 2008c (for DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, Argentina/San_Luis, and Chile)	'2008c':9 'argentina/san_luis':21 'chang':13 'chile':23 'choibalsan':17 'cuba':20 'data':4 'dst':11 'file':5 'iraq':16 'law':12 'morocco':15 'pakistan':18 'releas':8 'syria':19 'time':2 'tzdata':7 'updat':1 'zone':3
8	0	16	af9ed9daa5cda7b3ea3e2630d86c6096	Fix incorrect result from ecpg 's PGTYPEStimestamp_sub() function (Michael)	'ecpg':5 'fix':1 'function':9 'incorrect':2 'michael':10 'pgtypestimestamp':7 'result':3 'sub':8
8	0	16	85618920178e644a6e9b0da529179d3f	Fix core dump in contrib/xml2 's xpath_table() function when the input query returns a NULL value (Tom)	'contrib/xml2':5 'core':2 'dump':3 'fix':1 'function':9 'input':12 'null':16 'queri':13 'return':14 'tabl':8 'tom':18 'valu':17 'xpath':7
8	0	16	7058f36c959dfa913985f5108733a09d	Fix contrib/xml2 's makefile to not override CFLAGS (Tom)	'cflag':8 'contrib/xml2':2 'fix':1 'makefil':4 'overrid':7 'tom':9
8	0	16	baaf4d8aa95adf9c0d22e846d2965e96	Fix DatumGetBool macro to not fail with gcc 4.3 (Tom) This problem affects old style (V0) C functions that return boolean. The fix is already in 8.3, but the need to back-patch it was not realized at the time.	'4.3':9 '8.3':27 'affect':13 'alreadi':25 'back':33 'back-patch':32 'boolean':21 'c':17 'datumgetbool':2 'fail':6 'fix':1,23 'function':18 'gcc':8 'macro':3 'need':30 'old':14 'patch':34 'problem':12 'realiz':38 'return':20 'style':15 'time':41 'tom':10 'v0':16
8	0	16	d16a4a28282d8076c9daaad3726e18a4	Fix longstanding LISTEN / NOTIFY race condition (Tom) In rare cases a session that had just executed a LISTEN might not get a notification, even though one would be expected because the concurrent transaction executing NOTIFY was observed to commit later. A side effect of the fix is that a transaction that has executed a not-yet-committed LISTEN command will not see any row in pg_listener for the LISTEN , should it choose to look; formerly it would have. This behavior was never documented one way or the other, but it is possible that some applications depend on the old behavior.	'applic':97 'behavior':82,102 'case':10 'choos':74 'command':60 'commit':39,58 'concurr':32 'condit':6 'depend':98 'document':85 'effect':43 'even':24 'execut':16,34,53 'expect':29 'fix':1,46 'former':77 'get':21 'later':40 'listen':3,18,59,68,71 'longstand':2 'look':76 'might':19 'never':84 'not-yet-commit':55 'notif':23 'notifi':4,35 'observ':37 'old':101 'one':26,86 'pg':67 'possibl':94 'race':5 'rare':9 'row':65 'see':63 'session':12 'side':42 'though':25 'tom':7 'transact':33,50 'way':87 'would':27,79 'yet':57
8	0	16	22e2b118bc322fbc702a325f9ea14c4b	Fix rare crash when an error occurs during a query using a hash index (Heikki)	'crash':3 'error':6 'fix':1 'hash':13 'heikki':15 'index':14 'occur':7 'queri':10 'rare':2 'use':11
8	0	5	cab1c6e71c234f5ef857546e51e3def8	Fix intermittent failure when log_line_prefix	'failur':3 'fix':1 'intermitt':2 'line':6 'log':5 'prefix':7
8	0	16	63140e0cb402e6a602586b52d1374f77	Use -fwrapv to defend against possible misoptimization in recent gcc versions (Tom) This is known to be necessary when building PostgreSQL with gcc 4.3 or later.	'4.3':24 'build':20 'defend':4 'fwrapv':2 'gcc':10,23 'known':15 'later':26 'misoptim':7 'necessari':18 'possibl':6 'postgresql':21 'recent':9 'tom':12 'use':1 'version':11
8	0	16	b22d4f809d56c1061886c50f09a4f512	Fix display of constant expressions in ORDER BY and GROUP BY (Tom) An explictly casted constant would be shown incorrectly. This could for example lead to corruption of a view definition during dump and reload.	'cast':15 'constant':4,16 'corrupt':27 'could':22 'definit':31 'display':2 'dump':33 'exampl':24 'explict':14 'express':5 'fix':1 'group':10 'incorrect':20 'lead':25 'order':7 'reload':35 'shown':19 'tom':12 'view':30 'would':17
8	0	16	fa3c9c91f879f3c15c4c347afe18ab20	Fix libpq to handle NOTICE messages correctly during COPY OUT (Tom) This failure has only been observed to occur when a user-defined datatype's output routine issues a NOTICE, but there is no guarantee it couldn't happen due to other causes.	'caus':44 'copi':9 'correct':7 'couldn':38 'datatyp':25 'defin':24 'due':41 'failur':13 'fix':1 'guarante':36 'handl':4 'happen':40 'issu':29 'libpq':2 'messag':6 'notic':5,31 'observ':17 'occur':19 'output':27 'routin':28 'tom':11 'user':23 'user-defin':22
8	0	15	c4b6b648c757bf7b40c847509e1b8633	Prevent functions in indexes from executing with the privileges of the user running VACUUM , ANALYZE , etc (Tom) Functions used in index expressions and partial-index predicates are evaluated whenever a new table entry is made. It has long been understood that this poses a risk of trojan-horse code execution if one modifies a table owned by an untrustworthy user. (Note that triggers, defaults, check constraints, etc. pose the same type of risk.) But functions in indexes pose extra danger because they will be executed by routine maintenance operations such as VACUUM FULL , which are commonly performed automatically under a superuser account. For example, a nefarious user can execute code with superuser privileges by setting up a trojan-horse index definition and waiting for the next routine vacuum. The fix arranges for standard maintenance operations (including VACUUM , ANALYZE , REINDEX , and CLUSTER ) to execute as the table owner rather than the calling user, using the same privilege-switching mechanism already used for SECURITY DEFINER functions. To prevent bypassing this security measure, execution of SET SESSION AUTHORIZATION and SET ROLE is now forbidden within a SECURITY DEFINER context. (CVE-2007-6600)	'-2007':192 '-6600':193 'account':104 'alreadi':163 'analyz':15,141 'arrang':134 'author':179 'automat':100 'bypass':171 'call':154 'check':67 'cluster':144 'code':51,112 'common':98 'constraint':68 'context':190 'cve':191 'danger':82 'default':66 'defin':167,189 'definit':124 'entri':34 'etc':16,69 'evalu':29 'exampl':106 'execut':6,52,87,111,146,175 'express':22 'extra':81 'fix':133 'forbidden':185 'full':95 'function':2,18,77,168 'hors':50,122 'includ':139 'index':4,21,26,79,123 'long':39 'made':36 'mainten':90,137 'measur':174 'mechan':162 'modifi':55 'nefari':108 'new':32 'next':129 'note':63 'one':54 'oper':91,138 'own':58 'owner':150 'partial':25 'partial-index':24 'perform':99 'pose':44,70,80 'predic':27 'prevent':1,170 'privileg':9,115,160 'privilege-switch':159 'rather':151 'reindex':142 'risk':46,75 'role':182 'routin':89,130 'run':13 'secur':166,173,188 'session':178 'set':117,177,181 'standard':136 'superus':103,114 'switch':161 'tabl':33,57,149 'tom':17 'trigger':65 'trojan':49,121 'trojan-hors':48,120 'type':73 'understood':41 'untrustworthi':61 'use':19,156,164 'user':12,62,109,155 'vacuum':14,94,131,140 'wait':126 'whenev':30 'within':186
8	0	15	8ae0148a5caea8b8cd3344cee4393031	Repair assorted bugs in the regular-expression package (Tom, Will Drewry) Suitably crafted regular-expression patterns could cause crashes, infinite or near-infinite looping, and/or massive memory consumption, all of which pose denial-of-service hazards for applications that accept regex search patterns from untrustworthy sources. (CVE-2007-4769, CVE-2007-4772, CVE-2007-6067)	'-2007':52,55,58 '-4769':53 '-4772':56 '-6067':59 'accept':44 'and/or':28 'applic':42 'assort':2 'bug':3 'caus':20 'consumpt':31 'could':19 'craft':14 'crash':21 'cve':51,54,57 'denial':37 'denial-of-servic':36 'drewri':12 'express':8,17 'hazard':40 'infinit':22,26 'loop':27 'massiv':29 'memori':30 'near':25 'near-infinit':24 'packag':9 'pattern':18,47 'pose':35 'regex':45 'regular':7,16 'regular-express':6,15 'repair':1 'search':46 'servic':39 'sourc':50 'suitabl':13 'tom':10 'untrustworthi':49
8	0	15	567a41e5fda004fc01be863408da4cee	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe) The fix that appeared for this in 8.0.14 was incomplete, as it plugged the hole for only some dblink functions. (CVE-2007-6601, CVE-2007-3278)	'-2007':39,42 '-3278':43 '-6601':40 '/contrib/dblink':7 '8.0.14':25 'appear':21 'authent':12 'cve':38,41 'dblink':36 'fix':19 'function':37 'hole':32 'incomplet':27 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'plug':30 'requir':1 'secur':15 'superus':4 'use':6,9
8	0	15	305c03cbff33863c0a250e2399f1f18a	Update time zone data files to tzdata release 2007k (in particular, recent Argentina changes) (Tom)	'2007k':9 'argentina':13 'chang':14 'data':4 'file':5 'particular':11 'recent':12 'releas':8 'time':2 'tom':15 'tzdata':7 'updat':1 'zone':3
8	0	15	5b366d0583666ec521ef20ee5b462394	Fix planner failure in some cases of WHERE false AND var IN (SELECT ...) (Tom)	'case':6 'failur':3 'fals':9 'fix':1 'planner':2 'select':13 'tom':14 'var':11
8	0	15	78a9af8843f5b395c4a9ff3f63d128dc	Preserve the tablespace of indexes that are rebuilt by ALTER TABLE ... ALTER COLUMN TYPE (Tom)	'alter':10,12 'column':13 'index':5 'preserv':1 'rebuilt':8 'tabl':11 'tablespac':3 'tom':15 'type':14
8	0	15	ef33d51432038a4695b9c68628854101	Make archive recovery always start a new WAL timeline, rather than only when a recovery stop time was used (Simon) This avoids a corner-case risk of trying to overwrite an existing archived copy of the last WAL segment, and seems simpler and cleaner than the original definition.	'alway':4 'archiv':2,34 'avoid':22 'case':26 'cleaner':45 'copi':35 'corner':25 'corner-cas':24 'definit':49 'exist':33 'last':38 'make':1 'new':7 'origin':48 'overwrit':31 'rather':10 'recoveri':3,15 'risk':27 'seem':42 'segment':40 'simon':20 'simpler':43 'start':5 'stop':16 'time':17 'timelin':9 'tri':29 'use':19 'wal':8,39
8	0	15	794dc8069a09ddc693fe53cf09b27adc	Make VACUUM not use all of maintenance_work_mem when the table is too small for it to be useful (Alvaro)	'alvaro':21 'mainten':7 'make':1 'mem':9 'small':15 'tabl':12 'use':4,20 'vacuum':2 'work':8
8	0	15	c7f6d81b73ec74ba7c7b3ee64a640a9a	Fix potential crash in translate() when using a multibyte database encoding (Tom)	'crash':3 'databas':10 'encod':11 'fix':1 'multibyt':9 'potenti':2 'tom':12 'translat':5 'use':7
8	0	15	68bc57eaaf86b77024b9a921f5d36f28	Fix PL/Perl to cope when platform's Perl defines type bool as int rather than char (Tom) While this could theoretically happen anywhere, no standard build of Perl did things this way ... until Mac OS X 10.5.	'10.5':37 'anywher':23 'bool':11 'build':26 'char':16 'cope':4 'could':20 'defin':9 'fix':1 'happen':22 'int':13 'mac':34 'os':35 'perl':8,28 'pl/perl':2 'platform':6 'rather':14 'standard':25 'theoret':21 'thing':30 'tom':17 'type':10 'way':32 'x':36
8	0	15	6437379ad74d4c454c288ade317f0345	Fix PL/Python to not crash on long exception messages (Alvaro)	'alvaro':10 'crash':5 'except':8 'fix':1 'long':7 'messag':9 'pl/python':2
8	0	5	a581e2b13046c4ac58db9330e8dfbe54	Fix missing updates of pg_group flat	'fix':1 'flat':7 'group':6 'miss':2 'pg':5 'updat':3
8	0	15	1d593e0c82a6a3f2c85be53986e71e8f	Fix pg_dump to correctly handle inheritance child tables that have default expressions different from their parent's (Tom)	'child':8 'correct':5 'default':12 'differ':14 'dump':3 'express':13 'fix':1 'handl':6 'inherit':7 'parent':17 'pg':2 'tabl':9 'tom':19
8	0	15	917c339bfd51ff2af60b9e572987a3cf	ecpg parser fixes (Michael)	'ecpg':1 'fix':3 'michael':4 'parser':2
8	0	7	025c8fe569b29279278436001c17bab5	Fix ecpg crash on AMD64 and PPC	'amd64':5 'crash':3 'ecpg':2 'fix':1 'ppc':7
8	0	15	c8f8576b15626880680c84e5b4dc328a	Make contrib/tablefunc 's crosstab() handle NULL rowid as a category in its own right, rather than crashing (Joe)	'categori':10 'contrib/tablefunc':2 'crash':17 'crosstab':4 'handl':5 'joe':18 'make':1 'null':6 'rather':15 'right':14 'rowid':7
8	0	15	036d79aff0b9227e0da9459e5e07cce5	Fix tsvector and tsquery output routines to escape backslashes correctly (Teodor, Bruce)	'backslash':9 'bruce':12 'correct':10 'escap':8 'fix':1 'output':5 'routin':6 'teodor':11 'tsqueri':4 'tsvector':2
8	0	15	6f17d76da80f19683af3d0504d688def	Fix crash of to_tsvector() on huge input strings (Teodor)	'crash':2 'fix':1 'huge':7 'input':8 'string':9 'teodor':10 'tsvector':5
8	0	15	70f80db23e261362270ca9a1abd9300d	Require a specific version of Autoconf to be used when re-generating the configure script (Peter) This affects developers and packagers only. The change was made to prevent accidental use of untested combinations of Autoconf and PostgreSQL versions. You can remove the version check if you really want to use a different Autoconf version, but it's your responsibility whether the result works or not.	'accident':30 'affect':19 'autoconf':6,36,54 'chang':25 'check':45 'combin':34 'configur':15 'develop':20 'differ':53 'generat':13 'made':27 'packag':22 'peter':17 'postgresql':38 'prevent':29 're':12 're-gener':11 'realli':48 'remov':42 'requir':1 'respons':60 'result':63 'script':16 'specif':3 'untest':33 'use':9,31,51 'version':4,39,44,55 'want':49 'whether':61 'work':64
8	0	14	f496f502109032b6c2c9f57b3091124f	Prevent index corruption when a transaction inserts rows and then aborts close to the end of a concurrent VACUUM on the same table (Tom)	'abort':11 'close':12 'concurr':18 'corrupt':3 'end':15 'index':2 'insert':7 'prevent':1 'row':8 'tabl':23 'tom':24 'transact':6 'vacuum':19
8	0	14	4ac9051dca34f9743b83c747a2fa1cc2	Make CREATE DOMAIN ... DEFAULT NULL work properly (Tom)	'creat':2 'default':4 'domain':3 'make':1 'null':5 'proper':7 'tom':8 'work':6
8	0	14	592b4ba4858e52f2bb8268972581e1ba	Fix excessive logging of SSL error messages (Tom)	'error':6 'excess':2 'fix':1 'log':3 'messag':7 'ssl':5 'tom':8
8	0	14	55d0d0610248620799bc97d4f7b4cd75	Fix logging so that log messages are never interleaved when using the syslogger process (Andrew)	'andrew':15 'fix':1 'interleav':9 'log':2,5 'messag':6 'never':8 'process':14 'syslogg':13 'use':11
8	0	14	f9dc71a4d66ebad0251b3beda15bdfa7	Fix crash when log_min_error_statement logging runs out of memory (Tom)	'crash':2 'error':6 'fix':1 'log':4,8 'memori':12 'min':5 'run':9 'statement':7 'tom':13
8	0	14	5ffafbef3802b627e18cbb9cc135d69e	Fix incorrect handling of some foreign-key corner cases (Tom)	'case':10 'corner':9 'fix':1 'foreign':7 'foreign-key':6 'handl':3 'incorrect':2 'key':8 'tom':11
8	0	14	9bf7339686b6ec627c581e1dce946a7c	Prevent CLUSTER from failing due to attempting to process temporary tables of other sessions (Alvaro)	'alvaro':15 'attempt':7 'cluster':2 'due':5 'fail':4 'prevent':1 'process':9 'session':14 'tabl':11 'temporari':10
8	0	14	711b9416fd8e710aef0a2375bfb35979	Update the time zone database rules, particularly New Zealand's upcoming changes (Tom)	'chang':12 'databas':5 'new':8 'particular':7 'rule':6 'time':3 'tom':13 'upcom':11 'updat':1 'zealand':9 'zone':4
8	0	14	c914e79a4730f03cf0f62d427186b96f	Windows socket improvements (Magnus)	'improv':3 'magnus':4 'socket':2 'window':1
8	0	14	810a3d9feb5c3dd7e4a170ce9f83fe5c	Suppress timezone name ( %Z ) in log timestamps on Windows because of possible encoding mismatches (Tom)	'encod':13 'log':6 'mismatch':14 'name':3 'possibl':12 'suppress':1 'timestamp':7 'timezon':2 'tom':15 'window':9 'z':4
8	0	14	2da747b0978c37a0d34e5c6a70aa1b06	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe)	'/contrib/dblink':7 'authent':12 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'requir':1 'secur':15 'superus':4 'use':6,9
8	0	13	65097a712a80fac1e986f41090348391	Support explicit placement of the temporary-table schema within search_path , and disable searching it for functions and operators (Tom) This is needed to allow a security-definer function to set a truly secure value of search_path . Without it, an unprivileged SQL user can use temporary objects to execute code with the privileges of the security-definer function (CVE-2007-2138). See CREATE FUNCTION for more information.	'-2007':64 '-2138':65 'allow':26 'code':53 'creat':67 'cve':63 'defin':30,61 'disabl':14 'execut':52 'explicit':2 'function':18,31,62,68 'inform':71 'need':24 'object':50 'oper':20 'path':12,40 'placement':3 'privileg':56 'schema':9 'search':11,15,39 'secur':29,36,60 'security-defin':28,59 'see':66 'set':33 'sql':45 'support':1 'tabl':8 'temporari':7,49 'temporary-t':6 'tom':21 'truli':35 'unprivileg':44 'use':48 'user':46 'valu':37 'within':10 'without':41
8	0	13	eaebb1c50531a784b5aa61ef1b4fd472	/contrib/tsearch2 crash fixes (Teodor)	'/contrib/tsearch2':1 'crash':2 'fix':3 'teodor':4
8	0	13	86da84097102640442e98e5383cd4628	Fix potential-data-corruption bug in how VACUUM FULL handles UPDATE chains (Tom, Pavan Deolasee)	'bug':6 'chain':13 'corrupt':5 'data':4 'deolase':16 'fix':1 'full':10 'handl':11 'pavan':15 'potenti':3 'potential-data-corrupt':2 'tom':14 'updat':12 'vacuum':9
8	0	13	92acabfffdb65472842700c99066e3d6	Fix PANIC during enlargement of a hash index (bug introduced in 8.0.10) (Tom)	'8.0.10':12 'bug':9 'enlarg':4 'fix':1 'hash':7 'index':8 'introduc':10 'panic':2 'tom':13
8	0	13	1cb39a0b4e6d434a4654f6f3eef90d72	Fix POSIX-style timezone specs to follow new USA DST rules (Tom)	'dst':11 'fix':1 'follow':8 'new':9 'posix':3 'posix-styl':2 'rule':12 'spec':6 'style':4 'timezon':5 'tom':13 'usa':10
8	0	12	9d79958150491cde6f81f11b5e6df120	Remove overly-restrictive check for type length in constraints and functional indexes(Tom)	'check':5 'constraint':10 'function':12 'index':13 'length':8 'over':3 'overly-restrict':2 'remov':1 'restrict':4 'tom':14 'type':7
8	0	7	b058a259f70629717aa6d04328610df4	Recover properly if error occurs during argument passing	'argument':7 'error':4 'occur':5 'pass':8 'proper':2 'recov':1
8	0	7	c5bde32a74fcad36aac7f37be1d99907	Fix PL/perl 's handling of locales on	'fix':1 'handl':4 'local':6 'pl/perl':2
8	0	7	63640753cbb1a3600f902ae97884ba97	Fix crash when log_min_messages is set to DEBUG3 or above in postgresql.conf on Win32	'crash':2 'debug3':10 'fix':1 'log':4 'messag':6 'min':5 'postgresql.conf':14 'set':8 'win32':16
8	0	11	6c4fa9afd3d73355d828556d01d88a9e	Remove security vulnerabilities that allowed connected users to read backend memory (Tom) The vulnerabilities involve suppressing the normal check that a SQL function returns the data type it's declared to, and changing the data type of a table column (CVE-2007-0555, CVE-2007-0556). These errors can easily be exploited to cause a backend crash, and in principle might be used to read database content that the user should not be able to access.	'-0555':43 '-0556':46 '-2007':42,45 'abl':74 'access':76 'allow':5 'backend':10,56 'caus':54 'chang':33 'check':19 'column':40 'connect':6 'content':67 'crash':57 'cve':41,44 'data':26,35 'databas':66 'declar':30 'easili':50 'error':48 'exploit':52 'function':23 'involv':15 'memori':11 'might':61 'normal':18 'principl':60 'read':9,65 'remov':1 'return':24 'secur':2 'sql':22 'suppress':16 'tabl':39 'tom':12 'type':27,36 'use':63 'user':7,70 'vulner':3,14
8	0	11	ef46235ef75d792dd844638c1b5ccfcc	Fix rare bug wherein btree index page splits could fail due to choosing an infeasible split point (Heikki Linnakangas)	'btree':5 'bug':3 'choos':13 'could':9 'due':11 'fail':10 'fix':1 'heikki':18 'index':6 'infeas':15 'linnakanga':19 'page':7 'point':17 'rare':2 'split':8,16 'wherein':4
8	0	11	3f2f2ffc26baad017a7a1c6e24a1e408	Fix for rare Assert() crash triggered by UNION (Tom)	'assert':4 'crash':5 'fix':1 'rare':3 'tom':9 'trigger':6 'union':8
8	0	11	d7306c5b8c93b070dab79d9ca8f92e8d	Tighten security of multi-byte character processing for UTF8 sequences over three bytes long (Tom)	'byte':6,14 'charact':7 'long':15 'multi':5 'multi-byt':4 'process':8 'secur':2 'sequenc':11 'three':13 'tighten':1 'tom':16 'utf8':10
8	0	10	e7f4c736ef76f23ff46c70e02d280d53	Improve handling of getaddrinfo() on AIX (Tom) This fixes a problem with starting the statistics collector, among other things.	'aix':6 'among':17 'collector':16 'fix':9 'getaddrinfo':4 'handl':2 'improv':1 'problem':11 'start':13 'statist':15 'thing':19 'tom':7
8	0	10	a233229b8218a6880095ea7464f63ce8	Fix failed to re-find parent key errors in VACUUM (Tom)	'error':9 'fail':2 'find':6 'fix':1 'key':8 'parent':7 're':5 're-find':4 'tom':12 'vacuum':11
8	0	10	46abfdf14af6c4643b8b11c43a19f758	Fix race condition for truncation of a large relation across a gigabyte boundary by VACUUM (Tom)	'across':10 'boundari':13 'condit':3 'fix':1 'gigabyt':12 'larg':8 'race':2 'relat':9 'tom':16 'truncat':5 'vacuum':15
8	0	10	c76c6302502734c8d99a521820487ed6	Fix bugs affecting multi-gigabyte hash indexes (Tom)	'affect':3 'bug':2 'fix':1 'gigabyt':6 'hash':7 'index':8 'multi':5 'multi-gigabyt':4 'tom':9
8	0	10	51e383693096455a67bc8479033e398b	Fix possible deadlock in Windows signal handling (Teodor)	'deadlock':3 'fix':1 'handl':7 'possibl':2 'signal':6 'teodor':8 'window':5
8	0	10	d4e60cc7180cd2042ee1bc436b5fd9ee	Fix error when constructing an ARRAY[] made up of multiple empty elements (Tom)	'array':6 'construct':4 'element':12 'empti':11 'error':2 'fix':1 'made':7 'multipl':10 'tom':13
8	0	10	8875a44b7b54a40d41a29f4805f3f9ae	Fix ecpg memory leak during connection (Michael)	'connect':6 'ecpg':2 'fix':1 'leak':4 'memori':3 'michael':7
8	0	10	1187e8adf7b316162db6093a3bc81d19	to_number() and to_char(numeric) are now STABLE , not IMMUTABLE , for new initdb installs (Tom) This is because lc_numeric can potentially change the output of these functions.	'chang':24 'char':5 'function':29 'immut':11 'initdb':14 'instal':15 'lc':20 'new':13 'number':2 'numer':6,21 'output':26 'potenti':23 'stabl':9 'tom':16
8	0	10	c76055f305260b9741ed995773faa1ab	Improve index usage of regular expressions that use parentheses (Tom) This improves psql \\d performance also.	'also':16 'd':14 'express':6 'improv':1,12 'index':2 'parenthes':9 'perform':15 'psql':13 'regular':5 'tom':10 'usag':3 'use':8
8	0	10	1d050dd53c5a09d252bdb8a1a83fa546	Update timezone database This affects Australian and Canadian daylight-savings rules in particular.	'affect':5 'australian':6 'canadian':8 'databas':3 'daylight':10 'daylight-sav':9 'particular':14 'rule':12 'save':11 'timezon':2 'updat':1
8	0	9	dc96fef4bb6262e9be3ff50e6e33d4a3	Fix core dump when an untyped literal is taken as	'core':2 'dump':3 'fix':1 'liter':7 'taken':9 'untyp':6
8	0	9	f3d0c28b0ff78d9e5d7bf20745ee00c5	Fix mishandling of AFTER triggers when query contains a SQL	'contain':8 'fix':1 'mishandl':2 'queri':7 'sql':10 'trigger':5
8	0	9	29c70880039b969c5a4c91fd4245ddd8	Fix ALTER TABLE ... TYPE to recheck	'alter':2 'fix':1 'recheck':6 'tabl':3 'type':4
8	0	9	2778b9070176e9098b51b075aa7cf939	Fix string_to_array() to handle overlapping matches for the separator string For example, string_to_array('123xx456xxx789', 'xx') .	'123xx456xxx789':18 'array':4,17 'exampl':14 'fix':1 'handl':6 'match':8 'overlap':7 'separ':11 'string':2,12,15 'xx':19
8	0	9	9986820bb70a35581017578fa412c434	Fix corner cases in pattern matching for	'case':3 'corner':2 'fix':1 'match':6 'pattern':5
8	0	9	2c370bff6777df387ef83ba627811768	Fix index-corrupting bugs in /contrib/ltree	'/contrib/ltree':7 'bug':5 'corrupt':4 'fix':1 'index':3 'index-corrupt':2
8	0	9	559739a7694b5e3a2f5c3358d17ad13f	Numerous robustness fixes in ecpg (Joachim	'ecpg':5 'fix':3 'joachim':6 'numer':1 'robust':2
8	0	9	629062ca20f9dfc1f18631e78690d87c	Fixes for AIX and	'aix':3 'fix':1
8	1	0	12e18b581d3bee224e8d55518cf0e9bc	pg_relation_size()	'pg':1 'relat':2 'size':3
8	0	8	167f3e08d4ba085cd4a34ff4b46eaa9e	characters in all cases (Tatsuo, Tom) While PostgreSQL has been moving in this direction for some time, the checks are now applied uniformly to all encodings and all textual input, and are now always errors not merely warnings. This change defends against SQL-injection attacks of the type described in CVE-2006-2313.	'-2006':53 '-2313':54 'alway':34 'appli':22 'attack':46 'case':4 'chang':40 'charact':1 'check':19 'cve':52 'defend':41 'describ':50 'direct':14 'encod':26 'error':35 'inject':45 'input':30 'mere':37 'move':11 'postgresql':8 'sql':44 'sql-inject':43 'tatsuo':5 'textual':29 'time':17 'tom':6 'type':49 'uniform':23 'warn':38
8	0	7	a83fb3514a7a910580318dda0b87d68f	Fix pgxs -L library path	'fix':1 'l':3 'librari':4 'path':5 'pgxs':2
8	0	7	8aead97e0db9fa14f3707435bfc43785	Check that SID is enabled while checking for Win32 admin	'admin':10 'check':1,7 'enabl':5 'sid':3 'win32':9
8	0	0	44debd62cc4c1250b9998430cd074a94	New fsync() test program (Bruce)	'bruce':5 'fsync':2 'new':1 'program':4 'test':3
8	0	8	714d216b6f47689c553c29e1576f575f	Reject unsafe uses of \\' in string literals As a server-side defense against SQL-injection attacks of the type described in CVE-2006-2314, the server now only accepts '' and not \\' as a representation of ASCII single quote in SQL string literals. By default, \\' is rejected only when client_encoding is set to a client-only encoding (SJIS, BIG5, GBK, GB18030, or UHC), which is the scenario in which SQL injection is possible. A new configuration parameter backslash_quote is available to adjust this behavior when needed. Note that full security against CVE-2006-2314 might require client-side changes; the purpose of backslash_quote is in part to make it obvious that insecure clients are insecure.	'-2006':25,97 '-2314':26,98 'accept':31 'adjust':86 'ascii':38 'attack':18 'avail':84 'backslash':81,108 'behavior':88 'big5':62 'chang':104 'client':51,58,102,119 'client-on':57 'client-sid':101 'configur':79 'cve':24,96 'default':46 'defens':13 'describ':22 'encod':52,60 'full':93 'gb18030':64 'gbk':63 'inject':17,74 'insecur':118,121 'liter':7,44 'make':114 'might':99 'need':90 'new':78 'note':91 'obvious':116 'paramet':80 'part':112 'possibl':76 'purpos':106 'quot':40,82,109 'reject':1,48 'represent':36 'requir':100 'scenario':70 'secur':94 'server':11,28 'server-sid':10 'set':54 'side':12,103 'singl':39 'sjis':61 'sql':16,42,73 'sql-inject':15 'string':6,43 'type':21 'uhc':66 'unsaf':2 'use':3
8	0	8	def51c615f62f35fcc7acb5ca8aaaf60	Modify libpq 's string-escaping routines to be aware of encoding considerations and standard_conforming_strings This fixes libpq -using applications for the security issues described in CVE-2006-2313 and CVE-2006-2314, and also future-proofs them against the planned changeover to SQL-standard string literal syntax. Applications that use multiple PostgreSQL connections concurrently should migrate to PQescapeStringConn() and PQescapeByteaConn() to ensure that escaping is done correctly for the settings in use in each database connection. Applications that do string escaping by hand should be modified to rely on library routines instead.	'-2006':30,34 '-2313':31 '-2314':35 'also':37 'applic':22,53,82 'awar':10 'changeov':45 'concurr':59 'conform':16 'connect':58,81 'consider':13 'correct':72 'cve':29,33 'databas':80 'describ':27 'done':71 'encod':12 'ensur':67 'escap':6,69,86 'fix':19 'futur':39 'future-proof':38 'hand':88 'instead':97 'issu':26 'libpq':2,20 'librari':95 'liter':51 'migrat':61 'modifi':1,91 'multipl':56 'plan':44 'postgresql':57 'pqescapebyteaconn':65 'pqescapestringconn':63 'proof':40 'reli':93 'routin':7,96 'secur':25 'set':75 'sql':48 'sql-standard':47 'standard':15,49 'string':5,17,50,85 'string-escap':4 'syntax':52 'use':21,55,77
8	0	8	76fa5f86305d8d75134676dab17ef5f2	Fix some incorrect encoding conversion functions win1251_to_iso , alt_to_iso , euc_tw_to_big5 , euc_tw_to_mic , mic_to_euc_tw were all broken to varying extents.	'alt':10 'big5':16 'broken':27 'convers':5 'encod':4 'euc':13,17,23 'extent':30 'fix':1 'function':6 'incorrect':3 'iso':9,12 'mic':20,21 'tw':14,18,24 'vari':29 'win1251':7
8	0	8	89ca6c4a293e020e7225c8940c2c9189	Clean up stray remaining uses of \\' in strings	'clean':1 'remain':4 'stray':3 'string':8 'use':5
8	0	8	99eac7ee1a9605101b76f8a9aa403cda	Fix bug that sometimes caused OR'd index scans to	'bug':2 'caus':5 'd':7 'fix':1 'index':8 'scan':9 'sometim':4
8	0	8	1f0c09b70150ac82491a05810281da5c	Fix WAL replay for case where a btree index has been	'btree':8 'case':5 'fix':1 'index':9 'replay':3 'wal':2
8	0	8	ab7009da4b421f69d1db6c73392ad3ef	Fix SIMILAR TO for patterns involving	'fix':1 'involv':6 'pattern':5 'similar':2
8	0	8	815cb2f9102bbab67f01846895814813	Fix SELECT INTO and CREATE TABLE AS to create tables in the default tablespace, not the base directory (Kris	'base':17 'creat':5,9 'default':13 'directori':18 'fix':1 'kris':19 'select':2 'tabl':6,10 'tablespac':14
8	0	8	b0a19cff44e8d07e1014c6dcd94c3d7a	Fix server to use custom DH SSL parameters correctly (Michael	'correct':9 'custom':5 'dh':6 'fix':1 'michael':10 'paramet':8 'server':2 'ssl':7 'use':4
8	0	8	10b2f59ef1ca5f59e3b32034958a9cd8	Fix problem with password prompting on some Win32 systems	'fix':1 'password':4 'problem':2 'prompt':5 'system':9 'win32':8
8	0	7	3cdf5580c60f4e0bad456516b29767ee	SESSION AUTHORIZATION (CVE-2006-0553) An unprivileged user could crash the server process, resulting in momentary denial of service to other users, if the server has been compiled with Asserts enabled (which is not the default). Thanks to Akio Ishida for reporting this problem.	'-0553':5 '-2006':4 'akio':39 'assert':30 'author':2 'compil':28 'could':9 'crash':10 'cve':3 'default':36 'denial':17 'enabl':31 'ishida':40 'momentari':16 'problem':44 'process':13 'report':42 'result':14 'server':12,25 'servic':19 'session':1 'thank':37 'unprivileg':7 'user':8,22
8	0	7	b4737a0065953460d1f5637fc83b18a3	Fix bug with row visibility logic in self-inserted rows (Tom) Under rare circumstances a row inserted by the current command could be seen as already valid, when it should not be. Repairs bug created in 8.0.4, 7.4.9, and 7.3.11 releases.	'7.3.11':41 '7.4.9':39 '8.0.4':38 'alreadi':27 'bug':2,35 'circumst':15 'command':22 'could':23 'creat':36 'current':21 'fix':1 'insert':10,18 'logic':6 'rare':14 'releas':42 'repair':34 'row':4,11,17 'seen':25 'self':9 'self-insert':8 'tom':12 'valid':28 'visibl':5
8	0	5	6fcea51e2d6eaa1774aa49afbc50b988	Fix psql performance issue with long scripts	'fix':1 'issu':4 'long':6 'perform':3 'psql':2 'script':7
8	0	7	d17e6caed2c82627dfbb0a532c69ceeb	Fix race condition that could lead to file already exists errors during pg_clog and pg_subtrans file creation	'alreadi':9 'clog':14 'condit':3 'could':5 'creation':19 'error':11 'exist':10 'file':8,18 'fix':1 'lead':6 'pg':13,16 'race':2 'subtran':17
8	0	7	981a6de372a706cecf0458aa772362da	Fix cases that could lead to crashes if a cache-invalidation	'cach':11 'cache-invalid':10 'case':2 'could':4 'crash':7 'fix':1 'invalid':12 'lead':5
8	0	7	42d1b087e592bf77d3cc78c9d7d281d4	Properly check DOMAIN constraints for UNKNOWN parameters in prepared statements	'check':2 'constraint':4 'domain':3 'paramet':7 'prepar':9 'proper':1 'statement':10 'unknown':6
8	0	7	8c149802b2375396f32b72d0a1678a0b	Ensure ALTER COLUMN TYPE will process FOREIGN KEY , UNIQUE , and PRIMARY KEY	'alter':2 'column':3 'ensur':1 'foreign':7 'key':8,12 'primari':11 'process':6 'type':4 'uniqu':9
8	0	7	ea830a9236db1e4791b436f535e428c7	Fixes to allow restoring dumps that have cross-schema	'allow':3 'cross':9 'cross-schema':8 'dump':5 'fix':1 'restor':4 'schema':10
8	0	7	ef66de66eb8b35d84cacd2e35f66c0ce	Allow pg_restore to continue properly after a COPY failure; formerly it tried to treat the remaining	'allow':1 'continu':5 'copi':9 'failur':10 'former':11 'pg':2 'proper':6 'remain':17 'restor':3 'treat':15 'tri':13
8	0	7	82966114ae9965dc0df48c6faf4fa9cd	Properly reject out-of-range date inputs (Kris	'date':7 'input':8 'kris':9 'out-of-rang':3 'proper':1 'rang':6 'reject':2
8	0	7	c5e8fa273e28cef0a637300ef776650b	Portability fix for testing presence of finite	'finit':7 'fix':2 'portabl':1 'presenc':5 'test':4
8	0	6	113e77821734d668715fa994b063d674	than exit if there is no more room in ShmemBackendArray (Magnus) The previous behavior could lead to a denial-of-service situation if too many connection requests arrive close together. This applies	'appli':33 'arriv':29 'behavior':14 'close':30 'connect':27 'could':15 'denial':20 'denial-of-servic':19 'exit':2 'lead':16 'magnus':11 'mani':26 'previous':13 'request':28 'room':8 'servic':22 'shmembackendarray':10 'situat':23 'togeth':31
8	0	6	db1d85268b872b3d4c854eb3c2028dc3	Fix bug introduced in 8.0 that could allow ReadBuffer to return an already-used page as new, potentially causing loss of	'8.0':5 'allow':8 'alreadi':14 'already-us':13 'bug':2 'caus':20 'could':7 'fix':1 'introduc':3 'loss':21 'new':18 'page':16 'potenti':19 'readbuff':9 'return':11 'use':15
8	0	6	c248bd648abed0d93e01380ebf58d88f	Fix for protocol-level Describe messages issued	'describ':6 'fix':1 'issu':8 'level':5 'messag':7 'protocol':4 'protocol-level':3
8	0	6	bef7c10346f6b700f9e7468a2969550f	Fix character string comparison for locales that consider different character combinations as equal, such as Hungarian (Tom) This might require REINDEX to fix existing indexes on	'charact':2,10 'combin':11 'comparison':4 'consid':8 'differ':9 'equal':13 'exist':24 'fix':1,23 'hungarian':16 'index':25 'local':6 'might':19 'reindex':21 'requir':20 'string':3 'tom':17
8	0	6	b8de883356a0aede5e07aba2a6d19e30	Set locale environment variables during postmaster startup to ensure that plperl won't change the locale later This fixes a problem that occurred if the postmaster was started with environment variables specifying a different locale than what initdb had been told. Under these conditions, any use of plperl was likely to lead to corrupt indexes. You might need REINDEX to fix existing indexes on	'chang':14 'condit':44 'corrupt':54 'differ':34 'ensur':9 'environ':3,30 'exist':62 'fix':19,61 'index':55,63 'initdb':38 'later':17 'lead':52 'like':50 'local':2,16,35 'might':57 'need':58 'occur':23 'plperl':11,48 'postmast':6,26 'problem':21 'reindex':59 'set':1 'specifi':32 'start':28 'startup':7 'told':41 'use':46 'variabl':4,31 'won':12
8	0	6	ad2f342c92874a453fefbb2964391442	Allow more flexible relocation of installation directories (Tom) Previous releases supported relocation only if all installation	'allow':1 'directori':7 'flexibl':3 'instal':6,16 'previous':9 'releas':10 'reloc':4,12 'support':11 'tom':8
8	0	6	c1e6b4e5b768525545cfb4295b8b9e69	Fix longstanding bug in strpos() and regular expression handling in certain rarely used Asian multi-byte character sets (Tatsuo)	'asian':14 'bug':3 'byte':17 'certain':11 'charact':18 'express':8 'fix':1 'handl':9 'longstand':2 'multi':16 'multi-byt':15 'rare':12 'regular':7 'set':19 'strpos':5 'tatsuo':20 'use':13
8	0	6	ea1a34befa2083c366483c6ca1e76438	Various fixes for functions returning RECORD s	'fix':2 'function':4 'record':6 'return':5 'various':1
8	0	6	6e5cbb3481b20a722e3282ac46ad7932	Fix bug in /contrib/pgcrypto gen_salt, which caused it not to use all available salt space for MD5 and XDES algorithms (Marko Kreen, Solar Designer)	'/contrib/pgcrypto':4 'algorithm':21 'avail':14 'bug':2 'caus':8 'design':25 'fix':1 'gen':5 'kreen':23 'marko':22 'md5':18 'salt':6,15 'solar':24 'space':16 'use':12 'xdes':20
8	0	6	d355223c2b115a807307f0a6929c6aa7	Fix /contrib/dblink to throw an error, rather than crashing, when the number of columns specified is different from	'/contrib/dblink':2 'column':14 'crash':9 'differ':17 'error':6 'fix':1 'number':12 'rather':7 'specifi':15 'throw':4
8	0	5	7528cdeb444fcfde1b1c94c923d0eaa3	There was a narrow window in which an I/O operation could be initiated for the wrong page, leading to an Assert failure or data corruption.	'assert':21 'corrupt':25 'could':11 'data':24 'failur':22 'i/o':9 'initi':13 'lead':18 'narrow':4 'oper':10 'page':17 'window':5 'wrong':16
8	0	5	b7ef7d2131a381fb9df1748b3e3ca71c	Fix bgwriter problems after recovering from errors (Tom) The background writer was found to leak buffer pins after write errors. While not fatal in itself, this might lead to mysterious blockages of later VACUUM commands.	'background':10 'bgwriter':2 'blockag':31 'buffer':16 'command':35 'error':7,20 'fatal':23 'fix':1 'found':13 'later':33 'lead':28 'leak':15 'might':27 'mysteri':30 'pin':17 'problem':3 'recov':5 'tom':8 'vacuum':34 'write':19 'writer':11
8	0	5	a088db9f099655a016ed60bd972c7e41	Prevent failure if client sends Bind protocol message	'bind':6 'client':4 'failur':2 'messag':8 'prevent':1 'protocol':7 'send':5
8	0	5	334afd77d8e93fa98fd6cf493f358cca	Retry file reads and writes after Windows	'file':2 'read':3 'retri':1 'window':7 'write':5
8	0	5	82d01754a68e549ecf66dc8bf0f9de73	Fix longstanding planning error for outer joins This bug sometimes caused a bogus error RIGHT JOIN is	'bogus':13 'bug':9 'caus':11 'error':4,14 'fix':1 'join':7,16 'longstand':2 'outer':6 'plan':3 'right':15 'sometim':10
8	0	5	a7b886b5dbdf5141e0ec1c57c9239620	Postpone timezone initialization until after postmaster.pid is created This avoids confusing startup scripts that expect the pid file to appear	'appear':20 'avoid':10 'confus':11 'creat':8 'expect':15 'file':18 'initi':3 'pid':17 'postmaster.pid':6 'postpon':1 'script':13 'startup':12 'timezon':2
8	0	5	6b2cc509c4b008eab81d2b50eac6b082	Prevent core dump in pg_autovacuum when a	'autovacuum':6 'core':2 'dump':3 'pg':5 'prevent':1
8	0	5	2ed44eae6ef7ec1baec900cdd91f6eb4	Fix problems with whole-row references ( foo.* )	'fix':1 'foo':8 'problem':2 'refer':7 'row':6 'whole':5 'whole-row':4
8	0	0	cba2b48f0972b179356110584c88f7f0	Add tablespaces so admins can control disk layout (Gavin)	'add':1 'admin':4 'control':6 'disk':7 'gavin':9 'layout':8 'tablespac':2
8	0	4	cf7d18d46574214391a85ab2ef758ab2	ctid chains too soon, and add more checking in code that follows ctid links This fixes a long-standing problem that could cause crashes in very rare	'add':6 'caus':24 'chain':2 'check':8 'code':10 'could':23 'crash':25 'ctid':1,13 'fix':16 'follow':12 'link':14 'long':19 'long-stand':18 'problem':21 'rare':28 'soon':4 'stand':20
8	0	4	da3bcc63c6e7cf9823b0fc291deb433b	Fix CHAR() to properly pad spaces to the specified length when using a multiple-byte character set (Yoshiyuki Asaba) In prior releases, the padding of CHAR() was incorrect because it only padded to the specified number of bytes without	'asaba':20 'byte':16,39 'char':2,27 'charact':17 'fix':1 'incorrect':29 'length':10 'multipl':15 'multiple-byt':14 'number':37 'pad':5,25,33 'prior':22 'proper':4 'releas':23 'set':18 'space':6 'specifi':9,36 'use':12 'without':40 'yoshiyuki':19
8	0	4	2e24791d8a16f1caf9f517091ed563e7	Force a checkpoint before committing CREATE DATABASE This should fix recent reports of index is not a btree failures when a crash occurs shortly after CREATE	'btree':18 'checkpoint':3 'commit':5 'crash':22 'creat':6,26 'databas':7 'failur':19 'fix':10 'forc':1 'index':14 'occur':23 'recent':11 'report':12 'short':24
8	0	4	fc75286e8bc955aa9fac5cd8e0c78792	Fix the sense of the test for read-only transaction in COPY The code formerly prohibited COPY TO , where it should prohibit COPY FROM .	'code':15 'copi':13,18,24 'fix':1 'former':16 'prohibit':17,23 'read':9 'read-on':8 'sens':3 'test':6 'transact':11
8	0	4	1096c82bcadb2d059656b41612c0837a	Handle consecutive embedded newlines in COPY	'consecut':2 'copi':6 'embed':3 'handl':1 'newlin':4
8	0	4	866d5f464c11a6e795d79a8f1a9c943c	Fix date_trunc(week) for dates near year	'date':2,6 'fix':1 'near':7 'trunc':3 'week':4 'year':8
8	0	4	bd520a7aceb89663c5428cacb2e38d57	Fix planning problem with outer-join ON clauses that reference	'claus':9 'fix':1 'join':7 'outer':6 'outer-join':5 'plan':2 'problem':3 'refer':11
8	0	4	89e66b9e5f610e11bcaeda03ddba235e	Further fixes for x FULL JOIN y ON true corner	'corner':10 'fix':2 'full':5 'join':6 'true':9 'x':4 'y':7
8	0	4	a0b49f28dba046f2bdc7648511722fc4	Fix overenthusiastic optimization of x IN (SELECT	'fix':1 'optim':3 'overenthusiast':2 'select':7 'x':5
8	0	4	c722d38d640e930b95f525ccd57eef14	Fix mis-planning of queries with small LIMIT values due to poorly thought out fuzzy cost	'cost':17 'due':11 'fix':1 'fuzzi':16 'limit':9 'mis':3 'mis-plan':2 'plan':4 'poor':13 'queri':6 'small':8 'thought':14 'valu':10
8	0	4	410f92d040240c7ab7ab934b4ed5486c	Make array_in and array_recv more	'array':2,5 'make':1 'recv':6
8	0	4	e19ab4478c9f5ec83f41208c671ab537	Fix missing rows in queries like UPDATE a=... WHERE	'fix':1 'like':6 'miss':2 'queri':5 'row':3 'updat':7
8	0	4	3b6d8b9f40d3bcbc1ab9dc3a7a8bdc48	Improve checking for partially-written WAL	'check':2 'improv':1 'partial':5 'partially-written':4 'wal':7 'written':6
8	0	4	3020e539db2c0ba500c1eb282d031d37	Improve robustness of signal handling when SSL is	'handl':5 'improv':1 'robust':2 'signal':4 'ssl':7
8	0	4	31d3a8248fd2ccd6ff8aa5996dfbecd7	Don't try to open more than max_files_per_process	'file':9 'max':8 'open':5 'per':10 'process':11 'tri':3
8	0	4	524eb259ca764d32693f6b3df7bb3b2f	Make psql -f filename return a nonzero exit code	'code':9 'exit':8 'f':3 'filenam':4 'make':1 'nonzero':7 'psql':2 'return':5
8	0	4	847fba4ad0fa1ede48a76a6cf5ff7c44	Change pg_dump to handle inherited check	'chang':1 'check':7 'dump':3 'handl':5 'inherit':6 'pg':2
8	0	4	2232ab1e4355a77b29d4656480b946a1	Fix password prompting in pg_restore on	'fix':1 'password':2 'pg':5 'prompt':3 'restor':6
8	0	4	f0de2c5f47ce4411e0d8d5b32f364408	Fix PL/PgSQL to handle var := var correctly when	'correct':7 'fix':1 'handl':4 'pl/pgsql':2 'var':5,6
8	0	4	5c415b04c3308dbcb8ec3ad25cd93f76	Fix PL/Perl %_SHARED so it's actually	'actual':7 'fix':1 'pl/perl':2 'share':3
8	0	4	ae64aba0403c4f32f5634e835e5091cd	Fix contrib/pg_autovacuum to allow sleep	'allow':4 'contrib/pg_autovacuum':2 'fix':1 'sleep':5
8	0	4	d244c35ac42fcebcd0947e2bb6d08507	Update contrib/tsearch2 to use current Snowball	'contrib/tsearch2':2 'current':5 'snowbal':6 'updat':1 'use':4
8	0	3	7b783806d65b8d4db481af05ff79e406	Change contrib/tsearch2 to avoid unsafe use of	'avoid':4 'chang':1 'contrib/tsearch2':2 'unsaf':5 'use':6
8	0	3	39073ac5c9f53169d5cc1a7ff139d5db	Guard against incorrect second parameter to	'guard':1 'incorrect':3 'paramet':5 'second':4
8	0	3	e4163b23f5acb5ddf09b93c432de540d	Repair ancient race condition that allowed a transaction to be seen as committed for some purposes (eg SELECT FOR UPDATE) slightly sooner than for other purposes This is an extremely serious bug since it could lead to apparent	'allow':6 'ancient':2 'appar':38 'bug':32 'commit':13 'condit':4 'could':35 'eg':17 'extrem':30 'lead':36 'purpos':16,26 'race':3 'repair':1 'seen':11 'select':18 'serious':31 'sinc':33 'slight':21 'sooner':22 'transact':8 'updat':20
8	0	3	4bb23669e6c27a8372d05fd41111e728	Repair race condition between relation extension and VACUUM This could theoretically have caused loss of a page's worth of freshly-inserted data, although the scenario seems of very low probability. There are no known cases of it having caused more than an Assert failure.	'although':25 'assert':45 'case':37 'caus':13,41 'condit':3 'could':10 'data':24 'extens':6 'failur':46 'fresh':22 'freshly-insert':21 'insert':23 'known':36 'loss':14 'low':31 'page':17 'probabl':32 'race':2 'relat':5 'repair':1 'scenario':27 'seem':28 'theoret':11 'vacuum':8 'worth':19
8	0	3	07a8de115a20cf908e34c907b2246dd6	Fix comparisons of TIME WITH TIME ZONE values The comparison code was wrong in the case where the --enable-integer-datetimes configuration switch had been used. NOTE: if you have an index on a TIME WITH TIME ZONE column, it will need to be REINDEX ed after installing this update, because the fix corrects the sort order of column values.	'case':16 'code':11 'column':40,60 'comparison':2,10 'configur':23 'correct':55 'datetim':22 'ed':47 'enabl':20 'enable-integer-datetim':19 'fix':1,54 'index':33 'instal':49 'integ':21 'need':43 'note':28 'order':58 'reindex':46 'sort':57 'switch':24 'time':4,6,36,38 'updat':51 'use':27 'valu':8,61 'wrong':13 'zone':7,39
8	0	3	76ca51b04f02a075e36528fed33757a8	Fix EXTRACT(EPOCH) for	'epoch':3 'extract':2 'fix':1
8	0	3	b0f1adbcf0eb11233f12c88648760580	Fix mis-display of negative fractional seconds in INTERVAL values This error only occurred when the --enable-integer-datetimes configuration switch had been used.	'configur':22 'datetim':21 'display':4 'enabl':19 'enable-integer-datetim':18 'error':13 'fix':1 'fraction':7 'integ':20 'interv':10 'mis':3 'mis-display':2 'negat':6 'occur':15 'second':8 'switch':23 'use':26 'valu':11
8	0	3	db6d2cc51db29279823e782469cb386a	Fix pg_dump to dump trigger names containing %	'contain':8 'dump':3,5 'fix':1 'name':7 'pg':2 'trigger':6
8	0	3	6797a82f1190c975ee74d393ec0a00c8	Still more 64-bit fixes for	'64':3 'bit':4 'fix':5 'still':1
8	0	3	bfb969d2203d3af3a31df373e3c58335	Prevent incorrect optimization of functions returning	'function':5 'incorrect':2 'optim':3 'prevent':1 'return':6
8	0	3	cc91b7b9f7cfcc7ed2b951b5cb083913	Fix contrib/btree_gist for timetz type	'contrib/btree_gist':2 'fix':1 'timetz':4 'type':5
8	0	3	cf08e480dc54c287906d47166f00a733	Make pg_ctl check the PID found in postmaster.pid to see if it is still a live	'check':4 'ctl':3 'found':7 'live':17 'make':1 'pg':2 'pid':6 'postmaster.pid':9 'see':11 'still':15
8	0	3	c62ed51c7cac004bb7ad1ff7658e29ec	Fix pg_dump / pg_restore problems caused	'caus':7 'dump':3 'fix':1 'pg':2,4 'problem':6 'restor':5
8	0	3	3664a04124a0622e974871f94b0b667f	Fix interaction between materializing holdable cursors and	'cursor':6 'fix':1 'holdabl':5 'interact':2 'materi':4
8	0	3	c8e366ffb6300c634d396a4eaf0b3765	Fix memory leak in SQL functions returning pass-by-reference	'fix':1 'function':6 'leak':3 'memori':2 'pass':9 'pass-by-refer':8 'refer':11 'return':7 'sql':5
8	0	2	e15ec283f240a720f37d93b25e399ba7	libraries (Bruce) This should have been done in 8.0.0. It is required so 7.4.X versions of PostgreSQL client applications, like psql , can be used on the same machine as 8.0.X applications. This might require re-linking user applications that use these libraries.	'7.4':14 '8.0':31 '8.0.0':9 'applic':20,33,41 'bruce':2 'client':19 'done':7 'librari':1,45 'like':21 'link':39 'machin':29 'might':35 'postgresql':18 'psql':22 're':38 're-link':37 'requir':12,36 'use':25,43 'user':40 'version':16 'x':15,32
8	0	2	d0d11410f37c053db62115010e9a79a7	Add Windows-only wal_sync_method setting of fsync_writethrough (Magnus, Bruce) This setting causes PostgreSQL to write through any disk-drive write cache when writing to WAL. This behavior was formerly called fsync , but was renamed because it acts quite differently from fsync on other platforms.	'act':42 'add':1 'behavior':32 'bruce':13 'cach':26 'call':35 'caus':16 'differ':44 'disk':23 'disk-driv':22 'drive':24 'former':34 'fsync':10,36,46 'magnus':12 'method':7 'platform':49 'postgresql':17 'quit':43 'renam':39 'set':8,15 'sync':6 'wal':5,30 'window':3 'windows-on':2 'write':19,25,28 'writethrough':11
8	0	2	ad28c023ad926ad35a097c23c6d9add4	Enable the wal_sync_method setting of open_datasync on Windows, and make it the default for that platform (Magnus, Bruce) Because the default is no longer fsync_writethrough , data loss is possible during a power failure if the disk drive has write caching enabled. To turn off the write cache on Windows, from the Device Manager , choose the drive properties, then Policies .	'bruce':21 'cach':44,51 'choos':58 'data':30 'datasync':9 'default':16,24 'devic':56 'disk':40 'drive':41,60 'enabl':1,45 'failur':37 'fsync':28 'longer':27 'loss':31 'magnus':20 'make':13 'manag':57 'method':5 'open':8 'platform':19 'polici':63 'possibl':33 'power':36 'properti':61 'set':6 'sync':4 'turn':47 'wal':3 'window':11,53 'write':43,50 'writethrough':29
8	0	2	5b3c272b05c53256a4263fcb1b40dedb	New cache management algorithm 2Q replaces ARC (Tom) This was done to avoid a pending US patent on ARC . The 2Q code might be a few percentage points slower than ARC for some work loads. A better cache management algorithm will appear in 8.1.	'2q':5,21 '8.1':44 'algorithm':4,40 'appear':42 'arc':7,19,31 'avoid':13 'better':37 'cach':2,38 'code':22 'done':11 'load':35 'manag':3,39 'might':23 'new':1 'patent':17 'pend':15 'percentag':27 'point':28 'replac':6 'slower':29 'tom':8 'us':16 'work':34
8	0	2	168dfc811974b45ac244bfc927629e84	Planner adjustments to improve behavior on freshly-created	'adjust':2 'behavior':5 'creat':9 'fresh':8 'freshly-cr':7 'improv':4 'planner':1
8	0	2	d1c94a5628751282000cfcee95277d6f	Allow plpgsql to assign to an element of an array that is initially NULL (Tom) Formerly the array would remain NULL , but now it becomes a single-element array. The main SQL engine was changed to handle UPDATE of a null array value this way in 8.0, but the similar case in plpgsql was overlooked.	'8.0':48 'allow':1 'array':10,18,30,43 'assign':4 'becom':25 'case':52 'chang':36 'element':7,29 'engin':34 'former':16 'handl':38 'initi':13 'main':32 'null':14,21,42 'overlook':56 'plpgsql':2,54 'remain':20 'similar':51 'singl':28 'single-el':27 'sql':33 'tom':15 'updat':39 'valu':44 'way':46 'would':19
8	0	1	1596e7329b5f5580f41d022ef49ed4ff	Avoid buffer overrun when plpgsql cursor declaration has too	'avoid':1 'buffer':2 'cursor':6 'declar':7 'overrun':3 'plpgsql':5
8	0	2	a1e699c963c95f5b78eb6aeee0bde13c	Convert \\r\\n and \\r to \\n in plpython function bodies (Michael Fuhr) This prevents syntax errors when plpython code is written on a Windows or Mac client.	'bodi':11 'client':28 'code':20 'convert':1 'error':17 'fuhr':13 'function':10 'mac':27 'michael':12 'n':3,7 'plpython':9,19 'prevent':15 'r':2,5 'syntax':16 'window':25 'written':22
8	0	2	d88d1657d0b2ab861933b14100ce6d4d	Allow SPI cursors to handle utility commands that return rows,	'allow':1 'command':7 'cursor':3 'handl':5 'return':9 'row':10 'spi':2 'util':6
8	0	2	5ca0489558121f9bcf7e398355ebe7ad	Fix CLUSTER failure after ALTER TABLE	'alter':5 'cluster':2 'failur':3 'fix':1 'tabl':6
8	0	2	6bff4dc6dd7e052880a7c1f1b48b045a	Reduce memory usage of ALTER TABLE ADD COLUMN	'add':7 'alter':5 'column':8 'memori':2 'reduc':1 'tabl':6 'usag':3
8	0	2	eaf2a93ed2ee750e412bfbf10b7622cc	Document the Windows-only register and	'document':1 'regist':6 'window':4 'windows-on':3
8	0	2	3a8027feacdb80043c8ea0be8fb65b3f	Ensure operations done during backend shutdown are counted by statistics collector This is expected to resolve reports of pg_autovacuum not vacuuming the system catalogs often enough &mdash; it was not being told about catalog deletions caused by temporary table removal during backend exit.	'autovacuum':20 'backend':5,42 'catalog':25,34 'caus':36 'collector':11 'count':8 'delet':35 'done':3 'enough':27 'ensur':1 'exit':43 'expect':14 'often':26 'oper':2 'pg':19 'remov':40 'report':17 'resolv':16 'shutdown':6 'statist':10 'system':24 'tabl':39 'temporari':38 'told':32 'vacuum':22
8	0	2	ba642ae1c70be49d2ff844ecedbc1b71	Change the Windows default for configuration parameter log_destination to eventlog (Magnus) By default, a server running on Windows will now send log output to the Windows event logger rather than standard error.	'chang':1 'configur':6 'default':4,14 'destin':9 'error':33 'event':28 'eventlog':11 'log':8,23 'logger':29 'magnus':12 'output':24 'paramet':7 'rather':30 'run':17 'send':22 'server':16 'standard':32 'window':3,19,27
8	0	2	aba02a7d828a3b8615dcb8b785eaa6b1	Allow ALTER DATABASE RENAME by superusers	'allow':1 'alter':2 'databas':3 'renam':4 'superus':6
8	0	2	e600b66f528887cda68ca0d8cd94d385	Modify WAL log entries for CREATE and DROP DATABASE to not specify absolute paths (Tom) This allows point-in-time recovery on a different machine with possibly different database location. Note that CREATE TABLESPACE still poses a hazard in such situations.	'absolut':13 'allow':17 'creat':6,34 'databas':9,30 'differ':25,29 'drop':8 'entri':4 'hazard':39 'locat':31 'log':3 'machin':26 'modifi':1 'note':32 'path':14 'point':19 'point-in-tim':18 'pose':37 'possibl':28 'recoveri':22 'situat':42 'specifi':12 'still':36 'tablespac':35 'time':21 'tom':15 'wal':2
8	0	2	76324fd16c01c6384fb559a62d447fa8	Fix crash from a backend exiting with an open transaction	'backend':5 'crash':2 'exit':6 'fix':1 'open':9 'transact':10
8	0	2	ece3e38ebc9816725f2e3cb335349c3a	Fix array_map() so it can call PL functions	'array':2 'call':7 'fix':1 'function':9 'map':3 'pl':8
8	0	2	c4464a144bb5e2ead8c3431b58ce2bfc	Several contrib/tsearch2 and contrib/btree_gist fixes (Teodor)	'contrib/btree_gist':4 'contrib/tsearch2':2 'fix':5 'sever':1 'teodor':6
8	0	2	17e2c70ab9075665ac8f2f462de69330	Fix crash of some contrib/pgcrypto	'contrib/pgcrypto':5 'crash':2 'fix':1
8	0	2	b143745f1d69054e2d9a752c87d47ed2	Fix contrib/intagg for 64-bit platforms	'64':4 'bit':5 'contrib/intagg':2 'fix':1 'platform':6
8	0	2	9a069bef19e4c75afa17e1fe82ddaeee	Fix ecpg bugs in parsing of CREATE statement	'bug':3 'creat':7 'ecpg':2 'fix':1 'pars':5 'statement':8
8	0	2	b38e5c59711a3807ab0b211e6d051410	Work around gcc bug on powerpc and amd64 causing problems in	'amd64':8 'around':2 'bug':4 'caus':9 'gcc':3 'powerpc':6 'problem':10 'work':1
8	0	2	f5122578bbfe3723c8a56baa015fc9f9	Do not use locale-aware versions of upper() , lower() , and initcap() when the locale is C (Bruce) This allows these functions to work on platforms that generate errors for non-7-bit data when the locale is C .	'-7':32 'allow':20 'awar':6 'bit':33 'bruce':18 'c':17,39 'data':34 'error':29 'function':22 'generat':28 'initcap':12 'local':5,15,37 'locale-awar':4 'lower':10 'non':31 'platform':26 'upper':9 'use':3 'version':7 'work':24
8	0	2	60b0b3d5859c02a377066f3d7e52ede2	Fix to_date() to behave reasonably when	'behav':5 'date':3 'fix':1 'reason':6
8	0	2	0da757f916dda4d011e3987880635a9f	Prevent to_char(interval) from failing	'char':3 'fail':6 'interv':4 'prevent':1
8	0	2	912f6e23992f63b8693aa67dee7bf02a	Fix wrong week returned by date_trunc('week') (Bruce) date_trunc('week') returned the wrong year for the first few days of January in some years.	'bruce':9 'date':6,10 'day':21 'first':19 'fix':1 'januari':23 'return':4,13 'trunc':7,11 'week':3,8,12 'wrong':2,15 'year':16,26
8	0	2	393599afa60afbb434b120ca20323d4a	Use the correct default mask length for class D	'class':8 'correct':3 'd':9 'default':4 'length':6 'mask':5 'use':1
8	0	1	03a9ae5e7c921c2451b1464d0a6d1c7c	On platforms that will automatically execute initialization functions of a shared library (this includes at least Windows and ELF-based Unixen), LOAD can be used to make the server execute arbitrary code.	'arbitrari':32 'automat':5 'base':21 'code':33 'elf':20 'elf-bas':19 'execut':6,31 'function':8 'includ':14 'initi':7 'least':16 'librari':12 'load':23 'make':28 'platform':2 'server':30 'share':11 'unixen':22 'use':26 'window':17
8	0	1	0c6110409dab8a00f399176aea737fc9	Check that creator of an aggregate function has the right to execute the specified transition functions This oversight made it possible to bypass denial of EXECUTE	'aggreg':6 'bypass':23 'check':1 'creator':3 'denial':24 'execut':12,26 'function':7,16 'made':19 'oversight':18 'possibl':21 'right':10 'specifi':14 'transit':15
8	0	1	24a7b26a00c4e3cee510475f97683b53	Fix security and 64-bit issues in	'64':4 'bit':5 'fix':1 'issu':6 'secur':2
8	0	1	a5c8a5b3184e40e8022e655fe4fc90a6	Add needed STRICT marking to some contrib functions (Kris	'add':1 'contrib':7 'function':8 'kris':9 'mark':4 'need':2 'strict':3
8	0	0	c02203baf860e15b5ea93d40da6131b4	New version of contrib/btree_gist (Teodor)	'contrib/btree_gist':4 'new':1 'teodor':5 'version':2
8	0	1	707f7b61fb543c6e747f79d9582e4f5d	Make ALTER TABLE ADD COLUMN enforce domain	'add':4 'alter':2 'column':5 'domain':7 'enforc':6 'make':1 'tabl':3
8	0	1	2387508b7299696caeb16bdea4943f99	Fix planning error for FULL and RIGHT outer joins The result of the join was mistakenly supposed to be sorted the same as the left input. This could not only deliver mis-sorted output to the user, but in case of nested merge joins could give outright wrong answers.	'answer':50 'case':41 'could':28,46 'deliv':31 'error':3 'fix':1 'full':5 'give':47 'input':26 'join':9,14,45 'left':25 'merg':44 'mis':33 'mis-sort':32 'mistaken':16 'nest':43 'outer':8 'output':35 'outright':48 'plan':2 'result':11 'right':7 'sort':20,34 'suppos':17 'user':38 'wrong':49
8	0	1	fe5e6129d8a39dbd37b8e5dda5761c2f	ROLLBACK TO savepoint	'rollback':1 'savepoint':3
8	0	1	a27c2dce2f716ca7d09abfb09d029595	Avoid SHGetSpecialFolderPath() on Windows	'avoid':1 'shgetspecialfolderpath':2 'window':4
8	0	1	b5cb9a0a513f4ef76058432ff7092e2b	Fix some problems in running pg_autovacuum as a Windows	'autovacuum':7 'fix':1 'pg':6 'problem':3 'run':5 'window':10
8	0	1	9dcea84112950a67feb24a5379545af3	Multiple minor bug fixes in	'bug':3 'fix':4 'minor':2 'multipl':1
8	0	1	efba96e5286336461a2cad995b60f14d	Fix ecpg segfault with named structs used in	'ecpg':2 'fix':1 'name':5 'segfault':3 'struct':6 'use':7
8	0	0	8f3233a1a381f9dd79b8207424296987	Add WAL file archiving and point-in-time recovery (Simon Riggs)	'add':1 'archiv':4 'file':3 'point':7 'point-in-tim':6 'recoveri':10 'rigg':12 'simon':11 'time':9 'wal':2
8	0	0	c3192b615ad2849921c1662112c743f0	Add a built-in log rotation program (Andreas Pflug) It is now possible to log server messages conveniently without relying on either syslog or an external log rotation program.	'add':1 'andrea':9 'built':4 'built-in':3 'conveni':19 'either':23 'extern':27 'log':6,16,28 'messag':18 'pflug':10 'possibl':14 'program':8,30 'reli':21 'rotat':7,29 'server':17 'syslog':24 'without':20
8	0	0	c4b01bfb1b492ba95559a88c46f22592	Add new read-only server configuration parameters to show server compile-time settings: block_size , integer_datetimes , max_function_args , max_identifier_length , max_index_keys (Joe)	'add':1 'arg':22 'block':16 'compil':13 'compile-tim':12 'configur':7 'datetim':19 'function':21 'identifi':24 'index':27 'integ':18 'joe':29 'key':28 'length':25 'max':20,23,26 'new':2 'paramet':8 'read':4 'read-on':3 'server':6,11 'set':15 'show':10 'size':17 'time':14
8	0	0	866c70542f522d31d8acdcef9b8374f2	Make quoting of sameuser , samegroup , and all remove special meaning of these terms in pg_hba.conf (Andrew)	'andrew':17 'hba.conf':16 'make':1 'mean':10 'pg':15 'quot':2 'remov':8 'samegroup':5 'sameus':4 'special':9 'term':13
8	0	0	e481776b417045a5a77c80ddb09de332	Use clearer IPv6 name ::1/128 for localhost in default pg_hba.conf (Andrew)	'1/128':5 'andrew':12 'clearer':2 'default':9 'hba.conf':11 'ipv6':3 'localhost':7 'name':4 'pg':10 'use':1
8	0	0	06e348d0eb6227ccb3469b1c65eac94e	Use CIDR format in pg_hba.conf examples (Andrew)	'andrew':8 'cidr':2 'exampl':7 'format':3 'hba.conf':6 'pg':5 'use':1
8	0	0	5ddcfce7a39dd92942e2c9b378dfdd0a	Rename server configuration parameters SortMem and VacuumMem to work_mem and maintenance_work_mem (Old names still supported) (Tom) This change was made to clarify that bulk operations such as index and foreign key creation use maintenance_work_mem , while work_mem is for workspaces used during query execution.	'bulk':27 'chang':21 'clarifi':25 'configur':3 'creation':35 'execut':49 'foreign':33 'index':31 'key':34 'made':23 'mainten':12,37 'mem':10,14,39,42 'name':16 'old':15 'oper':28 'paramet':4 'queri':48 'renam':1 'server':2 'sortmem':5 'still':17 'support':18 'tom':19 'use':36,46 'vacuummem':7 'work':9,13,38,41 'workspac':45
8	0	0	f94538f06a4919e25cd1a61cb4c09aa5	Allow logging of session disconnections using server configuration log_disconnections (Andrew)	'allow':1 'andrew':11 'configur':8 'disconnect':5,10 'log':2,9 'server':7 'session':4 'use':6
8	0	0	f5300701afc29ec1618fc9ae9e1a2391	Add new server configuration parameter log_line_prefix to allow control of information emitted in each log line (Andrew) Available information includes user name, database name, remote IP address, and session start time.	'add':1 'address':29 'allow':10 'andrew':19 'avail':20 'configur':4 'control':11 'databas':25 'emit':14 'includ':22 'inform':13,21 'ip':28 'line':7,18 'log':6,17 'name':24,26 'new':2 'paramet':5 'prefix':8 'remot':27 'server':3 'session':31 'start':32 'time':33 'user':23
8	0	0	5821a579c999461f2aefca1d40c07904	Remove server configuration parameters log_pid , log_timestamp , log_source_port ; functionality superseded by log_line_prefix (Andrew)	'andrew':18 'configur':3 'function':12 'line':16 'log':5,7,9,15 'paramet':4 'pid':6 'port':11 'prefix':17 'remov':1 'server':2 'sourc':10 'supersed':13 'timestamp':8
8	0	0	13ccd72c672029da2cb66edf33cae34d	Replace the virtual_host and tcpip_socket parameters with a unified listen_addresses parameter (Andrew, Tom) virtual_host could only specify a single IP address to listen on. listen_addresses allows multiple addresses to be specified.	'address':13,25,30,33 'allow':31 'andrew':15 'could':19 'host':4,18 'ip':24 'listen':12,27,29 'multipl':32 'paramet':8,14 'replac':1 'singl':23 'socket':7 'specifi':21,36 'tcpip':6 'tom':16 'unifi':11 'virtual':3,17
8	0	0	2ccf62d16204394328a3c07d51d9ea11	Listen on localhost by default, which eliminates the need for the -i postmaster switch in many scenarios (Andrew) Listening on localhost ( 127.0.0.1 ) opens no new security holes but allows configurations like Windows and JDBC, which do not support local sockets, to work without special adjustments.	'127.0.0.1':22 'adjust':45 'allow':29 'andrew':18 'configur':30 'default':5 'elimin':7 'hole':27 'jdbc':34 'like':31 'listen':1,19 'local':39 'localhost':3,21 'mani':16 'need':9 'new':25 'open':23 'postmast':13 'scenario':17 'secur':26 'socket':40 'special':44 'support':38 'switch':14 'window':32 'without':43 'work':42
8	0	0	89def95a9c0c333e9b1a5a38be4699f8	Remove syslog server configuration parameter, and add more logical log_destination variable to control log output location (Magnus)	'add':7 'configur':4 'control':14 'destin':11 'locat':17 'log':10,15 'logic':9 'magnus':18 'output':16 'paramet':5 'remov':1 'server':3 'syslog':2 'variabl':12
8	0	0	a173134620d117a9c8d7f498ee511e3c	Change server configuration parameter log_statement to take values all , mod , ddl , or none to select which queries are logged (Bruce) This allows administrators to log only data definition changes or only data modification statements.	'administr':24 'allow':23 'bruce':21 'chang':1,30 'configur':3 'data':28,33 'ddl':12 'definit':29 'log':5,20,26 'mod':11 'modif':34 'none':14 'paramet':4 'queri':18 'select':16 'server':2 'statement':6,35 'take':8 'valu':9
8	0	0	4051df37e59f354a1090027ceeac31be	Some logging-related configuration parameters could formerly be adjusted by ordinary users, but only in the more verbose direction. They are now treated more strictly: only superusers can set them. However, a superuser can use ALTER USER to provide per-user settings of these values for non-superusers. Also, it is now possible for superusers to set values of superuser-only configuration parameters via PGOPTIONS .	'adjust':10 'also':52 'alter':37 'configur':5,66 'could':7 'direct':20 'former':8 'howev':32 'log':3 'logging-rel':2 'non':50 'non-superus':49 'ordinari':12 'paramet':6,67 'per':42 'per-us':41 'pgoption':69 'possibl':56 'provid':40 'relat':4 'set':30,44,60 'strict':26 'superus':28,34,51,58,64 'superuser-on':63 'treat':24 'use':36 'user':13,38,43 'valu':47,61 'verbos':19 'via':68
8	0	0	3e1d443a8b70ef1062a6fe6f1d9d2b53	Allow configuration files to be placed outside the data directory (mlw) By default, configuration files are kept in the cluster's top directory. With this addition, configuration files can be placed outside the data directory, easing administration.	'addit':26 'administr':37 'allow':1 'cluster':20 'configur':2,14,27 'data':9,34 'default':13 'directori':10,23,35 'eas':36 'file':3,15,28 'kept':17 'mlw':11 'outsid':7,32 'place':6,31 'top':22
8	0	0	250f7b0a566f2613a4b0e38ba55e2c6f	Major documentation improvements (Neil, Peter)	'document':2 'improv':3 'major':1 'neil':4 'peter':5
8	0	0	ad8e49ada6f41535d37f6edec50a7580	Plan prepared queries only when first executed so constants can be used for statistics (Oliver Jowett) Prepared statements plan queries once and execute them many times. While prepared queries avoid the overhead of re-planning on each use, the quality of the plan suffers from not knowing the exact parameters to be used in the query. In this release, planning of unnamed prepared statements is delayed until the first execution, and the actual parameter values of that execution are used as optimization hints. This allows use of out-of-line parameter passing without incurring a performance penalty.	'actual':74 'allow':86 'avoid':30 'constant':9 'delay':67 'exact':50 'execut':7,23,71,79 'first':6,70 'hint':84 'incur':96 'jowett':16 'know':48 'line':92 'mani':25 'oliv':15 'optim':83 'out-of-lin':89 'overhead':32 'paramet':51,75,93 'pass':94 'penalti':99 'perform':98 'plan':1,19,36,44,61 'prepar':2,17,28,64 'qualiti':41 'queri':3,20,29,57 're':35 're-plan':34 'releas':60 'statement':18,65 'statist':14 'suffer':45 'time':26 'unnam':63 'use':12,39,54,81,87 'valu':76 'without':95
8	0	0	0f6d866151389d265cd3807412b9cf2e	Allow DECLARE CURSOR to take parameters (Oliver Jowett) It is now useful to issue DECLARE CURSOR in a Parse message with parameters. The parameter values sent at Bind time will be substituted into the execution of the cursor's query.	'allow':1 'bind':28 'cursor':3,16,38 'declar':2,15 'execut':35 'issu':14 'jowett':8 'messag':20 'oliv':7 'paramet':6,22,24 'pars':19 'queri':40 'sent':26 'substitut':32 'take':5 'time':29 'use':12 'valu':25
8	0	0	6752bcd8a7196202634fbc772f597d2b	Fix hash joins and aggregates of inet and cidr data types (Tom) Release 7.4 handled hashing of mixed inet and cidr values incorrectly. (This bug did not exist in prior releases because they wouldn't try to hash either data type.)	'7.4':14 'aggreg':5 'bug':25 'cidr':9,21 'data':10,40 'either':39 'exist':28 'fix':1 'handl':15 'hash':2,16,38 'incorrect':23 'inet':7,19 'join':3 'mix':18 'prior':30 'releas':13,31 'tom':12 'tri':36 'type':11,41 'valu':22 'wouldn':34
8	0	0	c60c70ba9b2bbe1e65e5ff65c82257f5	Make log_duration print only when log_statement prints the query (Ed L.)	'durat':3 'ed':12 'l':13 'log':2,7 'make':1 'print':4,9 'queri':11 'statement':8
8	0	0	11b610841c972c6a790d2a93eb8b7b9d	Add savepoints (nested transactions) (Alvaro)	'add':1 'alvaro':5 'nest':3 'savepoint':2 'transact':4
8	0	0	d773e6e5a78e83396fdf1bcc901f96fa	Unsupported isolation levels are now accepted and promoted to the nearest supported level (Peter) The SQL specification states that if a database doesn't support a specific isolation level, it should use the next more restrictive level. This change complies with that recommendation.	'accept':6 'chang':39 'compli':40 'databas':22 'doesn':23 'isol':2,28 'level':3,13,29,37 'nearest':11 'next':34 'peter':14 'promot':8 'recommend':43 'restrict':36 'specif':17,27 'sql':16 'state':18 'support':12,25 'unsupport':1 'use':32
8	0	0	fa015e92058930b0ddd650fbae4f494d	Allow BEGIN WORK to specify transaction isolation levels like START TRANSACTION does (Bruce)	'allow':1 'begin':2 'bruce':13 'isol':7 'level':8 'like':9 'specifi':5 'start':10 'transact':6,11 'work':3
8	0	0	9121cc93347db2e4ae158b5351d63808	Fix table permission checking for cases in which rules generate a query type different from the originally submitted query (Tom)	'case':6 'check':4 'differ':14 'fix':1 'generat':10 'origin':17 'permiss':3 'queri':12,19 'rule':9 'submit':18 'tabl':2 'tom':20 'type':13
8	0	0	b7fc2fd2893d1d56798e74c82a6a46c9	Implement dollar quoting to simplify single-quote usage (Andrew, Tom, David Fetter) In previous releases, because single quotes had to be used to quote a function's body, the use of single quotes inside the function text required use of two single quotes or other error-prone notations. With this release we add the ability to use "dollar quoting" to quote a block of text. The ability to use different quoting delimiters at different nesting levels greatly simplifies the task of quoting correctly, especially in complex functions. Dollar quoting can be used anywhere quoted text is needed.	'abil':57,69 'add':55 'andrew':10 'anywher':95 'block':65 'bodi':29 'complex':88 'correct':85 'david':12 'delimit':74 'differ':72,76 'dollar':2,60,90 'error':48 'error-pron':47 'especi':86 'fetter':13 'function':27,37,89 'great':79 'implement':1 'insid':35 'level':78 'need':99 'nest':77 'notat':50 'previous':15 'prone':49 'quot':3,8,19,25,34,44,61,63,73,84,91,96 'releas':16,53 'requir':39 'simplifi':5,80 'singl':7,18,33,43 'single-quot':6 'task':82 'text':38,67,97 'tom':11 'two':42 'usag':9 'use':23,31,40,59,71,94
8	0	0	14a3f0034bd617237c2c1360b16f20f9	Change psql \\copy stdin/stdout to read from command input/output (Bruce)	'bruce':10 'chang':1 'command':8 'copi':3 'input/output':9 'psql':2 'read':6 'stdin/stdout':4
8	0	0	9f2957698c449c03d3a9a2f522217657	Make CASE val WHEN compval1 THEN ... evaluate val only once (Tom) CASE no longer evaluates the tested expression multiple times. This has benefits when the expression is complex or is volatile.	'benefit':23 'case':2,12 'complex':28 'compval1':5 'evalu':7,15 'express':18,26 'longer':14 'make':1 'multipl':19 'test':17 'time':20 'tom':11 'val':3,8 'volatil':31
8	0	0	1ce8417bd807435d8b521baf76a880aa	Test HAVING before computing target list of an aggregate query (Tom) Fixes improper failure of cases such as SELECT SUM(win)/SUM(lose) ... GROUP BY ... HAVING SUM(lose) &gt; 0 . This should work but formerly could fail with divide-by-zero.	'/sum':22 '0':29 'aggreg':9 'case':16 'comput':4 'could':35 'divid':39 'divide-by-zero':38 'fail':36 'failur':14 'fix':12 'former':34 'group':24 'improp':13 'list':6 'lose':23,28 'queri':10 'select':19 'sum':20,27 'target':5 'test':1 'tom':11 'win':21 'work':32 'zero':41
8	0	0	a0f6437d99fe7e0add710edc21baac3c	Replace max_expr_depth parameter with max_stack_depth parameter, measured in kilobytes of stack size (Tom) This gives us a fairly bulletproof defense against crashing due to runaway recursive functions. Instead of measuring the depth of expression nesting, we now directly measure the size of the execution stack.	'bulletproof':23 'crash':26 'defens':24 'depth':4,9,36 'direct':42 'due':27 'execut':48 'expr':3 'express':38 'fair':22 'function':31 'give':19 'instead':32 'kilobyt':13 'max':2,7 'measur':11,34,43 'nest':39 'paramet':5,10 'recurs':30 'replac':1 'runaway':29 'size':16,45 'stack':8,15,49 'tom':17 'us':20
8	0	0	d55f0952f33fbcdecb36da513eaa3e73	Allow arbitrary row expressions (Tom) This release allows SQL expressions to contain arbitrary composite types, that is, row values. It also allows functions to more easily take rows as arguments and return row values.	'allow':1,8,22 'also':21 'arbitrari':2,13 'argument':30 'composit':14 'contain':12 'easili':26 'express':4,10 'function':23 'releas':7 'return':32 'row':3,18,28,33 'sql':9 'take':27 'tom':5 'type':15 'valu':19,34
8	0	0	4e42c3ba15eaf2e6f321d6dd6cfeb249	Remove pg_encoding ; not needed anymore	'anymor':6 'encod':3 'need':5 'pg':2 'remov':1
8	0	0	1a42023c92f8b93519bbc425f83a0379	Allow LIKE / ILIKE to be used as the operator in row and subselect comparisons (Fabien Coelho)	'allow':1 'coelho':16 'comparison':14 'fabien':15 'ilik':3 'like':2 'oper':9 'row':11 'subselect':13 'use':6
8	0	0	ebd0552d917239889985b93b084b1e4a	Avoid locale-specific case conversion of basic ASCII letters in identifiers and keywords (Tom) This solves the Turkish problem with mangling of words containing I and i . Folding of characters outside the 7-bit-ASCII set is still locale-aware.	'7':34 'ascii':9,37 'avoid':1 'awar':43 'basic':8 'bit':36 'bit-ascii':35 'case':5 'charact':31 'contain':25 'convers':6 'fold':29 'identifi':12 'keyword':14 'letter':10 'local':3,42 'locale-awar':41 'locale-specif':2 'mangl':22 'outsid':32 'problem':20 'set':38 'solv':17 'specif':4 'still':40 'tom':15 'turkish':19 'word':24
8	0	0	65311047df35b028b9cb0d43662cd08f	Improve syntax error reporting (Fabien, Tom) Syntax error reports are more useful than before.	'error':3,8 'fabien':5 'improv':1 'report':4,9 'syntax':2,7 'tom':6 'use':12
8	0	0	6c4db9eae7ef7bcb83f4177bffaeca2a	Change EXECUTE to return a completion tag matching the executed statement (Kris Jurka) Previous releases return an EXECUTE tag for any EXECUTE call. In this release, the tag returned will reflect the command executed.	'call':23 'chang':1 'command':33 'complet':6 'execut':2,10,18,22,34 'jurka':13 'kris':12 'match':8 'previous':14 'reflect':31 'releas':15,26 'return':4,16,29 'statement':11 'tag':7,19,28
8	0	0	87d5e5448fa60ae223f194d9c574535d	Avoid emitting NATURAL CROSS JOIN in rule listings (Tom) Such a clause makes no logical sense, but in some cases the rule decompiler formerly produced this syntax.	'avoid':1 'case':20 'claus':12 'cross':4 'decompil':23 'emit':2 'former':24 'join':5 'list':8 'logic':15 'make':13 'natur':3 'produc':25 'rule':7,22 'sens':16 'syntax':27 'tom':9
8	0	0	33802b3e873f1eaada729eb0fee28761	Add COMMENT ON for casts, conversions, languages, operator classes, and large objects (Christopher)	'add':1 'cast':5 'christoph':13 'class':9 'comment':2 'convers':6 'languag':7 'larg':11 'object':12 'oper':8
8	0	0	89c907cae17afbd56841b4174e382c54	Add new server configuration parameter default_with_oids to control whether tables are created with OID s by default (Neil) This allows administrators to control whether CREATE TABLE commands create tables with or without OID columns by default. (Note: the current factory default setting for default_with_oids is TRUE , but the default will become FALSE in future releases.)	'add':1 'administr':23 'allow':22 'becom':55 'column':36 'command':29 'configur':4 'control':10,25 'creat':14,27,30 'current':41 'default':6,19,38,43,46,53 'factori':42 'fals':56 'futur':58 'neil':20 'new':2 'note':39 'oid':8,16,35,48 'paramet':5 'releas':59 'server':3 'set':44 'tabl':12,28,31 'true':50 'whether':11,26 'without':34
8	0	0	1511fb251901500b732746cae5cbdfc3	Add WITH / WITHOUT OIDS clause to CREATE TABLE AS (Neil)	'add':1 'claus':5 'creat':7 'neil':10 'oid':4 'tabl':8 'without':3
8	0	0	1a29553698e0e2b3e08ad0fb7610df2e	Allow ALTER TABLE DROP COLUMN to drop an OID column ( ALTER TABLE SET WITHOUT OIDS still works) (Tom)	'allow':1 'alter':2,11 'column':5,10 'drop':4,7 'oid':9,15 'set':13 'still':16 'tabl':3,12 'tom':18 'without':14 'work':17
8	0	0	56c9d6aaba9aab2992c5b6cf78b6066a	Allow composite types as table columns (Tom)	'allow':1 'column':6 'composit':2 'tabl':5 'tom':7 'type':3
8	0	0	3fba08a8545167fa56aa31898e47ddd1	Allow ALTER ... ADD COLUMN with defaults and NOT NULL constraints; works per SQL spec (Rod) It is now possible for ADD COLUMN to create a column that is not initially filled with NULLs, but with a specified default value.	'add':3,21 'allow':1 'alter':2 'column':4,22,26 'constraint':10 'creat':24 'default':6,38 'fill':31 'initi':30 'null':9,33 'per':12 'possibl':19 'rod':15 'spec':14 'specifi':37 'sql':13 'valu':39 'work':11
8	0	0	97a7f04a243647183238604265909a7e	Add ALTER COLUMN TYPE to change column's type (Rod) It is now possible to alter a column's data type without dropping and re-adding the column.	'ad':27 'add':1 'alter':2,16 'chang':6 'column':3,7,18,29 'data':20 'drop':23 'possibl':14 're':26 're-ad':25 'rod':10 'type':4,9,21 'without':22
8	1	10	8b49166e485a955e79c8ee9a58d52a9b	Speed up rtree index insertion (Teodor)	'index':4 'insert':5 'rtree':3 'speed':1 'teodor':6
8	0	0	2b960ba7af7c8e6e778540d420ad1ae1	Allow multiple ALTER actions in a single ALTER TABLE command (Rod) This is particularly useful for ALTER commands that rewrite the table (which include ALTER COLUMN TYPE and ADD COLUMN with a default). By grouping ALTER commands together, the table need be rewritten only once.	'action':4 'add':29 'allow':1 'alter':3,8,17,25,36 'column':26,30 'command':10,18,37 'default':33 'group':35 'includ':24 'multipl':2 'need':41 'particular':14 'rewrit':20 'rewritten':43 'rod':11 'singl':7 'tabl':9,22,40 'togeth':38 'type':27 'use':15
8	0	0	221bb3a3959df0e397936ab87413332e	Allow ALTER TABLE to add SERIAL columns (Tom) This falls out from the new capability of specifying defaults for new columns.	'add':5 'allow':1 'alter':2 'capabl':15 'column':7,21 'default':18 'fall':10 'new':14,20 'serial':6 'specifi':17 'tabl':3 'tom':8
8	0	0	f0d5bc1d8bc9a65433e8041b1783e414	Allow changing the owners of aggregates, conversions, databases, functions, operators, operator classes, schemas, types, and tablespaces (Christopher, Euler Taveira de Oliveira) Previously this required modifying the system tables directly.	'aggreg':6 'allow':1 'chang':2 'christoph':17 'class':12 'convers':7 'databas':8 'de':20 'direct':29 'euler':18 'function':9 'modifi':25 'oliveira':21 'oper':10,11 'owner':4 'previous':22 'requir':24 'schema':13 'system':27 'tabl':28 'tablespac':16 'taveira':19 'type':14
8	0	0	9934bf30069f04d61aa0d49b9212f0d5	Allow temporary object creation to be limited to SECURITY DEFINER functions (Sean Chittenden)	'allow':1 'chittenden':13 'creation':4 'defin':10 'function':11 'limit':7 'object':3 'sean':12 'secur':9 'temporari':2
8	0	0	aea2c035e94e9bf1cd93c6beb054cffc	Add ALTER TABLE ... SET WITHOUT CLUSTER (Christopher) Prior to this release, there was no way to clear an auto-cluster specification except to modify the system tables.	'add':1 'alter':2 'auto':20 'auto-clust':19 'christoph':7 'clear':17 'cluster':6,21 'except':23 'modifi':25 'prior':8 'releas':11 'set':4 'specif':22 'system':27 'tabl':3,28 'way':15 'without':5
8	0	0	5f8b8e8cabe7214350036357f0d2deaa	More complete support for composite types (row types) (Tom) Composite values can be used in many places where only scalar values worked before.	'complet':2 'composit':5,10 'mani':16 'place':17 'row':7 'scalar':20 'support':3 'tom':9 'type':6,8 'use':14 'valu':11,21 'work':22
8	0	0	3f183fff890955aaf5dcb6cea1ab9418	Constraint/Index/ SERIAL names are now table_column_type with numbers appended to guarantee uniqueness within the schema (Tom) The SQL specification states that such names should be unique within a schema.	'append':11 'column':7 'constraint/index':1 'guarante':13 'name':3,25 'number':10 'schema':17,31 'serial':2 'specif':21 'sql':20 'state':22 'tabl':6 'tom':18 'type':8 'uniqu':14,28 'within':15,29
8	0	0	a4c3a3770c0dabfb37cf8a58bf5c6e7e	Add pg_get_serial_sequence() to return a SERIAL column's sequence name (Christopher) This allows automated scripts to reliably find the SERIAL sequence name.	'add':1 'allow':16 'autom':17 'christoph':14 'column':10 'find':21 'get':3 'name':13,25 'pg':2 'reliabl':20 'return':7 'script':18 'sequenc':5,12,24 'serial':4,9,23
8	0	0	0d3bfa3f6f7954a9f3d9ddf0d589bef4	Warn when primary/foreign key data type mismatch requires costly lookup	'cost':9 'data':5 'key':4 'lookup':10 'mismatch':7 'primary/foreign':3 'requir':8 'type':6 'warn':1
8	0	0	e9a9e4c573de1bd5c9c6cb791c2698e9	New ALTER INDEX command to allow moving of indexes between tablespaces (Gavin)	'allow':6 'alter':2 'command':4 'gavin':12 'index':3,9 'move':7 'new':1 'tablespac':11
8	0	0	cf8e6ba4be619c9e1fe4121639d7320f	Make ALTER TABLE OWNER change dependent sequence ownership too (Alvaro)	'alter':2 'alvaro':10 'chang':5 'depend':6 'make':1 'owner':4 'ownership':8 'sequenc':7 'tabl':3
8	0	0	e4828d8f93d68572a08ca2100dd5d90d	Allow CREATE SCHEMA to create triggers, indexes, and sequences (Neil)	'allow':1 'creat':2,5 'index':7 'neil':10 'schema':3 'sequenc':9 'trigger':6
8	0	0	54549aa6eb7e34781efc04b5ed2363d7	Add ALSO keyword to CREATE RULE (Fabien Coelho) This allows ALSO to be added to rule creation to contrast it with INSTEAD rules.	'ad':14 'add':1 'allow':10 'also':2,11 'coelho':8 'contrast':19 'creat':5 'creation':17 'fabien':7 'instead':22 'keyword':3 'rule':6,16,23
8	0	0	e89b49626799abf82f0bee4f2cc10704	Add NOWAIT option to LOCK (Tatsuo) This allows the LOCK command to fail if it would have to wait for the requested lock.	'add':1 'allow':8 'command':11 'fail':13 'lock':5,10,23 'nowait':2 'option':3 'request':22 'tatsuo':6 'wait':19 'would':16
8	0	0	41a3f12b97fbe6b78934317b99c10767	Allow COPY to read and write comma-separated-value (CSV) files (Andrew, Bruce)	'allow':1 'andrew':13 'bruce':14 'comma':8 'comma-separated-valu':7 'copi':2 'csv':11 'file':12 'read':4 'separ':9 'valu':10 'write':6
8	0	0	c9a6481c27097ca1dcdf11daaecbcd5c	Generate error if the COPY delimiter and NULL string conflict (Bruce)	'bruce':11 'conflict':10 'copi':5 'delimit':6 'error':2 'generat':1 'null':8 'string':9
8	0	0	bb595ad0432605ff2cbb41afb40462df	GRANT / REVOKE behavior follows the SQL spec more closely	'behavior':3 'close':9 'follow':4 'grant':1 'revok':2 'spec':7 'sql':6
8	0	0	a5dd4c430a9cccdf8bfe4ed8a361d3bb	Avoid locking conflict between CREATE INDEX and CHECKPOINT (Tom) In 7.3 and 7.4, a long-running B-tree index build could block concurrent CHECKPOINT s from completing, thereby causing WAL bloat because the WAL log could not be recycled.	'7.3':11 '7.4':13 'avoid':1 'b':19 'b-tree':18 'bloat':33 'block':24 'build':22 'caus':31 'checkpoint':8,26 'complet':29 'concurr':25 'conflict':3 'could':23,38 'creat':5 'index':6,21 'lock':2 'log':37 'long':16 'long-run':15 'recycl':41 'run':17 'therebi':30 'tom':9 'tree':20 'wal':32,36
8	0	0	495e24dd168835f322dcb9225bb4f235	Database-wide ANALYZE does not hold locks across tables (Tom) This reduces the potential for deadlocks against other backends that want exclusive locks on tables. To get the benefit of this change, do not execute database-wide ANALYZE inside a transaction block ( BEGIN block); it must be able to commit and start a new transaction for each table.	'abl':50 'across':9 'analyz':4,40 'backend':20 'begin':45 'benefit':30 'block':44,46 'chang':33 'commit':52 'databas':2,38 'database-wid':1,37 'deadlock':17 'exclus':23 'execut':36 'get':28 'hold':7 'insid':41 'lock':8,24 'must':48 'new':56 'potenti':15 'reduc':13 'start':54 'tabl':10,26,60 'tom':11 'transact':43,57 'want':22 'wide':3,39
8	0	0	d4a14a7417f7518e79f02e6d9fa04ca8	REINDEX does not exclusively lock the index's parent table anymore The index itself is still exclusively locked, but readers of the table can continue if they are not using the particular index being rebuilt.	'anymor':11 'continu':25 'exclus':4,17 'index':7,13,33 'lock':5,18 'parent':9 'particular':32 'reader':20 'rebuilt':35 'reindex':1 'still':16 'tabl':10,23 'use':30
8	0	0	4243344276f05a0c8d5c97bf81a2842b	Erase MD5 user passwords when a user is renamed (Bruce) PostgreSQL uses the user name as salt when encrypting passwords via MD5. When a user's name is changed, the salt will no longer match the stored MD5 password, so the stored password becomes useless. In this release a notice is generated and the password is cleared. A new password must then be assigned if the user is to be able to log in with a password.	'abl':71 'assign':64 'becom':44 'bruce':10 'chang':29 'clear':57 'encrypt':19 'eras':1 'generat':52 'log':73 'longer':34 'match':35 'md5':2,22,38 'must':61 'name':15,27 'new':59 'notic':50 'password':4,20,39,43,55,60,77 'postgresql':11 'releas':48 'renam':9 'salt':17,31 'store':37,42 'use':12 'useless':45 'user':3,7,14,25,67 'via':21
8	0	0	e35ddc48e32ef9c076415bc5f07c04e2	New pg_ctl kill option for Windows (Andrew) Windows does not have a kill command to send signals to backends so this capability was added to pg_ctl .	'ad':25 'andrew':8 'backend':20 'capabl':23 'command':15 'ctl':3,28 'kill':4,14 'new':1 'option':5 'pg':2,27 'send':17 'signal':18 'window':7,9
8	0	0	cd98ba7df25fecb7d79baa3e493f8ecb	Information schema improvements	'improv':3 'inform':1 'schema':2
8	0	0	d8d1fd696eefc67e3ee44618ac200ce0	Add --pwfile option to initdb so the initial password can be set by GUI tools (Magnus)	'add':1 'gui':14 'initdb':5 'initi':8 'magnus':16 'option':3 'password':9 'pwfile':2 'set':12 'tool':15
8	0	0	8afeb63103e351433ed01d60d716b63f	Detect locale/encoding mismatch in initdb (Peter)	'detect':1 'initdb':5 'locale/encoding':2 'mismatch':3 'peter':6
8	0	0	8c1d8d214f43c6fab901b352a5e4cfff	Add register command to pg_ctl to register Windows operating system service (Dave Page)	'add':1 'command':3 'ctl':6 'dave':13 'oper':10 'page':14 'pg':5 'regist':2,8 'servic':12 'system':11 'window':9
8	0	0	814072d95dae95979d00db60e07cf57e	New begin/end markers in pg_dump text output (Bruce)	'begin/end':2 'bruce':9 'dump':6 'marker':3 'new':1 'output':8 'pg':5 'text':7
8	0	0	fc1ebd0b6a29903c490311867cb81295	Reject nonrectangular array values as erroneous (Joe) Formerly, array_in would silently build a surprising result.	'array':3,9 'build':13 'erron':6 'former':8 'joe':7 'nonrectangular':2 'reject':1 'result':16 'silent':12 'surpris':15 'valu':4 'would':11
8	0	0	ea85c1b909a4352fcb6a510e5ddaacf8	Overflow in integer arithmetic operations is now detected (Tom)	'arithmet':4 'detect':8 'integ':3 'oper':5 'overflow':1 'tom':9
8	0	0	27e748ee119deecdf8e56103ed15333d	The arithmetic operators associated with the single-byte "char" data type have been removed. Formerly, the parser would select these operators in many situations where an unable to select an operator error would be more appropriate, such as null * null . If you actually want to do arithmetic on a "char" column, you can cast it to integer explicitly.	'actual':44 'appropri':37 'arithmet':2,48 'associ':4 'byte':9 'cast':55 'char':10,51 'column':52 'data':11 'error':33 'explicit':59 'former':16 'integ':58 'mani':24 'null':40,41 'oper':3,22,32 'parser':18 'remov':15 'select':20,30 'singl':8 'single-byt':7 'situat':25 'type':12 'unabl':28 'want':45 'would':19,34
8	0	0	360826a2aee97f63905eea1af78809c8	Syntax checking of array input values considerably tightened up (Joe) Junk that was previously allowed in odd places with odd results now causes an ERROR , for example, non-whitespace after the closing right brace.	'allow':15 'array':4 'brace':35 'caus':23 'check':2 'close':33 'consider':7 'error':25 'exampl':27 'input':5 'joe':10 'junk':11 'non':29 'non-whitespac':28 'odd':17,20 'place':18 'previous':14 'result':21 'right':34 'syntax':1 'tighten':8 'valu':6 'whitespac':30
8	0	0	15b876471c2a989f9dfaa4e504e4984a	Empty-string array element values must now be written as "" , rather than writing nothing (Joe) Formerly, both ways of writing an empty-string element value were allowed, but now a quoted empty string is required. The case where nothing at all appears will probably be considered to be a NULL element value in some future release.	'allow':29 'appear':44 'array':4 'case':39 'consid':48 'element':5,26,53 'empti':2,24,34 'empty-str':1,23 'former':17 'futur':57 'joe':16 'must':7 'noth':15,41 'null':52 'probabl':46 'quot':33 'rather':12 'releas':58 'requir':37 'string':3,25,35 'valu':6,27,54 'way':19 'write':14,21 'written':10
8	0	0	2565be4f7901ba101a706d922e7910f2	Array element trailing whitespace is now ignored (Joe) Formerly leading whitespace was ignored, but trailing whitespace between an element value and the delimiter or right brace was significant. Now trailing whitespace is also ignored.	'also':33 'array':1 'brace':26 'delimit':23 'element':2,19 'former':9 'ignor':7,13,34 'joe':8 'lead':10 'right':25 'signific':28 'trail':3,15,30 'valu':20 'whitespac':4,11,16,31
8	0	0	ce3682e830ad4dba01b1752821b655db	Emit array values with explicit array bounds when lower bound is not one (Joe)	'array':2,6 'bound':7,10 'emit':1 'explicit':5 'joe':14 'lower':9 'one':13 'valu':3
8	0	0	d03620db50457a47aa87695d8438bdd3	Accept YYYY-monthname-DD as a date string (Tom)	'accept':1 'date':8 'dd':5 'monthnam':4 'string':9 'tom':10 'yyyi':3 'yyyy-monthname-dd':2
8	0	0	f368aa6a81186d099cb98a1df96d147a	Make netmask and hostmask functions return maximum-length mask length (Tom)	'function':5 'hostmask':4 'length':9,11 'make':1 'mask':10 'maximum':8 'maximum-length':7 'netmask':2 'return':6 'tom':12
8	0	0	1c0e70e11b31fdff4991c164ec7cca98	Change factorial function to return numeric (Gavin) Returning numeric allows the factorial function to work for a wider range of input values.	'allow':10 'chang':1 'factori':2,12 'function':3,13 'gavin':7 'input':21 'numer':6,9 'rang':19 'return':5,8 'valu':22 'wider':18 'work':15
8	0	0	956224f84f796d9525643f0d57c7ab00	to_char / to_date() date conversion improvements (Kurt Roeckx, Fabien Coelho)	'char':2 'coelho':11 'convers':6 'date':4,5 'fabien':10 'improv':7 'kurt':8 'roeckx':9
8	0	0	51e7d8b7247acf42d01c40cfe578cd17	New contrib/trgm , trigram matching for PostgreSQL (Teodor)	'contrib/trgm':2 'match':4 'new':1 'postgresql':6 'teodor':7 'trigram':3
8	0	0	1dcc7f6565936d31dfb01dc29f73487c	Make length() disregard trailing spaces in CHAR(n) (Gavin) This change was made to improve consistency: trailing spaces are semantically insignificant in CHAR(n) data, so they should not be counted by length() .	'chang':11 'char':7,23 'consist':16 'count':31 'data':25 'disregard':3 'gavin':9 'improv':15 'insignific':21 'length':2,33 'made':13 'make':1 'n':8,24 'semant':20 'space':5,18 'trail':4,17
8	0	0	7a026a39b5096f28c7a6256408265a27	Warn about empty string being passed to OID / float4 / float8 data types (Neil) 8.1 will throw an error instead.	'8.1':14 'data':11 'empti':3 'error':18 'float4':9 'float8':10 'instead':19 'neil':13 'oid':8 'pass':6 'string':4 'throw':16 'type':12 'warn':1
8	0	0	154d1cec40e62dc906b4da103091e491	Allow leading or trailing whitespace in int2 / int4 / int8 / float4 / float8 input routines (Neil)	'allow':1 'float4':10 'float8':11 'input':12 'int2':7 'int4':8 'int8':9 'lead':2 'neil':14 'routin':13 'trail':4 'whitespac':5
8	0	0	b6f316cbd65be9ba36b105e754609434	Better support for IEEE Infinity and NaN values in float4 / float8 (Neil) These should now work on all platforms that support IEEE-compliant floating point arithmetic.	'arithmet':27 'better':1 'compliant':24 'float':25 'float4':10 'float8':11 'ieee':4,23 'ieee-compli':22 'infin':5 'nan':7 'neil':12 'platform':19 'point':26 'support':2,21 'valu':8 'work':16
8	0	0	bdf71d7fb1640af2e857effd432b8173	Add week option to date_trunc() (Robert Creager)	'add':1 'creager':8 'date':5 'option':3 'robert':7 'trunc':6 'week':2
8	0	0	9a9bcbac5d5635487feef29065ff68c8	Fix to_char for 1 BC (previously it returned 1 AD ) (Bruce)	'1':5,10 'ad':11 'bc':6 'bruce':12 'char':3 'fix':1 'previous':7 'return':9
8	0	0	9e5ba644b4de6d2b1894acb98b52054e	Fix date_part(year) for BC dates (previously it returned one less than the correct year) (Bruce)	'bc':6 'bruce':17 'correct':15 'date':2,7 'fix':1 'less':12 'one':11 'part':3 'previous':8 'return':10 'year':4,16
8	0	0	0d55e605f594527725e7597cf09f0ef8	Fix date_part() to return the proper millennium and century (Fabien Coelho) In previous versions, the century and millennium results had a wrong number and started in the wrong year, as compared to standard reckoning of such things.	'centuri':10,17 'coelho':12 'compar':32 'date':2 'fabien':11 'fix':1 'millennium':8,19 'number':24 'part':3 'previous':14 'proper':7 'reckon':35 'result':20 'return':5 'standard':34 'start':26 'thing':38 'version':15 'wrong':23,29 'year':30
8	0	0	896d37b714adcfe34c5f57604a37f866	Add ceiling() as an alias for ceil() , and power() as an alias for pow() for standards compliance (Neil)	'add':1 'alia':5,12 'ceil':2,7 'complianc':17 'neil':18 'pow':14 'power':9 'standard':16
8	0	0	9cbbd4b06ba449e4c5d1455e6ccec3cb	Change ln() , log() , power() , and sqrt() to emit the correct SQLSTATE error codes for certain error conditions, as specified by SQL:2003 (Neil)	'2003':22 'certain':15 'chang':1 'code':13 'condit':17 'correct':10 'emit':8 'error':12,16 'ln':2 'log':3 'neil':23 'power':4 'specifi':19 'sql':21 'sqlstate':11 'sqrt':6
8	0	0	2326bf98b383034cf9f6d16b0c61ef30	Add width_bucket() function as defined by SQL:2003 (Neil)	'2003':9 'add':1 'bucket':3 'defin':6 'function':4 'neil':10 'sql':8 'width':2
8	0	0	23f6550b50782d604af94ff1bb107523	Add generate_series() functions to simplify working with numeric sets (Joe)	'add':1 'function':4 'generat':2 'joe':11 'numer':9 'seri':3 'set':10 'simplifi':6 'work':7
8	0	0	00db6b3947e1b950db302a74567f3c25	Fix upper/lower/initcap() functions to work with multibyte encodings (Tom)	'encod':8 'fix':1 'function':3 'multibyt':7 'tom':9 'upper/lower/initcap':2 'work':5
8	0	0	9d66e0ff62e0ed70445f2a4d9cf61cde	Add boolean and bitwise integer AND / OR aggregates (Fabien Coelho)	'add':1 'aggreg':8 'bitwis':4 'boolean':2 'coelho':10 'fabien':9 'integ':5
8	0	0	f8e9c1aa7e9a60c36e0c46e75ccf2ca6	New session information functions to return network addresses for client and server (Sean Chittenden)	'address':8 'chittenden':14 'client':10 'function':4 'inform':3 'network':7 'new':1 'return':6 'sean':13 'server':12 'session':2
8	0	0	ff5d56459e9ba7dfe06860be329dbdef	Add function to determine the area of a closed path (Sean Chittenden)	'add':1 'area':6 'chittenden':12 'close':9 'determin':4 'function':2 'path':10 'sean':11
8	0	0	204483acb7ec21cd0d19cc0ee324b4c8	Add function to send cancel request to other backends (Magnus)	'add':1 'backend':9 'cancel':5 'function':2 'magnus':10 'request':6 'send':4
8	0	0	5c2e5f31c95eca87a4d761ac2857635a	Add interval plus datetime operators (Tom) The reverse ordering, datetime plus interval , was already supported, but both are required by the SQL standard.	'add':1 'alreadi':14 'datetim':4,10 'interv':2,12 'oper':5 'order':9 'plus':3,11 'requir':19 'revers':8 'sql':22 'standard':23 'support':15 'tom':6
8	0	0	b7bb010c41cde38d781c5a6d6a954100	Casting an integer to BIT(N) selects the rightmost N bits of the integer (Tom) In prior releases, the leftmost N bits were selected, but this was deemed unhelpful, not to mention inconsistent with casting from bit to int.	'bit':5,11,22,37 'cast':1,35 'deem':28 'inconsist':33 'int':39 'integ':3,14 'leftmost':20 'mention':32 'n':6,10,21 'prior':17 'releas':18 'rightmost':9 'select':7,24 'tom':15 'unhelp':29
8	0	0	6cf356148c5f16a520fad5195523e4d2	Require CIDR values to have all nonmasked bits be zero (Kevin Brintnall)	'bit':8 'brintnal':12 'cidr':2 'kevin':11 'nonmask':7 'requir':1 'valu':3 'zero':10
8	0	0	933ee64ca9500638ab8db6fa9c4f466f	In READ COMMITTED serialization mode, volatile functions now see the results of concurrent transactions committed up to the beginning of each statement within the function, rather than up to the beginning of the interactive command that called the function.	'begin':19,31 'call':37 'command':35 'commit':3,15 'concurr':13 'function':7,25,39 'interact':34 'mode':5 'rather':26 'read':2 'result':11 'see':9 'serial':4 'statement':22 'transact':14 'volatil':6 'within':23
8	0	0	33e26192c9c7fac56cbed71f7633ed1e	Add pstdin / pstdout to read from psql 's stdin / stdout (Mark Feit)	'add':1 'feit':12 'mark':11 'psql':7 'pstdin':2 'pstdout':3 'read':5 'stdin':9 'stdout':10
8	0	0	27b1b3ecff4e15546c94e3d7a9191da0	Many contrib/tsearch2 improvements (Teodor)	'contrib/tsearch2':2 'improv':3 'mani':1 'teodor':4
8	0	0	203b36f1bc357bd994f2840bb12f3b51	Functions declared STABLE or IMMUTABLE always use the snapshot of the calling query, and therefore do not see the effects of actions taken after the calling query starts, whether in their own transaction or other transactions. Such a function must be read-only, too, meaning that it cannot use any SQL commands other than SELECT . There is a considerable performance gain from declaring a function STABLE or IMMUTABLE rather than VOLATILE .	'action':22 'alway':6 'call':12,26 'cannot':49 'command':53 'consider':60 'declar':2,64 'effect':20 'function':1,39,66 'gain':62 'immut':5,69 'mean':46 'must':40 'perform':61 'queri':13,27 'rather':70 'read':43 'read-on':42 'see':18 'select':56 'snapshot':9 'sql':52 'stabl':3,67 'start':28 'taken':23 'therefor':15 'transact':33,36 'use':7,50 'volatil':72 'whether':29
8	0	0	6fe9a41c260e2d339ac471f7be983326	Nondeferred AFTER triggers are now fired immediately after completion of the triggering query, rather than upon finishing the current interactive command. This makes a difference when the triggering query occurred within a function: the trigger is invoked before the function proceeds to its next operation. For example, if a function inserts a new row into a table, any nondeferred foreign key checks occur before proceeding with the function.	'check':62 'command':21 'complet':9 'current':19 'differ':25 'exampl':47 'finish':17 'fire':6 'foreign':60 'function':33,40,50,68 'immedi':7 'insert':51 'interact':20 'invok':37 'key':61 'make':23 'new':53 'next':44 'nondef':1,59 'occur':30,63 'oper':45 'proceed':41,65 'queri':13,29 'rather':14 'row':54 'tabl':57 'trigger':3,12,28,35 'upon':16 'within':31
8	0	0	aa264877a4e8fbee7264fad3d25c2535	Allow function parameters to be declared with names (Dennis Bj&ouml;rklund) This allows better documentation of functions. Whether the names actually do anything depends on the specific function language being used.	'actual':21 'allow':1,13 'anyth':23 'better':14 'bj':10 'declar':6 'denni':9 'depend':24 'document':15 'function':2,17,28 'languag':29 'name':8,20 'paramet':3 'rklund':11 'specif':27 'use':31 'whether':18
8	0	0	9318d8c62f4c49c5a374d80e0f838054	Allow PL/pgSQL parameter names to be referenced in the function (Dennis Bj&ouml;rklund) This basically creates an automatic alias for each named parameter.	'alia':19 'allow':1 'automat':18 'basic':15 'bj':12 'creat':16 'denni':11 'function':10 'name':4,22 'paramet':3,23 'pl/pgsql':2 'referenc':7 'rklund':13
8	0	0	23a08e72d95da5656c65ff0f39a9dcba	Do minimal syntax checking of PL/pgSQL functions at creation time (Tom) This allows us to catch simple syntax errors sooner.	'allow':13 'catch':16 'check':4 'creation':9 'error':19 'function':7 'minim':2 'pl/pgsql':6 'simpl':17 'sooner':20 'syntax':3,18 'time':10 'tom':11 'us':14
8	0	0	4fc8f5a4d44d3f5f78fb3523eb6edfa9	More support for composite types (row and record variables) in PL/pgSQL For example, it now works to pass a rowtype variable to another function as a single variable.	'anoth':23 'composit':4 'exampl':13 'function':24 'pass':18 'pl/pgsql':11 'record':8 'row':6 'rowtyp':20 'singl':27 'support':2 'type':5 'variabl':9,21,28 'work':16
8	0	0	e92abba2e1c9dee930045c1d5cf6b2fc	Default values for PL/pgSQL variables can now reference previously declared variables	'declar':10 'default':1 'pl/pgsql':4 'previous':9 'refer':8 'valu':2 'variabl':5,11
8	0	0	efd19fd365c0dfebf5869878dfdde47d	Improve parsing of PL/pgSQL FOR loops (Tom) Parsing is now driven by presence of ".." rather than data type of FOR variable. This makes no difference for correct functions, but should result in more understandable error messages when a mistake is made.	'correct':27 'data':17 'differ':25 'driven':11 'error':35 'function':28 'improv':1 'loop':6 'made':41 'make':23 'messag':36 'mistak':39 'pars':2,8 'pl/pgsql':4 'presenc':13 'rather':15 'result':31 'tom':7 'type':18 'understand':34 'variabl':21
8	0	0	7331f89d114b7dd82e52b25de3c5b153	Major overhaul of PL/Perl server-side language (Command Prompt, Andrew Dunstan)	'andrew':11 'command':9 'dunstan':12 'languag':8 'major':1 'overhaul':2 'pl/perl':4 'prompt':10 'server':6 'server-sid':5 'side':7
8	0	0	33d0f1bb266e5d89a563b0ba2aeffe58	In PL/Tcl, SPI commands are now run in subtransactions. If an error occurs, the subtransaction is cleaned up and the error is reported as an ordinary Tcl error, which can be trapped with catch . Formerly, it was not possible to catch such errors.	'catch':34,41 'clean':17 'command':4 'error':12,21,28,43 'former':35 'occur':13 'ordinari':26 'pl/tcl':2 'possibl':39 'report':23 'run':7 'spi':3 'subtransact':9,15 'tcl':27 'trap':32
8	0	0	e8b0dfb2d203a78b31fe03e1f2d8596a	Accept ELSEIF in PL/pgSQL (Neil) Previously PL/pgSQL only allowed ELSIF , but many people are accustomed to spelling this keyword ELSEIF .	'accept':1 'accustom':15 'allow':9 'elseif':2,20 'elsif':10 'keyword':19 'mani':12 'neil':5 'peopl':13 'pl/pgsql':4,7 'previous':6 'spell':17
8	0	0	7d5c379363eaa66fccfd14ce995bf248	Improve psql information display about database objects (Christopher)	'christoph':8 'databas':6 'display':4 'improv':1 'inform':3 'object':7 'psql':2
8	0	0	3f9c878cf24cbbceb158687f15a5e869	Allow psql to display group membership in \\du and \\dg (Markus Bertheau)	'allow':1 'bertheau':12 'dg':10 'display':4 'du':8 'group':5 'markus':11 'membership':6 'psql':2
8	0	0	9e58781aeadd91eeea78897deb4e4cc5	Prevent psql \\dn from showing temporary schemas (Bruce)	'bruce':8 'dn':3 'prevent':1 'psql':2 'schema':7 'show':5 'temporari':6
8	0	0	2f01cf625df3a251f271a18aa8550c3e	Allow psql to handle tilde user expansion for file names (Zach Irmen)	'allow':1 'expans':7 'file':9 'handl':4 'irmen':12 'name':10 'psql':2 'tild':5 'user':6 'zach':11
8	0	0	2559acb31174a2cc831c26c66878753b	Allow psql to display fancy prompts, including color, via readline (Reece Hart, Chet Ramey)	'allow':1 'chet':13 'color':8 'display':4 'fanci':5 'hart':12 'includ':7 'prompt':6 'psql':2 'ramey':14 'readlin':10 'reec':11 'via':9
8	0	0	ef081d871087859bd2bcaff73b6a0168	Make psql \\copy match COPY command syntax fully (Tom)	'command':6 'copi':3,5 'fulli':8 'make':1 'match':4 'psql':2 'syntax':7 'tom':9
8	0	0	5ee513ad100dc20268fb8c15ef61c940	Show the location of syntax errors (Fabien Coelho, Tom)	'coelho':8 'error':6 'fabien':7 'locat':3 'show':1 'syntax':5 'tom':9
8	0	0	5de18f7e9ac94fc78dab0b5e575a09c3	Add CLUSTER information to psql \\d display (Bruce)	'add':1 'bruce':8 'cluster':2 'd':6 'display':7 'inform':3 'psql':5
8	0	0	b1c1d85c80ca29c2f65d4375283b3b12	Add global psql configuration file, psqlrc.sample (Bruce) This allows a central file where global psql startup commands can be stored.	'add':1 'allow':9 'bruce':7 'central':11 'command':17 'configur':4 'file':5,12 'global':2,14 'psql':3,15 'psqlrc.sample':6 'startup':16 'store':20
8	0	0	e63c7dcdda8f7b92fa2d187bc1d2a6b4	Have psql \\d+ indicate if the table has an OID column (Neil)	'column':11 'd':3 'indic':4 'neil':12 'oid':10 'psql':2 'tabl':7
8	0	0	a400906e44f9db7c5f2586d24a803b1c	On Windows, use binary mode in psql when reading files so control-Z is not seen as end-of-file	'binari':4 'control':13 'control-z':12 'end':20 'end-of-fil':19 'file':10,22 'mode':5 'psql':7 'read':9 'seen':17 'use':3 'window':2 'z':14
8	0	0	a94af7c6abb6417e642a7fde496c5d4b	Have \\dn+ show permissions and description for schemas (Dennis Bj&ouml;rklund)	'bj':10 'denni':9 'descript':6 'dn':2 'permiss':4 'rklund':11 'schema':8 'show':3
8	0	0	358cea56ece0d33c41f2ed0d5a253ea2	Improve tab completion support (Stefan Kaltenbrunn, Greg Sabino Mullane)	'complet':3 'greg':7 'improv':1 'kaltenbrunn':6 'mullan':9 'sabino':8 'stefan':5 'support':4 'tab':2
8	0	0	06a9203e3a89fb3eab3d47835b46dbe1	Allow boolean settings to be set using upper or lower case (Michael Paesold)	'allow':1 'boolean':2 'case':11 'lower':10 'michael':12 'paesold':13 'set':3,6 'upper':8 'use':7
8	0	0	f11f420760c3ea7c667391fc841e1fc8	Use dependency information to improve the reliability of pg_dump (Tom) This should solve the longstanding problems with related objects sometimes being dumped in the wrong order.	'depend':2 'dump':10,23 'improv':5 'inform':3 'longstand':16 'object':20 'order':27 'pg':9 'problem':17 'relat':19 'reliabl':7 'solv':14 'sometim':21 'tom':11 'use':1 'wrong':26
8	0	0	0874adc2de5e985fa56bf2d73e1980c5	Have pg_dump output objects in alphabetical order if possible (Tom) This should make it easier to identify changes between dump files.	'alphabet':7 'chang':19 'dump':3,21 'easier':16 'file':22 'identifi':18 'make':14 'object':5 'order':8 'output':4 'pg':2 'possibl':10 'tom':11
8	0	0	8ce66aeeb73f6c76976e4dbcda4b2a42	Allow pg_restore to ignore some SQL errors (Fabien Coelho) This makes pg_restore 's behavior similar to the results of feeding a pg_dump output script to psql . In most cases, ignoring errors and plowing ahead is the most useful thing to do. Also added was a pg_restore option to give the old behavior of exiting on an error.	'ad':46 'ahead':37 'allow':1 'also':45 'behavior':16,56 'case':32 'coelho':10 'dump':25 'error':8,34,61 'exit':58 'fabien':9 'feed':22 'give':53 'ignor':5,33 'make':12 'old':55 'option':51 'output':26 'pg':2,13,24,49 'plow':36 'psql':29 'restor':3,14,50 'result':20 'script':27 'similar':17 'sql':7 'thing':42 'use':41
8	0	0	ed84844b605476a6c1aab2e407ada37a	pg_restore -l display now includes objects' schema names	'display':4 'includ':6 'l':3 'name':9 'object':7 'pg':1 'restor':2 'schema':8
8	0	0	c98ad2434f1bd66e8497951bab5176e8	Add start/stop times for pg_dump / pg_dumpall in verbose mode (Bruce)	'add':1 'bruce':12 'dump':6 'dumpal':8 'mode':11 'pg':5,7 'start/stop':2 'time':3 'verbos':10
8	0	0	22ef304244cd754db3eb1233c93a90de	Allow most pg_dump options in pg_dumpall (Christopher)	'allow':1 'christoph':9 'dump':4 'dumpal':8 'option':5 'pg':3,7
8	0	0	10d5a30930dec47f565142df67da56b0	Have pg_dump use ALTER OWNER rather than SET SESSION AUTHORIZATION by default (Christopher)	'alter':5 'author':11 'christoph':14 'default':13 'dump':3 'owner':6 'pg':2 'rather':7 'session':10 'set':9 'use':4
8	0	0	cad2f79a90673ec2a81808dce0dd907f	Make libpq's SIGPIPE handling thread-safe (Bruce)	'bruce':9 'handl':5 'libpq':2 'make':1 'safe':8 'sigpip':4 'thread':7 'thread-saf':6
8	0	0	77494cebac2be553378341dfa7f717f1	Add PQmbdsplen() which returns the display length of a character (Tatsuo)	'add':1 'charact':10 'display':6 'length':7 'pqmbdsplen':2 'return':4 'tatsuo':11
8	0	0	29e92d2b5f28d0745dc003f0b80b6a3b	Add thread locking to SSL and Kerberos connections (Manfred Spraul)	'add':1 'connect':8 'kerbero':7 'lock':3 'manfr':9 'spraul':10 'ssl':5 'thread':2
8	0	0	c0eb7cd164079ceb6a9a6c87848d3eb5	Allow PQoidValue() , PQcmdTuples() , and PQoidStatus() to work on EXECUTE commands (Neil)	'allow':1 'command':10 'execut':9 'neil':11 'pqcmdtupl':3 'pqoidstatus':5 'pqoidvalu':2 'work':7
8	0	0	6d67919e7981d170263e22f0efd69960	Add PQserverVersion() to provide more convenient access to the server version number (Greg Sabino Mullane)	'access':7 'add':1 'conveni':6 'greg':13 'mullan':15 'number':12 'pqserververs':2 'provid':4 'sabino':14 'server':10 'version':11
8	0	0	5fcfe4c0b6d4b3cb8ce6bae5aa66ca49	Add PQprepare/PQsendPrepared() functions to support preparing statements without necessarily specifying the data types of their parameters (Abhijit Menon-Sen)	'abhijit':17 'add':1 'data':12 'function':3 'menon':19 'menon-sen':18 'necessarili':9 'paramet':16 'pqprepare/pqsendprepared':2 'prepar':6 'sen':20 'specifi':10 'statement':7 'support':5 'type':13 'without':8
8	0	0	9eb7b4c2f4f7e704bfa7b05a80456272	Many ECPG improvements, including SET DESCRIPTOR (Michael)	'descriptor':6 'ecpg':2 'improv':3 'includ':4 'mani':1 'michael':7 'set':5
8	0	0	b8494dea50738f07f01bda1d63631070	Allow the database server to run natively on Windows (Claudio, Magnus, Andrew)	'allow':1 'andrew':12 'claudio':10 'databas':3 'magnus':11 'nativ':7 'run':6 'server':4 'window':9
8	0	0	35d989a3af167a9e9c1d32cf3a9e5083	Shell script commands converted to C versions for Windows support (Andrew)	'andrew':11 'c':6 'command':3 'convert':4 'script':2 'shell':1 'support':10 'version':7 'window':9
8	0	0	1ec2afd3c026a2878afc6c0eca3e587c	Create an extension makefile framework (Fabien Coelho, Peter) This simplifies the task of building extensions outside the original source tree.	'build':14 'coelho':7 'creat':1 'extens':3,15 'fabien':6 'framework':5 'makefil':4 'origin':18 'outsid':16 'peter':8 'simplifi':10 'sourc':19 'task':12 'tree':20
8	0	0	4c04c7ed430540e7c13775d2af222f74	New contrib/xml2 (John Gray, Torchbox)	'contrib/xml2':2 'gray':4 'john':3 'new':1 'torchbox':5
8	0	0	a199e787a50de7263a3248aafbc30112	Updated contrib/mysql	'contrib/mysql':2 'updat':1
8	0	0	e20084ec189dee95b3fcc4bdbb979dab	Support relocatable installations (Bruce) Directory paths for installed files (such as the /share directory) are now computed relative to the actual location of the executables, so that an installation tree can be moved to another place without reconfiguring and rebuilding.	'/share':13 'actual':21 'anoth':35 'bruce':4 'comput':17 'directori':5,14 'execut':25 'file':9 'instal':3,8,29 'locat':22 'move':33 'path':6 'place':36 'rebuild':40 'reconfigur':38 'relat':18 'relocat':2 'support':1 'tree':30 'without':37
8	0	0	4878369ca2a7665b16a6c990ec74ec22	Use --with-docdir to choose installation location of documentation; also allow --infodir (Peter)	'allow':12 'also':11 'choos':6 'docdir':4 'document':10 'infodir':13 'instal':7 'locat':8 'peter':14 'use':1 'with-docdir':2
8	0	0	0fe44f753847950e8dcc77461a3a0bf1	Add --without-docdir to prevent installation of documentation (Peter)	'add':1 'docdir':4 'document':9 'instal':7 'peter':10 'prevent':6 'without':3 'without-docdir':2
8	0	0	cf839cb07a6431b1d491fbc1e2c5708a	Upgrade to DocBook V4.2 SGML (Peter)	'docbook':3 'peter':6 'sgml':5 'upgrad':1 'v4.2':4
8	0	0	c369f8dcb4d220fc9380581ebbb9b709	New PostgreSQL CVS tag (Marc) This was done to make it easier for organizations to manage their own copies of the PostgreSQL CVS repository. File version stamps from the master repository will not get munged by checking into or out of a copied repository.	'check':37 'copi':19,43 'cvs':3,23 'done':8 'easier':12 'file':25 'get':34 'make':10 'manag':16 'marc':5 'master':30 'mung':35 'new':1 'organ':14 'postgresql':2,22 'repositori':24,31,44 'stamp':27 'tag':4 'version':26
8	0	0	d5301d8f819308a546d5372c255201de	Clarify locking code (Manfred Koizar)	'clarifi':1 'code':3 'koizar':5 'lock':2 'manfr':4
8	0	0	04b2dbeacef06e0b9afc78a419f12d6e	Buffer manager cleanup (Neil)	'buffer':1 'cleanup':3 'manag':2 'neil':4
8	0	0	b15a9399e6c834b4241f4c15b4faa10c	Decouple platform tests from CPU spinlock code (Bruce, Tom)	'bruce':8 'code':7 'cpu':5 'decoupl':1 'platform':2 'spinlock':6 'test':3 'tom':9
8	0	0	141aeb5f06a7911f333800063180577b	Add inlined test-and-set code on PA-RISC for gcc (ViSolve, Tom)	'add':1 'code':7 'gcc':13 'inlin':2 'pa':10 'pa-risc':9 'risc':11 'set':6 'test':4 'test-and-set':3 'tom':15 'visolv':14
8	0	0	2773ca7701ebd447fb986a0ed5631c4d	Improve i386 spinlock code (Manfred Spraul)	'code':4 'i386':2 'improv':1 'manfr':5 'spinlock':3 'spraul':6
8	0	0	88c4daffa0e520d844b5fa151e5118e1	Clean up spinlock assembly code to avoid warnings from newer gcc releases (Tom)	'assembl':4 'avoid':7 'clean':1 'code':5 'gcc':11 'newer':10 'releas':12 'spinlock':3 'tom':13 'warn':8
8	0	0	3703376c94f7bbfc7aba43be813b2032	Remove JDBC from source tree; now a separate project	'jdbc':2 'project':9 'remov':1 'separ':8 'sourc':4 'tree':5
8	0	0	4b14bb15e9be17f8c88426cd021b9489	Remove the libpgtcl client interface; now a separate project	'client':4 'interfac':5 'libpgtcl':3 'project':9 'remov':1 'separ':8
8	0	0	4cbec8a184501b6aa510ce6eb982ecc9	More accurately estimate memory and file descriptor usage (Tom)	'accur':2 'descriptor':7 'estim':3 'file':6 'memori':4 'tom':9 'usag':8
8	0	0	f5271cc24d47cb8b0fcfa5bbaeefed78	Improvements to the Mac OS X startup scripts (Ray A.)	'improv':1 'mac':4 'os':5 'ray':9 'script':8 'startup':7 'x':6
8	0	0	62bd47cb6afdffcb1bbb72e80486eb7c	Remove pg_id ; not needed anymore	'anymor':6 'id':3 'need':5 'pg':2 'remov':1
8	0	0	8955fb5893731dbd6e03618008fb8fb9	Remove initlocation ; not needed anymore	'anymor':5 'initloc':2 'need':4 'remov':1
8	0	0	6e2a12199435b80278fc34887093ea24	Auto-detect thread flags (no more manual testing) (Bruce)	'auto':2 'auto-detect':1 'bruce':10 'detect':3 'flag':5 'manual':8 'test':9 'thread':4
8	0	0	bfef54f9a7cbd79fd17a24f22a4ab730	Use Olson's public domain timezone library (Magnus)	'domain':5 'librari':7 'magnus':8 'olson':2 'public':4 'timezon':6 'use':1
8	0	0	27f9da90ed09743eef14dbc868684c3b	With threading enabled, use thread flags on Unixware for backend executables too (Bruce) Unixware cannot mix threaded and nonthreaded object files in the same executable, so everything must be compiled as threaded.	'backend':10 'bruce':13 'cannot':15 'compil':30 'enabl':3 'everyth':27 'execut':11,25 'file':21 'flag':6 'mix':16 'must':28 'nonthread':19 'object':20 'thread':2,5,17,32 'unixwar':8,14 'use':4
8	0	0	5805522ee59604a3625c22950b8f8ce7	psql now uses a flex -generated lexical analyzer to process command strings	'analyz':8 'command':11 'flex':5 'generat':6 'lexic':7 'process':10 'psql':1 'string':12 'use':3
8	0	0	61b6be9a2e3adc2e3d2d370022ce4231	Reimplement the linked list data structure used throughout the backend (Neil) This improves performance by allowing list append and length operations to be more efficient.	'allow':16 'append':18 'backend':10 'data':5 'effici':25 'improv':13 'length':20 'link':3 'list':4,17 'neil':11 'oper':21 'perform':14 'reimplement':1 'structur':6 'throughout':8 'use':7
8	0	0	50ecba3c85b2f33bde389bf397ce4487	Allow dynamically loaded modules to create their own server configuration parameters (Thomas Hallgren)	'allow':1 'configur':10 'creat':6 'dynam':2 'hallgren':13 'load':3 'modul':4 'paramet':11 'server':9 'thoma':12
8	0	0	7d7d3b15ef405c978baeccb9ec9fee8f	New Brazilian version of FAQ (Euler Taveira de Oliveira)	'brazilian':2 'de':8 'euler':6 'faq':5 'new':1 'oliveira':9 'taveira':7 'version':3
8	0	0	e74031955c4160164b71c810d93873b7	Add French FAQ (Guillaume Lelarge)	'add':1 'faq':3 'french':2 'guillaum':4 'lelarg':5
8	0	0	b37444f7fbf0d5ac82982a0cc55b9916	New pgevent for Windows logging	'log':5 'new':1 'pgevent':2 'window':4
8	0	0	4fe077f2f45d386321045d548c3007ae	Make libpq and ECPG build as proper shared libraries on OS X (Tom)	'build':5 'ecpg':4 'libpq':2 'librari':9 'make':1 'os':11 'proper':7 'share':8 'tom':13 'x':12
8	0	0	4dac69f7ae04fbd7d65401e123495c65	Overhaul of contrib/dblink (Joe)	'contrib/dblink':3 'joe':4 'overhaul':1
8	0	0	56ab4b005bc2c1eb8f0ff0a2c0537d26	contrib/dbmirror improvements (Steven Singer)	'contrib/dbmirror':1 'improv':2 'singer':4 'steven':3
8	0	0	94a51f7d14f6a9a8a783d96629756b3e	Add double metaphone to contrib/fuzzystrmatch (Andrew)	'add':1 'andrew':6 'contrib/fuzzystrmatch':5 'doubl':2 'metaphon':3
8	0	0	5d445b8067a1c0f81856b8da19036f62	Allow contrib/pg_autovacuum to run as a Windows service (Dave Page)	'allow':1 'contrib/pg_autovacuum':2 'dave':9 'page':10 'run':4 'servic':8 'window':7
8	0	0	3f9097b59ad4a3a0a28c766865bd978f	Add functions to contrib/dbsize (Andreas Pflug)	'add':1 'andrea':5 'contrib/dbsize':4 'function':2 'pflug':6
8	0	0	9029a8b107df0b16769e5a067133911c	Removed contrib/pg_logger : obsoleted by integrated logging subprocess	'contrib/pg_logger':2 'integr':5 'log':6 'obsolet':3 'remov':1 'subprocess':7
8	0	0	ecf5ba7381cb4ed08a547bc8355c19ce	Removed contrib/rserv : obsoleted by various separate projects	'contrib/rserv':2 'obsolet':3 'project':7 'remov':1 'separ':6 'various':5
8	1	17	823a5ca6b2bbd23f7396677c912fcb2a	Prevent error recursion crashes when encoding conversion fails (Tom) This change extends fixes made in the last two minor releases for related failure scenarios. The previous fixes were narrowly tailored for the original problem reports, but we have now recognized that any error thrown by an encoding conversion function could potentially lead to infinite recursion while trying to report the error. The solution therefore is to disable translation and encoding conversion and report the plain-ASCII form of any error message, if we find we have gotten into a recursive error reporting situation. (CVE-2009-0922)	'-0922':97 '-2009':96 'ascii':77 'chang':11 'convers':7,48,71 'could':50 'crash':4 'cve':95 'disabl':67 'encod':6,47,70 'error':2,43,61,81,92 'extend':12 'fail':8 'failur':23 'find':85 'fix':13,27 'form':78 'function':49 'gotten':88 'infinit':54 'last':17 'lead':52 'made':14 'messag':82 'minor':19 'narrowli':29 'origin':33 'plain':76 'plain-ascii':75 'potenti':51 'prevent':1 'previous':26 'problem':34 'recogn':40 'recurs':3,55,91 'relat':22 'releas':20 'report':35,59,73,93 'scenario':24 'situat':94 'solut':63 'tailor':30 'therefor':64 'thrown':44 'tom':9 'translat':68 'tri':57 'two':18
8	1	17	029dd667f0b3c50067008fadae2d5c39	Disallow CREATE CONVERSION with the wrong encodings for the specified conversion function (Heikki) This prevents one possible scenario for encoding conversion failure. The previous change is a backstop to guard against other kinds of failures in the same area.	'area':39 'backstop':28 'chang':25 'convers':3,11,21 'creat':2 'disallow':1 'encod':7,20 'failur':22,35 'function':12 'guard':30 'heikki':13 'kind':33 'one':16 'possibl':17 'prevent':15 'previous':24 'scenario':18 'specifi':10 'wrong':6
8	1	17	c57ebc9c3b373992f1a0ed31f9e15011	Fix core dump when to_char() is given format codes that are inappropriate for the type of the data argument (Tom)	'argument':20 'char':6 'code':10 'core':2 'data':19 'dump':3 'fix':1 'format':9 'given':8 'inappropri':13 'tom':21 'type':16
8	1	17	c74bc370db7edd8327e6beef7b43c846	Fix decompilation of CASE WHEN with an implicit coercion (Tom) This mistake could lead to Assert failures in an Assert-enabled build, or an unexpected CASE WHEN clause error message in other cases, when trying to examine or dump a view.	'assert':16,21 'assert-en':20 'build':23 'case':4,27,34 'claus':29 'coercion':9 'could':13 'decompil':2 'dump':40 'enabl':22 'error':30 'examin':38 'failur':17 'fix':1 'implicit':8 'lead':14 'messag':31 'mistak':12 'tom':10 'tri':36 'unexpect':26 'view':42
8	1	17	4fc7778c1973bf1c60b123ebbdea9e37	Fix possible misassignment of the owner of a TOAST table's rowtype (Tom) If CLUSTER or a rewriting variant of ALTER TABLE were executed by someone other than the table owner, the pg_type entry for the table's TOAST table would end up marked as owned by that someone. This caused no immediate problems, since the permissions on the TOAST rowtype aren't examined by any ordinary database operation. However, it could lead to unexpected failures if one later tried to drop the role that issued the command (in 8.1 or 8.2), or owner of data type appears to be invalid warnings from pg_dump after having done so (in 8.3).	'8.1':91 '8.2':93 '8.3':112 'alter':21 'appear':99 'aren':63 'caus':52 'cluster':15 'command':89 'could':73 'data':97 'databas':69 'done':109 'drop':83 'dump':106 'end':43 'entri':35 'examin':65 'execut':24 'failur':77 'fix':1 'howev':71 'immedi':54 'invalid':102 'issu':87 'later':80 'lead':74 'mark':45 'misassign':3 'one':79 'oper':70 'ordinari':68 'own':47 'owner':6,31,95 'permiss':58 'pg':33,105 'possibl':2 'problem':55 'rewrit':18 'role':85 'rowtyp':12,62 'sinc':56 'someon':26,50 'tabl':10,22,30,38,41 'toast':9,40,61 'tom':13 'tri':81 'type':34,98 'unexpect':76 'variant':19 'warn':103 'would':42
8	1	17	92f2632bd47e2327831630c10b927b5c	Clean up PL/pgSQL error status variables fully at block exit (Ashesh Vashi and Dave Page) This is not a problem for PL/pgSQL itself, but the omission could cause the PL/pgSQL Debugger to crash while examining the state of a function.	'ashesh':11 'block':9 'caus':28 'clean':1 'could':27 'crash':33 'dave':14 'debugg':31 'error':4 'examin':35 'exit':10 'fulli':7 'function':40 'omiss':26 'page':15 'pl/pgsql':3,22,30 'problem':20 'state':37 'status':5 'variabl':6 'vashi':12
8	1	17	16364a26b80915323dd1cc503f14e851	Add MUST (Mauritius Island Summer Time) to the default list of known timezone abbreviations (Xavier Bugaud)	'abbrevi':14 'add':1 'bugaud':16 'default':9 'island':4 'known':12 'list':10 'mauritius':3 'must':2 'summer':5 'time':6 'timezon':13 'xavier':15
8	1	16	bc950d4f6a452e3ed9d2da2eba3f450d	Fix crash in autovacuum (Alvaro) The crash occurs only after vacuuming a whole database for anti-transaction-wraparound purposes, which means that it occurs infrequently and is hard to track down.	'alvaro':5 'anti':17 'anti-transaction-wraparound':16 'autovacuum':4 'crash':2,7 'databas':14 'fix':1 'hard':29 'infrequ':26 'mean':22 'occur':8,25 'purpos':20 'track':31 'transact':18 'vacuum':11 'whole':13 'wraparound':19
8	1	16	43d54f6f6facad24a74fae2bf1fc594a	Improve handling of URLs in headline() function (Teodor)	'function':7 'handl':2 'headlin':6 'improv':1 'teodor':8 'url':4
8	1	16	b7a30488addd44acfd80b1a32536ed98	Improve handling of overlength headlines in headline() function (Teodor)	'function':8 'handl':2 'headlin':5,7 'improv':1 'overlength':4 'teodor':9
8	1	16	6c4bde05922323122598c20e06c184ff	Prevent possible Assert failure or misconversion if an encoding conversion is created with the wrong conversion function for the specified pair of encodings (Tom, Heikki)	'assert':3 'convers':10,16 'creat':12 'encod':9,23 'failur':4 'function':17 'heikki':25 'misconvers':6 'pair':21 'possibl':2 'prevent':1 'specifi':20 'tom':24 'wrong':15
8	1	16	ee82c3df361cb89bcd075dbbc6f1a63f	Avoid unnecessary locking of small tables in VACUUM (Heikki)	'avoid':1 'heikki':9 'lock':3 'small':5 'tabl':6 'unnecessari':2 'vacuum':8
8	1	16	04f77799a591e5fa5c4d572e94f9e065	Ensure that the contents of a holdable cursor don't depend on the contents of TOAST tables (Tom) Previously, large field values in a cursor result might be represented as TOAST pointers, which would fail if the referenced table got dropped before the cursor is read, or if the large value is deleted and then vacuumed away. This cannot happen with an ordinary cursor, but it could with a cursor that is held past its creating transaction.	'away':57 'cannot':59 'content':4,14 'could':67 'creat':76 'cursor':8,25,44,64,70 'delet':53 'depend':11 'drop':41 'ensur':1 'fail':35 'field':21 'got':40 'happen':60 'held':73 'holdabl':7 'larg':20,50 'might':27 'ordinari':63 'past':74 'pointer':32 'previous':19 'read':46 'referenc':38 'repres':29 'result':26 'tabl':17,39 'toast':16,31 'tom':18 'transact':77 'vacuum':56 'valu':22,51 'would':34
8	1	16	1bb29607166f04c974553f29bc64a1e7	Fix uninitialized variables in contrib/tsearch2 's get_covers() function (Teodor)	'contrib/tsearch2':5 'cover':8 'fix':1 'function':9 'get':7 'teodor':10 'uniniti':2 'variabl':3
8	1	16	fb022dd859d223813030f07f0f74b720	Fix configure script to properly report failure when unable to obtain linkage information for PL/Perl (Andrew)	'andrew':16 'configur':2 'failur':7 'fix':1 'inform':13 'linkag':12 'obtain':11 'pl/perl':15 'proper':5 'report':6 'script':3 'unabl':9
8	1	16	7dbc05bf9e4f556ca7d7446dd7b76cea	Make all documentation reference pgsql-bugs and/or pgsql-hackers as appropriate, instead of the now-decommissioned pgsql-ports and pgsql-patches mailing lists (Tom)	'and/or':8 'appropri':13 'bug':7 'decommiss':19 'document':3 'hacker':11 'instead':14 'list':28 'mail':27 'make':1 'now-decommiss':17 'patch':26 'pgsql':6,10,21,25 'pgsql-bug':5 'pgsql-hacker':9 'pgsql-patch':24 'pgsql-port':20 'port':22 'refer':4 'tom':29
8	1	16	a137f3d11406ba38e754a4441b9e6752	Update time zone data files to tzdata release 2009a (for Kathmandu and historical DST corrections in Switzerland, Cuba)	'2009a':9 'correct':15 'cuba':18 'data':4 'dst':14 'file':5 'histor':13 'kathmandu':11 'releas':8 'switzerland':17 'time':2 'tzdata':7 'updat':1 'zone':3
8	1	15	3ea6b093f857a02dc014a5619a4fa2ce	Fix GiST index corruption due to marking the wrong index entry dead after a deletion (Teodor) This would result in index searches failing to find rows they should have found. Corrupted indexes can be fixed with REINDEX .	'corrupt':4,31 'dead':12 'delet':15 'due':5 'entri':11 'fail':23 'find':25 'fix':1,35 'found':30 'gist':2 'index':3,10,21,32 'mark':7 'reindex':37 'result':19 'row':26 'search':22 'teodor':16 'would':18 'wrong':9
8	1	11	6437379ad74d4c454c288ade317f0345	Fix PL/Python to not crash on long exception messages (Alvaro)	'alvaro':10 'crash':5 'except':8 'fix':1 'long':7 'messag':9 'pl/python':2
8	1	15	397c350d8275d5b104e3c065081708a7	Fix backend crash when the client encoding cannot represent a localized error message (Tom) We have addressed similar issues before, but it would still fail if the character has no equivalent message itself couldn't be converted. The fix is to disable localization and send the plain ASCII error message when we detect such a situation.	'address':17 'ascii':48 'backend':2 'cannot':8 'charact':28 'client':6 'convert':37 'couldn':34 'crash':3 'detect':53 'disabl':42 'encod':7 'equival':31 'error':12,49 'fail':25 'fix':1,39 'issu':19 'local':11,43 'messag':13,32,50 'plain':47 'repres':9 'send':45 'similar':18 'situat':56 'still':24 'tom':14 'would':23
8	1	15	a9f7d93fbd56975e91b88bbe9416360c	Fix possible crash when deeply nested functions are invoked from a trigger (Tom)	'crash':3 'deepli':5 'fix':1 'function':7 'invok':9 'nest':6 'possibl':2 'tom':13 'trigger':12
8	1	15	bfbb7a32dac504c80d0b92929e621400	Fix mis-expansion of rule queries when a sub- SELECT appears in a function call in FROM , a multi-row VALUES list, or a RETURNING list (Tom) The usual symptom of this problem is an unrecognized node type error.	'appear':12 'call':16 'error':41 'expans':4 'fix':1 'function':15 'list':24,28 'mis':3 'mis-expans':2 'multi':21 'multi-row':20 'node':39 'problem':35 'queri':7 'return':27 'row':22 'rule':6 'select':11 'sub':10 'symptom':32 'tom':29 'type':40 'unrecogn':38 'usual':31 'valu':23
8	1	15	5331107353ccbe0920d333113a7771a2	Ensure an error is reported when a newly-defined PL/pgSQL trigger function is invoked as a normal function (Tom)	'defin':10 'ensur':1 'error':3 'function':13,19 'invok':15 'newli':9 'newly-defin':8 'normal':18 'pl/pgsql':11 'report':5 'tom':20 'trigger':12
8	1	15	168bafae2d57952f1862ad2dc6fe3812	Prevent possible collision of relfilenode numbers when moving a table to another tablespace with ALTER SET TABLESPACE (Heikki) The command tried to re-use the existing filename, instead of picking one that is known unused in the destination directory.	'alter':15 'anoth':12 'collis':3 'command':20 'destin':39 'directori':40 'exist':27 'filenam':28 'heikki':18 'instead':29 'known':35 'move':8 'number':6 'one':32 'pick':31 'possibl':2 'prevent':1 're':24 're-us':23 'relfilenod':5 'set':16 'tabl':10 'tablespac':13,17 'tri':21 'unus':36 'use':25
8	1	15	a5725c9b8bbcbc0c04c9614744987fb8	Fix incorrect tsearch2 headline generation when single query item matches first word of text (Sushant Sinha)	'first':11 'fix':1 'generat':5 'headlin':4 'incorrect':2 'item':9 'match':10 'queri':8 'singl':7 'sinha':16 'sushant':15 'text':14 'tsearch2':3 'word':12
8	1	15	46ec7f88abf6be219a4abca766871823	Fix improper display of fractional seconds in interval values when using a non-ISO datestyle in an --enable-integer-datetimes build (Ron Mayer)	'build':23 'datestyl':16 'datetim':22 'display':3 'enabl':20 'enable-integer-datetim':19 'fix':1 'fraction':5 'improp':2 'integ':21 'interv':8 'iso':15 'mayer':25 'non':14 'non-iso':13 'ron':24 'second':6 'use':11 'valu':9
8	1	14	1277360c4443f843fc81df97fed6bad1	Fix pg_ctl to properly preserve postmaster command-line arguments across a restart (Bruce)	'across':12 'argument':11 'bruce':15 'command':9 'command-lin':8 'ctl':3 'fix':1 'line':10 'pg':2 'postmast':7 'preserv':6 'proper':5 'restart':14
8	1	10	592b4ba4858e52f2bb8268972581e1ba	Fix excessive logging of SSL error messages (Tom)	'error':6 'excess':2 'fix':1 'log':3 'messag':7 'ssl':5 'tom':8
8	1	0	75c324f62ec32e863450b3ea12d2354a	pg_total_relation_size()	'pg':1 'relat':3 'size':4 'total':2
8	1	15	c706c337d807900d535ad406ff966b86	Ensure SPI_getvalue and SPI_getbinval behave correctly when the passed tuple and tuple descriptor have different numbers of columns (Tom) This situation is normal when a table has had columns added or removed, but these two functions didn't handle it properly. The only likely consequence is an incorrect error indication.	'ad':32 'behav':7 'column':20,31 'consequ':47 'correct':8 'descriptor':15 'didn':39 'differ':17 'ensur':1 'error':51 'function':38 'getbinv':6 'getvalu':3 'handl':41 'incorrect':50 'indic':52 'like':46 'normal':25 'number':18 'pass':11 'proper':43 'remov':34 'situat':23 'spi':2,5 'tabl':28 'tom':21 'tupl':12,14 'two':37
8	1	15	2b0b91b554c653a6d5838d497b0bef75	Fix ecpg 's parsing of CREATE ROLE (Michael)	'creat':6 'ecpg':2 'fix':1 'michael':8 'pars':4 'role':7
8	1	15	3dbfb8a024c3fd8d3d1d95d750222bf3	Fix recent breakage of pg_ctl restart (Tom)	'breakag':3 'ctl':6 'fix':1 'pg':5 'recent':2 'restart':7 'tom':8
8	1	15	9bf87483bd69d58d2b6e0cd2934c66ef	Update time zone data files to tzdata release 2008i (for DST law changes in Argentina, Brazil, Mauritius, Syria)	'2008i':9 'argentina':15 'brazil':16 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':17 'releas':8 'syria':18 'time':2 'tzdata':7 'updat':1 'zone':3
8	1	14	ac11de008a8e58a5d1dbb3b637bdfedf	Widen local lock counters from 32 to 64 bits (Tom) This responds to reports that the counters could overflow in sufficiently long transactions, leading to unexpected lock is already held errors.	'32':6 '64':8 'alreadi':29 'bit':9 'could':18 'counter':4,17 'error':31 'held':30 'lead':24 'local':2 'lock':3,27 'long':22 'overflow':19 'report':14 'respond':12 'suffici':21 'tom':10 'transact':23 'unexpect':26 'widen':1
8	1	14	1eefaf6bdf649340ef623af81f6c2113	Fix possible duplicate output of tuples during a GiST index scan (Teodor)	'duplic':3 'fix':1 'gist':9 'index':10 'output':4 'possibl':2 'scan':11 'teodor':12 'tupl':6
8	1	14	597761c6603cf784d2292b20f0f4062b	Add checks in executor startup to ensure that the tuples produced by an INSERT or UPDATE will match the target table's current rowtype (Tom) ALTER COLUMN TYPE , followed by re-use of a previously cached plan, could produce this type of situation. The check protects against data corruption and/or crashes that could ensue.	'add':1 'alter':26 'and/or':51 'cach':37 'check':2,46 'column':27 'corrupt':50 'could':39,54 'crash':52 'current':23 'data':49 'ensu':55 'ensur':7 'executor':4 'follow':29 'insert':14 'match':18 'plan':38 'previous':36 'produc':11,40 'protect':47 're':32 're-us':31 'rowtyp':24 'situat':44 'startup':5 'tabl':21 'target':20 'tom':25 'tupl':10 'type':28,42 'updat':16 'use':33
8	1	14	15cd6b1a036685dfb19f2f46af04db6d	Fix AT TIME ZONE to first try to interpret its timezone argument as a timezone abbreviation, and only try it as a full timezone name if that fails, rather than the other way around as formerly (Tom) The timestamp input functions have always resolved ambiguous zone names in this order. Making AT TIME ZONE do so as well improves consistency, and fixes a compatibility bug introduced in 8.1: in ambiguous cases we now behave the same as 8.0 and before did, since in the older versions AT TIME ZONE accepted only abbreviations.	'8.0':78 '8.1':68 'abbrevi':16,92 'accept':90 'alway':43 'ambigu':45,70 'argument':12 'around':34 'behav':74 'bug':65 'case':71 'compat':64 'consist':60 'fail':28 'first':6 'fix':1,62 'former':36 'full':23 'function':41 'improv':59 'input':40 'interpret':9 'introduc':66 'make':51 'name':25,47 'older':85 'order':50 'rather':29 'resolv':44 'sinc':82 'time':3,53,88 'timestamp':39 'timezon':11,15,24 'tom':37 'tri':7,19 'version':86 'way':33 'well':58 'zone':4,46,54,89
8	1	14	2a23a4ad2dad26a347325d454794dd21	Fix datetime input functions to correctly detect integer overflow when running on a 64-bit platform (Tom)	'64':14 'bit':15 'correct':6 'datetim':2 'detect':7 'fix':1 'function':4 'input':3 'integ':8 'overflow':9 'platform':16 'run':11 'tom':17
8	1	14	29a9d16ebb0879a3ca692b8fd6f2b3c5	Improve performance of writing very long log messages to syslog (Tom)	'improv':1 'log':7 'long':6 'messag':8 'perform':2 'syslog':10 'tom':11 'write':4
8	1	14	47d3340fd4ac365b13ef28eab8d4437a	Fix bug in backwards scanning of a cursor on a SELECT DISTINCT ON query (Tom)	'backward':4 'bug':2 'cursor':8 'distinct':12 'fix':1 'queri':14 'scan':5 'select':11 'tom':15
8	1	14	e361faf05adc1b4672f4100fd8b9bbd9	Fix planner bug with nested sub-select expressions (Tom) If the outer sub-select has no direct dependency on the parent query, but the inner one does, the outer value might not get recalculated for new parent query rows.	'bug':3 'depend':20 'direct':19 'express':9 'fix':1 'get':35 'inner':27 'might':33 'nest':5 'new':38 'one':28 'outer':13,31 'parent':23,39 'planner':2 'queri':24,40 'recalcul':36 'row':41 'select':8,16 'sub':7,15 'sub-select':6,14 'tom':10 'valu':32
8	1	14	759db704b2320d4bc4bccae74a052ec0	Fix planner to estimate that GROUP BY expressions yielding boolean results always result in two groups, regardless of the expressions' contents (Tom) This is very substantially more accurate than the regular GROUP BY estimate for certain boolean tests like col IS NULL .	'accur':28 'alway':12 'boolean':10,37 'certain':36 'col':40 'content':21 'estim':4,34 'express':8,20 'fix':1 'group':6,16,32 'like':39 'null':42 'planner':2 'regardless':17 'regular':31 'result':11,13 'substanti':26 'test':38 'tom':22 'two':15 'yield':9
8	1	14	57e2400239d22c9b7c72e92d82957b5c	Fix PL/PgSQL to not fail when a FOR loop's target variable is a record containing composite-type fields (Tom)	'composit':18 'composite-typ':17 'contain':16 'fail':5 'field':20 'fix':1 'loop':9 'pl/pgsql':2 'record':15 'target':11 'tom':21 'type':19 'variabl':12
8	1	14	70fc9a4f185e818e99c7bfe937165c65	Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful about the encoding of data sent to or from Tcl (Tom)	'8.5':8 'behav':4 'care':13 'correct':5 'data':18 'encod':16 'fix':1 'pl/tcl':2 'sent':19 'tcl':7,23 'tom':24
8	1	14	764f898bd5f6c99028b328896da9416c	Fix PL/Python to work with Python 2.5 This is a back-port of fixes made during the 8.2 development cycle.	'2.5':7 '8.2':19 'back':12 'back-port':11 'cycl':21 'develop':20 'fix':1,15 'made':16 'pl/python':2 'port':13 'python':6 'work':4
8	1	14	af452e00b3eafc6294a31f6b5d3d0b4d	Improve pg_dump and pg_restore 's error reporting after failure to send a SQL command (Tom)	'command':16 'dump':3 'error':8 'failur':11 'improv':1 'pg':2,5 'report':9 'restor':6 'send':13 'sql':15 'tom':17
8	1	14	ec45c869c77e0c74a72c406fa0d7e4e0	Update time zone data files to tzdata release 2008f (for DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco, Pakistan, Palestine, and Paraguay)	'2008f':9 'argentina':15 'bahama':16 'brazil':17 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':18 'morocco':19 'pakistan':20 'palestin':21 'paraguay':23 'releas':8 'time':2 'tzdata':7 'updat':1 'zone':3
8	1	13	db798581b8b44ea9d6cab7fea4a6bc46	Make pg_get_ruledef() parenthesize negative constants (Tom) Before this fix, a negative constant in a view or rule might be dumped as, say, -42::integer , which is subtly incorrect: it should be (-42)::integer due to operator precedence rules. Usually this would make little difference, but it could interact with another recent patch to cause PostgreSQL to reject what had been a valid SELECT DISTINCT view query. Since this could result in pg_dump output failing to reload, it is being treated as a high-priority fix. The only released versions in which dump output is actually incorrect are 8.3.1 and 8.2.7.	'-42':25,34 '8.2.7':104 '8.3.1':102 'actual':99 'anoth':52 'caus':56 'constant':7,14 'could':49,71 'differ':46 'distinct':66 'due':36 'dump':22,75,96 'fail':77 'fix':11,89 'get':3 'high':87 'high-prior':86 'incorrect':30,100 'integ':26,35 'interact':50 'littl':45 'make':1,44 'might':20 'negat':6,13 'oper':38 'output':76,97 'parenthes':5 'patch':54 'pg':2,74 'postgresql':57 'preced':39 'prioriti':88 'queri':68 'recent':53 'reject':59 'releas':92 'reload':79 'result':72 'rule':19,40 'ruledef':4 'say':24 'select':65 'sinc':69 'subt':29 'tom':8 'treat':83 'usual':41 'valid':64 'version':93 'view':17,67 'would':43
8	1	13	516d6d43e350ee3813694a8cc9ef0c84	Make ALTER AGGREGATE ... OWNER TO update pg_shdepend (Tom) This oversight could lead to problems if the aggregate was later involved in a DROP OWNED or REASSIGN OWNED operation.	'aggreg':3,18 'alter':2 'could':12 'drop':24 'involv':21 'later':20 'lead':13 'make':1 'oper':29 'oversight':11 'own':25,28 'owner':4 'pg':7 'problem':15 'reassign':27 'shdepend':8 'tom':9 'updat':6
8	1	12	fd658d336c599356fbaa956aedd2e10c	Fix ALTER TABLE ADD COLUMN ... PRIMARY KEY so that the new column is correctly checked to see if it's been initialized to all non-nulls (Brendan Jurd) Previous versions neglected to check this requirement at all.	'add':4 'alter':2 'brendan':28 'check':15,34 'column':5,12 'correct':14 'fix':1 'initi':22 'jurd':29 'key':7 'neglect':32 'new':11 'non':26 'non-nul':25 'null':27 'previous':30 'primari':6 'requir':36 'see':17 'tabl':3 'version':31
8	1	12	e8ee123b907c8cf7dd2057da017d9806	Fix possible CREATE TABLE failure when inheriting the same constraint from multiple parent relations that inherited that constraint from a common ancestor (Tom)	'ancestor':22 'common':21 'constraint':10,18 'creat':3 'failur':5 'fix':1 'inherit':7,16 'multipl':12 'parent':13 'possibl':2 'relat':14 'tabl':4 'tom':23
8	1	12	56c8907c422c955208a03b738693a4a2	Fix conversions between ISO-8859-5 and other encodings to handle Cyrillic Yo characters ( e and E with two dots) (Sergey Burladyan)	'-5':6 '-8859':5 'burladyan':22 'charact':14 'convers':2 'cyril':12 'dot':20 'e':15,17 'encod':9 'fix':1 'handl':11 'iso':4 'sergey':21 'two':19 'yo':13
8	1	11	1d593e0c82a6a3f2c85be53986e71e8f	Fix pg_dump to correctly handle inheritance child tables that have default expressions different from their parent's (Tom)	'child':8 'correct':5 'default':12 'differ':14 'dump':3 'express':13 'fix':1 'handl':6 'inherit':7 'parent':17 'pg':2 'tabl':9 'tom':19
8	1	12	6a545c4dbe1c23a5889e0456db80ab36	Fix a few datatype input functions that were allowing unused bytes in their results to contain uninitialized, unpredictable values (Tom) This could lead to failures in which two apparently identical literal values were not seen as equal, resulting in the parser complaining about unmatched ORDER BY and DISTINCT expressions.	'allow':9 'appar':29 'byte':11 'complain':42 'contain':16 'could':22 'datatyp':4 'distinct':48 'equal':37 'express':49 'failur':25 'fix':1 'function':6 'ident':30 'input':5 'lead':23 'liter':31 'order':45 'parser':41 'result':14,38 'seen':35 'tom':20 'two':28 'uniniti':17 'unmatch':44 'unpredict':18 'unus':10 'valu':19,32
8	1	12	e433bfce0c4b7a064ae159dec508499a	Fix a corner case in regular-expression substring matching ( substring( string from pattern ) ) (Tom) The problem occurs when there is a match to the pattern overall but the user has specified a parenthesized subexpression and that subexpression hasn't got a match. An example is substring('foo' from 'foo(bar)?') . This should return NULL, since (bar) isn't matched, but it was mistakenly returning the whole-pattern match instead (ie, foo ).	'bar':51,57 'case':4 'corner':3 'exampl':45 'express':8 'fix':1 'foo':48,50,73 'got':41 'hasn':39 'ie':72 'instead':71 'isn':58 'match':10,23,43,60,70 'mistaken':64 'null':55 'occur':18 'overal':27 'parenthes':34 'pattern':14,26,69 'problem':17 'regular':7 'regular-express':6 'return':54,65 'sinc':56 'specifi':32 'string':12 'subexpress':35,38 'substr':9,11,47 'tom':15 'user':30 'whole':68 'whole-pattern':67
8	1	12	0f2891810bc28e5cb911544bce857c96	Update time zone data files to tzdata release 2008c (for DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, Argentina/San_Luis, and Chile)	'2008c':9 'argentina/san_luis':21 'chang':13 'chile':23 'choibalsan':17 'cuba':20 'data':4 'dst':11 'file':5 'iraq':16 'law':12 'morocco':15 'pakistan':18 'releas':8 'syria':19 'time':2 'tzdata':7 'updat':1 'zone':3
8	1	12	af9ed9daa5cda7b3ea3e2630d86c6096	Fix incorrect result from ecpg 's PGTYPEStimestamp_sub() function (Michael)	'ecpg':5 'fix':1 'function':9 'incorrect':2 'michael':10 'pgtypestimestamp':7 'result':3 'sub':8
8	1	12	85618920178e644a6e9b0da529179d3f	Fix core dump in contrib/xml2 's xpath_table() function when the input query returns a NULL value (Tom)	'contrib/xml2':5 'core':2 'dump':3 'fix':1 'function':9 'input':12 'null':16 'queri':13 'return':14 'tabl':8 'tom':18 'valu':17 'xpath':7
8	1	12	7058f36c959dfa913985f5108733a09d	Fix contrib/xml2 's makefile to not override CFLAGS (Tom)	'cflag':8 'contrib/xml2':2 'fix':1 'makefil':4 'overrid':7 'tom':9
8	1	12	baaf4d8aa95adf9c0d22e846d2965e96	Fix DatumGetBool macro to not fail with gcc 4.3 (Tom) This problem affects old style (V0) C functions that return boolean. The fix is already in 8.3, but the need to back-patch it was not realized at the time.	'4.3':9 '8.3':27 'affect':13 'alreadi':25 'back':33 'back-patch':32 'boolean':21 'c':17 'datumgetbool':2 'fail':6 'fix':1,23 'function':18 'gcc':8 'macro':3 'need':30 'old':14 'patch':34 'problem':12 'realiz':38 'return':20 'style':15 'time':41 'tom':10 'v0':16
8	1	12	d16a4a28282d8076c9daaad3726e18a4	Fix longstanding LISTEN / NOTIFY race condition (Tom) In rare cases a session that had just executed a LISTEN might not get a notification, even though one would be expected because the concurrent transaction executing NOTIFY was observed to commit later. A side effect of the fix is that a transaction that has executed a not-yet-committed LISTEN command will not see any row in pg_listener for the LISTEN , should it choose to look; formerly it would have. This behavior was never documented one way or the other, but it is possible that some applications depend on the old behavior.	'applic':97 'behavior':82,102 'case':10 'choos':74 'command':60 'commit':39,58 'concurr':32 'condit':6 'depend':98 'document':85 'effect':43 'even':24 'execut':16,34,53 'expect':29 'fix':1,46 'former':77 'get':21 'later':40 'listen':3,18,59,68,71 'longstand':2 'look':76 'might':19 'never':84 'not-yet-commit':55 'notif':23 'notifi':4,35 'observ':37 'old':101 'one':26,86 'pg':67 'possibl':94 'race':5 'rare':9 'row':65 'see':63 'session':12 'side':42 'though':25 'tom':7 'transact':33,50 'way':87 'would':27,79 'yet':57
8	1	12	7f9a170ddf48fa8a56a169fcbeb5a916	Disallow LISTEN and UNLISTEN within a prepared transaction (Tom) This was formerly allowed but trying to do it had various unpleasant consequences, notably that the originating backend could not exit as long as an UNLISTEN remained uncommitted.	'allow':13 'backend':27 'consequ':22 'could':28 'disallow':1 'exit':30 'former':12 'listen':2 'long':32 'notabl':23 'origin':26 'prepar':7 'remain':36 'tom':9 'transact':8 'tri':15 'uncommit':37 'unlisten':4,35 'unpleas':21 'various':20 'within':5
8	1	12	22e2b118bc322fbc702a325f9ea14c4b	Fix rare crash when an error occurs during a query using a hash index (Heikki)	'crash':3 'error':6 'fix':1 'hash':13 'heikki':15 'index':14 'occur':7 'queri':10 'rare':2 'use':11
8	1	12	b8bc3d8f2054b5621751e05d0543026b	Fix input of datetime values for February 29 in years BC (Tom) The former coding was mistaken about which years were leap years.	'29':8 'bc':11 'code':15 'datetim':4 'februari':7 'fix':1 'former':14 'input':2 'leap':22 'mistaken':17 'tom':12 'valu':5 'year':10,20,23
8	1	12	b38bcdf66579d921c9948bc8573ee4e6	Fix unrecognized node type error in some variants of ALTER OWNER (Tom)	'alter':10 'error':5 'fix':1 'node':3 'owner':11 'tom':12 'type':4 'unrecogn':2 'variant':8
8	1	12	b29a1d221ce8a748eb7df87b6ea5daad	Fix pg_ctl to correctly extract the postmaster's port number from command-line options (Itagaki Takahiro, Tom) Previously, pg_ctl start -w could try to contact the postmaster on the wrong port, leading to bogus reports of startup failure.	'bogus':37 'command':14 'command-lin':13 'contact':28 'correct':5 'could':25 'ctl':3,22 'extract':6 'failur':41 'fix':1 'itagaki':17 'lead':35 'line':15 'number':11 'option':16 'pg':2,21 'port':10,34 'postmast':8,30 'previous':20 'report':38 'start':23 'startup':40 'takahiro':18 'tom':19 'tri':26 'w':24 'wrong':33
8	1	12	63140e0cb402e6a602586b52d1374f77	Use -fwrapv to defend against possible misoptimization in recent gcc versions (Tom) This is known to be necessary when building PostgreSQL with gcc 4.3 or later.	'4.3':24 'build':20 'defend':4 'fwrapv':2 'gcc':10,23 'known':15 'later':26 'misoptim':7 'necessari':18 'possibl':6 'postgresql':21 'recent':9 'tom':12 'use':1 'version':11
8	1	11	98ed18b50bd68b97e2d1308c7843b7a5	Fix libpq crash when PGPASSFILE refers to a file that is not a plain file (Martin Pitt)	'crash':3 'file':9,15 'fix':1 'libpq':2 'martin':16 'pgpassfil':5 'pitt':17 'plain':14 'refer':6
8	1	12	b22d4f809d56c1061886c50f09a4f512	Fix display of constant expressions in ORDER BY and GROUP BY (Tom) An explictly casted constant would be shown incorrectly. This could for example lead to corruption of a view definition during dump and reload.	'cast':15 'constant':4,16 'corrupt':27 'could':22 'definit':31 'display':2 'dump':33 'exampl':24 'explict':14 'express':5 'fix':1 'group':10 'incorrect':20 'lead':25 'order':7 'reload':35 'shown':19 'tom':12 'view':30 'would':17
8	1	12	fa3c9c91f879f3c15c4c347afe18ab20	Fix libpq to handle NOTICE messages correctly during COPY OUT (Tom) This failure has only been observed to occur when a user-defined datatype's output routine issues a NOTICE, but there is no guarantee it couldn't happen due to other causes.	'caus':44 'copi':9 'correct':7 'couldn':38 'datatyp':25 'defin':24 'due':41 'failur':13 'fix':1 'guarante':36 'handl':4 'happen':40 'issu':29 'libpq':2 'messag':6 'notic':5,31 'observ':17 'occur':19 'output':27 'routin':28 'tom':11 'user':23 'user-defin':22
8	1	11	c4b6b648c757bf7b40c847509e1b8633	Prevent functions in indexes from executing with the privileges of the user running VACUUM , ANALYZE , etc (Tom) Functions used in index expressions and partial-index predicates are evaluated whenever a new table entry is made. It has long been understood that this poses a risk of trojan-horse code execution if one modifies a table owned by an untrustworthy user. (Note that triggers, defaults, check constraints, etc. pose the same type of risk.) But functions in indexes pose extra danger because they will be executed by routine maintenance operations such as VACUUM FULL , which are commonly performed automatically under a superuser account. For example, a nefarious user can execute code with superuser privileges by setting up a trojan-horse index definition and waiting for the next routine vacuum. The fix arranges for standard maintenance operations (including VACUUM , ANALYZE , REINDEX , and CLUSTER ) to execute as the table owner rather than the calling user, using the same privilege-switching mechanism already used for SECURITY DEFINER functions. To prevent bypassing this security measure, execution of SET SESSION AUTHORIZATION and SET ROLE is now forbidden within a SECURITY DEFINER context. (CVE-2007-6600)	'-2007':192 '-6600':193 'account':104 'alreadi':163 'analyz':15,141 'arrang':134 'author':179 'automat':100 'bypass':171 'call':154 'check':67 'cluster':144 'code':51,112 'common':98 'constraint':68 'context':190 'cve':191 'danger':82 'default':66 'defin':167,189 'definit':124 'entri':34 'etc':16,69 'evalu':29 'exampl':106 'execut':6,52,87,111,146,175 'express':22 'extra':81 'fix':133 'forbidden':185 'full':95 'function':2,18,77,168 'hors':50,122 'includ':139 'index':4,21,26,79,123 'long':39 'made':36 'mainten':90,137 'measur':174 'mechan':162 'modifi':55 'nefari':108 'new':32 'next':129 'note':63 'one':54 'oper':91,138 'own':58 'owner':150 'partial':25 'partial-index':24 'perform':99 'pose':44,70,80 'predic':27 'prevent':1,170 'privileg':9,115,160 'privilege-switch':159 'rather':151 'reindex':142 'risk':46,75 'role':182 'routin':89,130 'run':13 'secur':166,173,188 'session':178 'set':117,177,181 'standard':136 'superus':103,114 'switch':161 'tabl':33,57,149 'tom':17 'trigger':65 'trojan':49,121 'trojan-hors':48,120 'type':73 'understood':41 'untrustworthi':61 'use':19,156,164 'user':12,62,109,155 'vacuum':14,94,131,140 'wait':126 'whenev':30 'within':186
8	1	11	8ae0148a5caea8b8cd3344cee4393031	Repair assorted bugs in the regular-expression package (Tom, Will Drewry) Suitably crafted regular-expression patterns could cause crashes, infinite or near-infinite looping, and/or massive memory consumption, all of which pose denial-of-service hazards for applications that accept regex search patterns from untrustworthy sources. (CVE-2007-4769, CVE-2007-4772, CVE-2007-6067)	'-2007':52,55,58 '-4769':53 '-4772':56 '-6067':59 'accept':44 'and/or':28 'applic':42 'assort':2 'bug':3 'caus':20 'consumpt':31 'could':19 'craft':14 'crash':21 'cve':51,54,57 'denial':37 'denial-of-servic':36 'drewri':12 'express':8,17 'hazard':40 'infinit':22,26 'loop':27 'massiv':29 'memori':30 'near':25 'near-infinit':24 'packag':9 'pattern':18,47 'pose':35 'regex':45 'regular':7,16 'regular-express':6,15 'repair':1 'search':46 'servic':39 'sourc':50 'suitabl':13 'tom':10 'untrustworthi':49
8	1	0	fe3c54b68da58540f940faa48b46a266	pg_size_pretty()	'pg':1 'pretti':3 'size':2
8	1	11	ea4543af3802de8d8742eba71c4b3dfa	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe) The fix that appeared for this in 8.1.10 was incomplete, as it plugged the hole for only some dblink functions. (CVE-2007-6601, CVE-2007-3278)	'-2007':39,42 '-3278':43 '-6601':40 '/contrib/dblink':7 '8.1.10':25 'appear':21 'authent':12 'cve':38,41 'dblink':36 'fix':19 'function':37 'hole':32 'incomplet':27 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'plug':30 'requir':1 'secur':15 'superus':4 'use':6,9
8	1	11	305c03cbff33863c0a250e2399f1f18a	Update time zone data files to tzdata release 2007k (in particular, recent Argentina changes) (Tom)	'2007k':9 'argentina':13 'chang':14 'data':4 'file':5 'particular':11 'recent':12 'releas':8 'time':2 'tom':15 'tzdata':7 'updat':1 'zone':3
8	1	11	a630624920ee15d84ab4e4c6b4a32b98	Improve planner's handling of LIKE/regex estimation in non-C locales (Tom)	'c':11 'estim':7 'handl':4 'improv':1 'like/regex':6 'local':12 'non':10 'non-c':9 'planner':2 'tom':13
8	1	11	5b366d0583666ec521ef20ee5b462394	Fix planner failure in some cases of WHERE false AND var IN (SELECT ...) (Tom)	'case':6 'failur':3 'fals':9 'fix':1 'planner':2 'select':13 'tom':14 'var':11
8	1	11	78a9af8843f5b395c4a9ff3f63d128dc	Preserve the tablespace of indexes that are rebuilt by ALTER TABLE ... ALTER COLUMN TYPE (Tom)	'alter':10,12 'column':13 'index':5 'preserv':1 'rebuilt':8 'tabl':11 'tablespac':3 'tom':15 'type':14
8	1	11	ef33d51432038a4695b9c68628854101	Make archive recovery always start a new WAL timeline, rather than only when a recovery stop time was used (Simon) This avoids a corner-case risk of trying to overwrite an existing archived copy of the last WAL segment, and seems simpler and cleaner than the original definition.	'alway':4 'archiv':2,34 'avoid':22 'case':26 'cleaner':45 'copi':35 'corner':25 'corner-cas':24 'definit':49 'exist':33 'last':38 'make':1 'new':7 'origin':48 'overwrit':31 'rather':10 'recoveri':3,15 'risk':27 'seem':42 'segment':40 'simon':20 'simpler':43 'start':5 'stop':16 'time':17 'timelin':9 'tri':29 'use':19 'wal':8,39
8	1	11	794dc8069a09ddc693fe53cf09b27adc	Make VACUUM not use all of maintenance_work_mem when the table is too small for it to be useful (Alvaro)	'alvaro':21 'mainten':7 'make':1 'mem':9 'small':15 'tabl':12 'use':4,20 'vacuum':2 'work':8
8	1	11	c7f6d81b73ec74ba7c7b3ee64a640a9a	Fix potential crash in translate() when using a multibyte database encoding (Tom)	'crash':3 'databas':10 'encod':11 'fix':1 'multibyt':9 'potenti':2 'tom':12 'translat':5 'use':7
8	1	11	a466b46271f3f41102739be385539473	Fix overflow in extract(epoch from interval) for intervals exceeding 68 years (Tom)	'68':11 'epoch':5 'exceed':10 'extract':4 'fix':1 'interv':7,9 'overflow':2 'tom':13 'year':12
8	1	11	ed6d7881094654224c858b94c0d46089	Fix PL/Perl to not fail when a UTF-8 regular expression is used in a trusted function (Andrew)	'-8':9 'andrew':18 'express':11 'fail':5 'fix':1 'function':17 'pl/perl':2 'regular':10 'trust':16 'use':13 'utf':8
8	1	11	68bc57eaaf86b77024b9a921f5d36f28	Fix PL/Perl to cope when platform's Perl defines type bool as int rather than char (Tom) While this could theoretically happen anywhere, no standard build of Perl did things this way ... until Mac OS X 10.5.	'10.5':37 'anywher':23 'bool':11 'build':26 'char':16 'cope':4 'could':20 'defin':9 'fix':1 'happen':22 'int':13 'mac':34 'os':35 'perl':8,28 'pl/perl':2 'platform':6 'rather':14 'standard':25 'theoret':21 'thing':30 'tom':17 'type':10 'way':32 'x':36
8	1	11	917c339bfd51ff2af60b9e572987a3cf	ecpg parser fixes (Michael)	'ecpg':1 'fix':3 'michael':4 'parser':2
8	1	11	3a021187b2f2dc536873a1e255a165d2	Make contrib/pgcrypto defend against OpenSSL libraries that fail on keys longer than 128 bits; which is the case at least on some Solaris versions (Marko Kreen)	'128':13 'bit':14 'case':18 'contrib/pgcrypto':2 'defend':3 'fail':8 'key':10 'kreen':26 'least':20 'librari':6 'longer':11 'make':1 'marko':25 'openssl':5 'solari':23 'version':24
8	1	11	c8f8576b15626880680c84e5b4dc328a	Make contrib/tablefunc 's crosstab() handle NULL rowid as a category in its own right, rather than crashing (Joe)	'categori':10 'contrib/tablefunc':2 'crash':17 'crosstab':4 'handl':5 'joe':18 'make':1 'null':6 'rather':15 'right':14 'rowid':7
8	1	11	036d79aff0b9227e0da9459e5e07cce5	Fix tsvector and tsquery output routines to escape backslashes correctly (Teodor, Bruce)	'backslash':9 'bruce':12 'correct':10 'escap':8 'fix':1 'output':5 'routin':6 'teodor':11 'tsqueri':4 'tsvector':2
8	1	11	6f17d76da80f19683af3d0504d688def	Fix crash of to_tsvector() on huge input strings (Teodor)	'crash':2 'fix':1 'huge':7 'input':8 'string':9 'teodor':10 'tsvector':5
8	1	11	70f80db23e261362270ca9a1abd9300d	Require a specific version of Autoconf to be used when re-generating the configure script (Peter) This affects developers and packagers only. The change was made to prevent accidental use of untested combinations of Autoconf and PostgreSQL versions. You can remove the version check if you really want to use a different Autoconf version, but it's your responsibility whether the result works or not.	'accident':30 'affect':19 'autoconf':6,36,54 'chang':25 'check':45 'combin':34 'configur':15 'develop':20 'differ':53 'generat':13 'made':27 'packag':22 'peter':17 'postgresql':38 'prevent':29 're':12 're-gener':11 'realli':48 'remov':42 'requir':1 'respons':60 'result':63 'script':16 'specif':3 'untest':33 'use':9,31,51 'version':4,39,44,55 'want':49 'whether':61 'work':64
8	1	10	f496f502109032b6c2c9f57b3091124f	Prevent index corruption when a transaction inserts rows and then aborts close to the end of a concurrent VACUUM on the same table (Tom)	'abort':11 'close':12 'concurr':18 'corrupt':3 'end':15 'index':2 'insert':7 'prevent':1 'row':8 'tabl':23 'tom':24 'transact':6 'vacuum':19
8	1	10	4ac9051dca34f9743b83c747a2fa1cc2	Make CREATE DOMAIN ... DEFAULT NULL work properly (Tom)	'creat':2 'default':4 'domain':3 'make':1 'null':5 'proper':7 'tom':8 'work':6
8	1	10	b77eb95b8b972d8020db1e68b5202b4d	Allow the interval data type to accept input consisting only of milliseconds or microseconds (Neil)	'accept':7 'allow':1 'consist':9 'data':4 'input':8 'interv':3 'microsecond':14 'millisecond':12 'neil':15 'type':5
8	1	10	55d0d0610248620799bc97d4f7b4cd75	Fix logging so that log messages are never interleaved when using the syslogger process (Andrew)	'andrew':15 'fix':1 'interleav':9 'log':2,5 'messag':6 'never':8 'process':14 'syslogg':13 'use':11
8	1	10	f9dc71a4d66ebad0251b3beda15bdfa7	Fix crash when log_min_error_statement logging runs out of memory (Tom)	'crash':2 'error':6 'fix':1 'log':4,8 'memori':12 'min':5 'run':9 'statement':7 'tom':13
8	1	10	5ffafbef3802b627e18cbb9cc135d69e	Fix incorrect handling of some foreign-key corner cases (Tom)	'case':10 'corner':9 'fix':1 'foreign':7 'foreign-key':6 'handl':3 'incorrect':2 'key':8 'tom':11
8	1	10	ea776e1b636020b72600c3e11a641a1c	Prevent REINDEX and CLUSTER from failing due to attempting to process temporary tables of other sessions (Alvaro)	'alvaro':17 'attempt':9 'cluster':4 'due':7 'fail':6 'prevent':1 'process':11 'reindex':2 'session':16 'tabl':13 'temporari':12
8	1	10	711b9416fd8e710aef0a2375bfb35979	Update the time zone database rules, particularly New Zealand's upcoming changes (Tom)	'chang':12 'databas':5 'new':8 'particular':7 'rule':6 'time':3 'tom':13 'upcom':11 'updat':1 'zealand':9 'zone':4
8	1	10	c914e79a4730f03cf0f62d427186b96f	Windows socket improvements (Magnus)	'improv':3 'magnus':4 'socket':2 'window':1
8	1	10	810a3d9feb5c3dd7e4a170ce9f83fe5c	Suppress timezone name ( %Z ) in log timestamps on Windows because of possible encoding mismatches (Tom)	'encod':13 'log':6 'mismatch':14 'name':3 'possibl':12 'suppress':1 'timestamp':7 'timezon':2 'tom':15 'window':9 'z':4
8	1	10	2da747b0978c37a0d34e5c6a70aa1b06	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe)	'/contrib/dblink':7 'authent':12 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'requir':1 'secur':15 'superus':4 'use':6,9
8	1	9	65097a712a80fac1e986f41090348391	Support explicit placement of the temporary-table schema within search_path , and disable searching it for functions and operators (Tom) This is needed to allow a security-definer function to set a truly secure value of search_path . Without it, an unprivileged SQL user can use temporary objects to execute code with the privileges of the security-definer function (CVE-2007-2138). See CREATE FUNCTION for more information.	'-2007':64 '-2138':65 'allow':26 'code':53 'creat':67 'cve':63 'defin':30,61 'disabl':14 'execut':52 'explicit':2 'function':18,31,62,68 'inform':71 'need':24 'object':50 'oper':20 'path':12,40 'placement':3 'privileg':56 'schema':9 'search':11,15,39 'secur':29,36,60 'security-defin':28,59 'see':66 'set':33 'sql':45 'support':1 'tabl':8 'temporari':7,49 'temporary-t':6 'tom':21 'truli':35 'unprivileg':44 'use':48 'user':46 'valu':37 'within':10 'without':41
8	1	9	eaebb1c50531a784b5aa61ef1b4fd472	/contrib/tsearch2 crash fixes (Teodor)	'/contrib/tsearch2':1 'crash':2 'fix':3 'teodor':4
8	1	9	620351d0a1dad18a79ace141b6396a9c	Require COMMIT PREPARED to be executed in the same database as the transaction was prepared in (Heikki)	'commit':2 'databas':10 'execut':6 'heikki':17 'prepar':3,15 'requir':1 'transact':13
8	1	9	86da84097102640442e98e5383cd4628	Fix potential-data-corruption bug in how VACUUM FULL handles UPDATE chains (Tom, Pavan Deolasee)	'bug':6 'chain':13 'corrupt':5 'data':4 'deolase':16 'fix':1 'full':10 'handl':11 'pavan':15 'potenti':3 'potential-data-corrupt':2 'tom':14 'updat':12 'vacuum':9
8	1	9	23926ba6ecb0038f616f40e129d0a627	Planner fixes, including improving outer join and bitmap scan selection logic (Tom)	'bitmap':8 'fix':2 'improv':4 'includ':3 'join':6 'logic':11 'outer':5 'planner':1 'scan':9 'select':10 'tom':12
8	1	9	36f6f7a0f226a993e7029d131a602b8a	Fix PANIC during enlargement of a hash index (bug introduced in 8.1.6) (Tom)	'8.1.6':12 'bug':9 'enlarg':4 'fix':1 'hash':7 'index':8 'introduc':10 'panic':2 'tom':13
8	1	9	1cb39a0b4e6d434a4654f6f3eef90d72	Fix POSIX-style timezone specs to follow new USA DST rules (Tom)	'dst':11 'fix':1 'follow':8 'new':9 'posix':3 'posix-styl':2 'rule':12 'spec':6 'style':4 'timezon':5 'tom':13 'usa':10
8	1	8	9d79958150491cde6f81f11b5e6df120	Remove overly-restrictive check for type length in constraints and functional indexes(Tom)	'check':5 'constraint':10 'function':12 'index':13 'length':8 'over':3 'overly-restrict':2 'remov':1 'restrict':4 'tom':14 'type':7
8	1	7	6c4fa9afd3d73355d828556d01d88a9e	Remove security vulnerabilities that allowed connected users to read backend memory (Tom) The vulnerabilities involve suppressing the normal check that a SQL function returns the data type it's declared to, and changing the data type of a table column (CVE-2007-0555, CVE-2007-0556). These errors can easily be exploited to cause a backend crash, and in principle might be used to read database content that the user should not be able to access.	'-0555':43 '-0556':46 '-2007':42,45 'abl':74 'access':76 'allow':5 'backend':10,56 'caus':54 'chang':33 'check':19 'column':40 'connect':6 'content':67 'crash':57 'cve':41,44 'data':26,35 'databas':66 'declar':30 'easili':50 'error':48 'exploit':52 'function':23 'involv':15 'memori':11 'might':61 'normal':18 'principl':60 'read':9,65 'remov':1 'return':24 'secur':2 'sql':22 'suppress':16 'tabl':39 'tom':12 'type':27,36 'use':63 'user':7,70 'vulner':3,14
8	1	7	ef46235ef75d792dd844638c1b5ccfcc	Fix rare bug wherein btree index page splits could fail due to choosing an infeasible split point (Heikki Linnakangas)	'btree':5 'bug':3 'choos':13 'could':9 'due':11 'fail':10 'fix':1 'heikki':18 'index':6 'infeas':15 'linnakanga':19 'page':7 'point':17 'rare':2 'split':8,16 'wherein':4
8	1	7	1145f94b0f328f6b76ed35a0034395cc	Improve VACUUM performance for databases with many tables (Tom)	'databas':5 'improv':1 'mani':7 'perform':3 'tabl':8 'tom':9 'vacuum':2
8	1	7	8bc713cc01ca548de00d2cf061309462	Fix autovacuum to avoid leaving non-permanent transaction IDs in non-connectable databases (Alvaro) This bug affects the 8.1 branch only.	'8.1':21 'affect':19 'alvaro':16 'autovacuum':2 'avoid':4 'branch':22 'bug':18 'connect':14 'databas':15 'fix':1 'id':10 'leav':5 'non':7,13 'non-connect':12 'non-perman':6 'perman':8 'transact':9
8	1	7	3f2f2ffc26baad017a7a1c6e24a1e408	Fix for rare Assert() crash triggered by UNION (Tom)	'assert':4 'crash':5 'fix':1 'rare':3 'tom':9 'trigger':6 'union':8
8	1	7	d7306c5b8c93b070dab79d9ca8f92e8d	Tighten security of multi-byte character processing for UTF8 sequences over three bytes long (Tom)	'byte':6,14 'charact':7 'long':15 'multi':5 'multi-byt':4 'process':8 'secur':2 'sequenc':11 'three':13 'tighten':1 'tom':16 'utf8':10
8	1	7	3d5fea1fde5a408994790aaeff8d99b0	Fix bogus permission denied failures occurring on Windows due to attempts to fsync already-deleted files (Magnus, Tom)	'alreadi':15 'already-delet':14 'attempt':11 'bogus':2 'delet':16 'deni':4 'due':9 'failur':5 'file':17 'fix':1 'fsync':13 'magnus':18 'occur':6 'permiss':3 'tom':19 'window':8
8	1	7	9201922c2f55a8642827ff59751a37e8	Fix possible crashes when an already-in-use PL/pgSQL function is updated (Tom)	'alreadi':7 'already-in-us':6 'crash':3 'fix':1 'function':11 'pl/pgsql':10 'possibl':2 'tom':14 'updat':13 'use':9
8	1	6	e7f4c736ef76f23ff46c70e02d280d53	Improve handling of getaddrinfo() on AIX (Tom) This fixes a problem with starting the statistics collector, among other things.	'aix':6 'among':17 'collector':16 'fix':9 'getaddrinfo':4 'handl':2 'improv':1 'problem':11 'start':13 'statist':15 'thing':19 'tom':7
8	1	6	95a7a860c6984cc148c9fb36c8f2df35	Fix pg_restore to handle a tar-format backup that contains large objects (blobs) with comments (Tom)	'backup':10 'blob':15 'comment':17 'contain':12 'fix':1 'format':9 'handl':5 'larg':13 'object':14 'pg':2 'restor':3 'tar':8 'tar-format':7 'tom':18
8	1	6	a233229b8218a6880095ea7464f63ce8	Fix failed to re-find parent key errors in VACUUM (Tom)	'error':9 'fail':2 'find':6 'fix':1 'key':8 'parent':7 're':5 're-find':4 'tom':12 'vacuum':11
8	1	6	79e1b15d68e0b3c3e7d80e39fb17b313	Clean out pg_internal.init cache files during server restart (Simon) This avoids a hazard that the cache files might contain stale data after PITR recovery.	'avoid':12 'cach':5,17 'clean':1 'contain':20 'data':22 'file':6,18 'hazard':14 'internal.init':4 'might':19 'pg':3 'pitr':24 'recoveri':25 'restart':9 'server':8 'simon':10 'stale':21
8	1	6	46abfdf14af6c4643b8b11c43a19f758	Fix race condition for truncation of a large relation across a gigabyte boundary by VACUUM (Tom)	'across':10 'boundari':13 'condit':3 'fix':1 'gigabyt':12 'larg':8 'race':2 'relat':9 'tom':16 'truncat':5 'vacuum':15
8	1	6	ef5bbc565316a0bdd25ad0cbc7b7be90	Fix bug causing needless deadlock errors on row-level locks (Tom)	'bug':2 'caus':3 'deadlock':5 'error':6 'fix':1 'level':10 'lock':11 'needless':4 'row':9 'row-level':8 'tom':12
8	1	6	c76c6302502734c8d99a521820487ed6	Fix bugs affecting multi-gigabyte hash indexes (Tom)	'affect':3 'bug':2 'fix':1 'gigabyt':6 'hash':7 'index':8 'multi':5 'multi-gigabyt':4 'tom':9
8	1	6	51e383693096455a67bc8479033e398b	Fix possible deadlock in Windows signal handling (Teodor)	'deadlock':3 'fix':1 'handl':7 'possibl':2 'signal':6 'teodor':8 'window':5
8	1	6	d4e60cc7180cd2042ee1bc436b5fd9ee	Fix error when constructing an ARRAY[] made up of multiple empty elements (Tom)	'array':6 'construct':4 'element':12 'empti':11 'error':2 'fix':1 'made':7 'multipl':10 'tom':13
8	1	6	8875a44b7b54a40d41a29f4805f3f9ae	Fix ecpg memory leak during connection (Michael)	'connect':6 'ecpg':2 'fix':1 'leak':4 'memori':3 'michael':7
8	1	6	ecee88f6ba6a81bf138b7f92150b39c0	Fix for Darwin (OS X) compilation (Tom)	'compil':6 'darwin':3 'fix':1 'os':4 'tom':7 'x':5
8	1	6	1187e8adf7b316162db6093a3bc81d19	to_number() and to_char(numeric) are now STABLE , not IMMUTABLE , for new initdb installs (Tom) This is because lc_numeric can potentially change the output of these functions.	'chang':24 'char':5 'function':29 'immut':11 'initdb':14 'instal':15 'lc':20 'new':13 'number':2 'numer':6,21 'output':26 'potenti':23 'stabl':9 'tom':16
8	1	6	c76055f305260b9741ed995773faa1ab	Improve index usage of regular expressions that use parentheses (Tom) This improves psql \\d performance also.	'also':16 'd':14 'express':6 'improv':1,12 'index':2 'parenthes':9 'perform':15 'psql':13 'regular':5 'tom':10 'usag':3 'use':8
8	1	6	1d050dd53c5a09d252bdb8a1a83fa546	Update timezone database This affects Australian and Canadian daylight-savings rules in particular.	'affect':5 'australian':6 'canadian':8 'databas':3 'daylight':10 'daylight-sav':9 'particular':14 'rule':12 'save':11 'timezon':2 'updat':1
8	1	5	434e8c4ff648ebe85e7a482d757609e7	commands, except within sub-SELECTs (Tom) The behavior of such an aggregate was unpredictable, and in 8.1.X could cause a crash, so it has been disabled. The SQL standard does not allow	'8.1':18 'aggreg':13 'allow':34 'behavior':9 'caus':21 'command':1 'could':20 'crash':23 'disabl':28 'except':2 'select':6 'sql':30 'standard':31 'sub':5 'sub-select':4 'tom':7 'unpredict':15 'within':3 'x':19
8	1	5	dc96fef4bb6262e9be3ff50e6e33d4a3	Fix core dump when an untyped literal is taken as	'core':2 'dump':3 'fix':1 'liter':7 'taken':9 'untyp':6
8	1	5	3cfe135de622977b797c895d5c264823	Fix core dump in duration logging for extended query protocol when a COMMIT or ROLLBACK is	'commit':13 'core':2 'dump':3 'durat':5 'extend':8 'fix':1 'log':6 'protocol':10 'queri':9 'rollback':15
8	1	5	f3d0c28b0ff78d9e5d7bf20745ee00c5	Fix mishandling of AFTER triggers when query contains a SQL	'contain':8 'fix':1 'mishandl':2 'queri':7 'sql':10 'trigger':5
8	1	5	29c70880039b969c5a4c91fd4245ddd8	Fix ALTER TABLE ... TYPE to recheck	'alter':2 'fix':1 'recheck':6 'tabl':3 'type':4
8	1	5	2778b9070176e9098b51b075aa7cf939	Fix string_to_array() to handle overlapping matches for the separator string For example, string_to_array('123xx456xxx789', 'xx') .	'123xx456xxx789':18 'array':4,17 'exampl':14 'fix':1 'handl':6 'match':8 'overlap':7 'separ':11 'string':2,12,15 'xx':19
8	1	5	53eaeb3c5992ebf4320ce18a185bef69	Fix to_timestamp() for	'fix':1 'timestamp':3
8	1	5	c4cab79d6beb12407f9b7a334262c83f	Fix autovacuum's calculation that decides whether	'autovacuum':2 'calcul':4 'decid':6 'fix':1 'whether':7
8	1	5	9986820bb70a35581017578fa412c434	Fix corner cases in pattern matching for	'case':3 'corner':2 'fix':1 'match':6 'pattern':5
8	1	5	2c370bff6777df387ef83ba627811768	Fix index-corrupting bugs in /contrib/ltree	'/contrib/ltree':7 'bug':5 'corrupt':4 'fix':1 'index':3 'index-corrupt':2
8	1	5	559739a7694b5e3a2f5c3358d17ad13f	Numerous robustness fixes in ecpg (Joachim	'ecpg':5 'fix':3 'joachim':6 'numer':1 'robust':2
8	1	5	e79fd5c933483174283fc74774cd3785	Minor fixes in /contrib/dblink and /contrib/tsearch2	'/contrib/dblink':4 '/contrib/tsearch2':6 'fix':2 'minor':1
8	1	5	ad7e0ee2954cfebce2821be2d27af0df	Efficiency improvements in hash tables and bitmap index scans	'bitmap':7 'effici':1 'hash':4 'improv':2 'index':8 'scan':9 'tabl':5
8	1	5	af6a3e66aef6b9ef01aa04098776de86	Fix statement_timeout to use the proper units on Win32 (Bruce) In previous Win32 8.1.X versions, the delay was off by a factor of	'8.1':15 'bruce':11 'delay':19 'factor':24 'fix':1 'previous':13 'proper':7 'statement':2 'timeout':3 'unit':8 'use':5 'version':17 'win32':10,14 'x':16
8	1	5	a8ede174ba31223c7748f79cd84d6c6d	Fixes for MSVC and Borland C++	'borland':5 'c':6 'fix':1 'msvc':3
8	1	5	629062ca20f9dfc1f18631e78690d87c	Fixes for AIX and	'aix':3 'fix':1
8	1	4	167f3e08d4ba085cd4a34ff4b46eaa9e	characters in all cases (Tatsuo, Tom) While PostgreSQL has been moving in this direction for some time, the checks are now applied uniformly to all encodings and all textual input, and are now always errors not merely warnings. This change defends against SQL-injection attacks of the type described in CVE-2006-2313.	'-2006':53 '-2313':54 'alway':34 'appli':22 'attack':46 'case':4 'chang':40 'charact':1 'check':19 'cve':52 'defend':41 'describ':50 'direct':14 'encod':26 'error':35 'inject':45 'input':30 'mere':37 'move':11 'postgresql':8 'sql':44 'sql-inject':43 'tatsuo':5 'textual':29 'time':17 'tom':6 'type':49 'uniform':23 'warn':38
8	1	4	714d216b6f47689c553c29e1576f575f	Reject unsafe uses of \\' in string literals As a server-side defense against SQL-injection attacks of the type described in CVE-2006-2314, the server now only accepts '' and not \\' as a representation of ASCII single quote in SQL string literals. By default, \\' is rejected only when client_encoding is set to a client-only encoding (SJIS, BIG5, GBK, GB18030, or UHC), which is the scenario in which SQL injection is possible. A new configuration parameter backslash_quote is available to adjust this behavior when needed. Note that full security against CVE-2006-2314 might require client-side changes; the purpose of backslash_quote is in part to make it obvious that insecure clients are insecure.	'-2006':25,97 '-2314':26,98 'accept':31 'adjust':86 'ascii':38 'attack':18 'avail':84 'backslash':81,108 'behavior':88 'big5':62 'chang':104 'client':51,58,102,119 'client-on':57 'client-sid':101 'configur':79 'cve':24,96 'default':46 'defens':13 'describ':22 'encod':52,60 'full':93 'gb18030':64 'gbk':63 'inject':17,74 'insecur':118,121 'liter':7,44 'make':114 'might':99 'need':90 'new':78 'note':91 'obvious':116 'paramet':80 'part':112 'possibl':76 'purpos':106 'quot':40,82,109 'reject':1,48 'represent':36 'requir':100 'scenario':70 'secur':94 'server':11,28 'server-sid':10 'set':54 'side':12,103 'singl':39 'sjis':61 'sql':16,42,73 'sql-inject':15 'string':6,43 'type':21 'uhc':66 'unsaf':2 'use':3
8	1	2	bef7c10346f6b700f9e7468a2969550f	Fix character string comparison for locales that consider different character combinations as equal, such as Hungarian (Tom) This might require REINDEX to fix existing indexes on	'charact':2,10 'combin':11 'comparison':4 'consid':8 'differ':9 'equal':13 'exist':24 'fix':1,23 'hungarian':16 'index':25 'local':6 'might':19 'reindex':21 'requir':20 'string':3 'tom':17
8	1	0	2521f8031b29c484ff77ddfc89399d59	Add warning about the need to increase max_fsm_relations and max_fsm_pages during VACUUM (Ron Mayer)	'add':1 'fsm':9,13 'increas':7 'max':8,12 'mayer':18 'need':5 'page':14 'relat':10 'ron':17 'vacuum':16 'warn':2
8	1	4	def51c615f62f35fcc7acb5ca8aaaf60	Modify libpq 's string-escaping routines to be aware of encoding considerations and standard_conforming_strings This fixes libpq -using applications for the security issues described in CVE-2006-2313 and CVE-2006-2314, and also future-proofs them against the planned changeover to SQL-standard string literal syntax. Applications that use multiple PostgreSQL connections concurrently should migrate to PQescapeStringConn() and PQescapeByteaConn() to ensure that escaping is done correctly for the settings in use in each database connection. Applications that do string escaping by hand should be modified to rely on library routines instead.	'-2006':30,34 '-2313':31 '-2314':35 'also':37 'applic':22,53,82 'awar':10 'changeov':45 'concurr':59 'conform':16 'connect':58,81 'consider':13 'correct':72 'cve':29,33 'databas':80 'describ':27 'done':71 'encod':12 'ensur':67 'escap':6,69,86 'fix':19 'futur':39 'future-proof':38 'hand':88 'instead':97 'issu':26 'libpq':2,20 'librari':95 'liter':51 'migrat':61 'modifi':1,91 'multipl':56 'plan':44 'postgresql':57 'pqescapebyteaconn':65 'pqescapestringconn':63 'proof':40 'reli':93 'routin':7,96 'secur':25 'set':75 'sql':48 'sql-standard':47 'standard':15,49 'string':5,17,50,85 'string-escap':4 'syntax':52 'use':21,55,77
8	1	4	439b060e8594d9deb02cbab4e6cfe227	Fix weak key selection in pgcrypto (Marko Kreen) Errors in fortuna PRNG reseeding logic could cause a predictable session key to be selected by pgp_sym_encrypt() in some cases. This only affects non-OpenSSL-using builds.	'affect':33 'build':38 'case':30 'caus':16 'could':15 'encrypt':27 'error':9 'fix':1 'fortuna':11 'key':3,20 'kreen':8 'logic':14 'marko':7 'non':35 'non-openssl-us':34 'openssl':36 'pgcrypto':6 'pgp':25 'predict':18 'prng':12 'reseed':13 'select':4,23 'session':19 'sym':26 'use':37 'weak':2
8	1	4	9e8a71c7c050ba695e5c1cb805e0904e	Fix some incorrect encoding conversion functions win1251_to_iso , win866_to_iso , euc_tw_to_big5 , euc_tw_to_mic , mic_to_euc_tw were all broken to varying extents.	'big5':16 'broken':27 'convers':5 'encod':4 'euc':13,17,23 'extent':30 'fix':1 'function':6 'incorrect':3 'iso':9,12 'mic':20,21 'tw':14,18,24 'vari':29 'win1251':7 'win866':10
8	1	4	89ca6c4a293e020e7225c8940c2c9189	Clean up stray remaining uses of \\' in strings	'clean':1 'remain':4 'stray':3 'string':8 'use':5
8	1	4	f5693307631c08dafb7f19f8a76ac8ea	Make autovacuum visible in pg_stat_activity	'activ':7 'autovacuum':2 'make':1 'pg':5 'stat':6 'visibl':3
8	1	3	42d1b087e592bf77d3cc78c9d7d281d4	Properly check DOMAIN constraints for UNKNOWN parameters in prepared statements	'check':2 'constraint':4 'domain':3 'paramet':7 'prepar':9 'proper':1 'statement':10 'unknown':6
8	1	4	a105513d491004f072d7630e80f15d57	Disable full_page_writes (Tom) In certain cases, having full_page_writes off would cause crash recovery to fail. A proper fix will appear in 8.2; for now it's just disabled.	'8.2':26 'appear':24 'case':8 'caus':15 'certain':7 'crash':16 'disabl':1,32 'fail':19 'fix':22 'full':2,10 'page':3,11 'proper':21 'recoveri':17 'tom':5 'would':14 'write':4,12
8	1	4	2917e41ffb4fc3f02e4827336fa44a24	Various planner fixes, particularly for bitmap index scans and	'bitmap':6 'fix':3 'index':7 'particular':4 'planner':2 'scan':8 'various':1
8	1	4	9315cae45e221d68e32e59e0f27a9fb4	Fix incorrect optimization in merge join (Tom) Outer joins could sometimes emit multiple copies of unmatched rows.	'copi':14 'could':10 'emit':12 'fix':1 'incorrect':2 'join':6,9 'merg':5 'multipl':13 'optim':3 'outer':8 'row':17 'sometim':11 'tom':7 'unmatch':16
8	1	4	06463be7d477b868805f4e84da8b1a27	Fix crash from using and modifying a plpgsql function in the	'crash':2 'fix':1 'function':9 'modifi':6 'plpgsql':8 'use':4
8	1	4	eeefdc773b735471cc232d77f934692a	Fix WAL replay for case where a B-Tree index has been	'b':9 'b-tree':8 'case':5 'fix':1 'index':11 'replay':3 'tree':10 'wal':2
8	1	4	ab7009da4b421f69d1db6c73392ad3ef	Fix SIMILAR TO for patterns involving	'fix':1 'involv':6 'pattern':5 'similar':2
8	1	4	815cb2f9102bbab67f01846895814813	Fix SELECT INTO and CREATE TABLE AS to create tables in the default tablespace, not the base directory (Kris	'base':17 'creat':5,9 'default':13 'directori':18 'fix':1 'kris':19 'select':2 'tabl':6,10 'tablespac':14
8	1	4	b0a19cff44e8d07e1014c6dcd94c3d7a	Fix server to use custom DH SSL parameters correctly (Michael	'correct':9 'custom':5 'dh':6 'fix':1 'michael':10 'paramet':8 'server':2 'ssl':7 'use':4
8	1	4	be508a661115027899122af29b7e4ae7	Improve qsort performance (Dann Corbit) Currently this code is only used on Solaris.	'code':8 'corbit':5 'current':6 'dann':4 'improv':1 'perform':3 'qsort':2 'solari':13 'use':11
8	1	4	10b2f59ef1ca5f59e3b32034958a9cd8	Fix problem with password prompting on some Win32 systems	'fix':1 'password':4 'problem':2 'prompt':5 'system':9 'win32':8
8	1	4	9ad9824317618e1bafa1e24694b9b898	Improve pg_dump 's handling of default values	'default':7 'dump':3 'handl':5 'improv':1 'pg':2 'valu':8
8	1	4	4171a2b2e7c893bf14f7b215528bf477	Fix pg_dumpall to handle identically-named users and groups reasonably (only possible when dumping from a pre-8.1 server) (Tom) The user and group will be merged into a single role with LOGIN permission. Formerly the merged role wouldn't have LOGIN permission, making it unusable as a user.	'-8.1':20 'dump':16 'dumpal':3 'fix':1 'former':37 'group':11,26 'handl':5 'ident':7 'identically-nam':6 'login':35,44 'make':46 'merg':29,39 'name':8 'permiss':36,45 'pg':2 'possibl':14 'pre':19 'reason':12 'role':33,40 'server':21 'singl':32 'tom':22 'unus':48 'user':9,24,51 'wouldn':41
8	1	4	2cdaac5ba83a1204569e396d1d7b7567	Fix pg_restore -n to work as	'fix':1 'n':4 'pg':2 'restor':3 'work':6
8	1	2	b8de883356a0aede5e07aba2a6d19e30	Set locale environment variables during postmaster startup to ensure that plperl won't change the locale later This fixes a problem that occurred if the postmaster was started with environment variables specifying a different locale than what initdb had been told. Under these conditions, any use of plperl was likely to lead to corrupt indexes. You might need REINDEX to fix existing indexes on	'chang':14 'condit':44 'corrupt':54 'differ':34 'ensur':9 'environ':3,30 'exist':62 'fix':19,61 'index':55,63 'initdb':38 'later':17 'lead':52 'like':50 'local':2,16,35 'might':57 'need':58 'occur':23 'plperl':11,48 'postmast':6,26 'problem':21 'reindex':59 'set':1 'specifi':32 'start':28 'startup':7 'told':41 'use':46 'variabl':4,31 'won':12
8	1	2	ad2f342c92874a453fefbb2964391442	Allow more flexible relocation of installation directories (Tom) Previous releases supported relocation only if all installation	'allow':1 'directori':7 'flexibl':3 'instal':6,16 'previous':9 'releas':10 'reloc':4,12 'support':11 'tom':8
8	1	3	e5a437fa4843be6bc386f8a6cac45682	ROLE to any other database user id (CVE-2006-0553) Due to inadequate validity checking, a user could exploit the special case that SET ROLE normally uses to restore the previous role setting after an error. This allowed ordinary users to acquire superuser status, for example. The escalation-of-privilege risk exists only in 8.1.0-8.1.2. However, in all releases back to 7.3 there is a related bug in SET SESSION AUTHORIZATION that allows unprivileged users to crash the server, if it has been compiled with Asserts enabled (which is not the default). Thanks to Akio Ishida for reporting this problem.	'-0553':10 '-2006':9 '7.3':64 '8.1.0':56 '8.1.2':57 'acquir':42 'akio':97 'allow':38,75 'assert':88 'author':73 'back':62 'bug':69 'case':22 'check':15 'compil':86 'could':18 'crash':79 'cve':8 'databas':5 'default':94 'due':11 'enabl':89 'error':36 'escal':49 'escalation-of-privileg':48 'exampl':46 'exist':53 'exploit':19 'howev':58 'id':7 'inadequ':13 'ishida':98 'normal':26 'ordinari':39 'previous':31 'privileg':51 'problem':102 'relat':68 'releas':61 'report':100 'restor':29 'risk':52 'role':1,25,32 'server':81 'session':72 'set':24,33,71 'special':21 'status':44 'superus':43 'thank':95 'unprivileg':76 'use':27 'user':6,17,40,77 'valid':14
8	1	3	b4737a0065953460d1f5637fc83b18a3	Fix bug with row visibility logic in self-inserted rows (Tom) Under rare circumstances a row inserted by the current command could be seen as already valid, when it should not be. Repairs bug created in 8.0.4, 7.4.9, and 7.3.11 releases.	'7.3.11':41 '7.4.9':39 '8.0.4':38 'alreadi':27 'bug':2,35 'circumst':15 'command':22 'could':23 'creat':36 'current':21 'fix':1 'insert':10,18 'logic':6 'rare':14 'releas':42 'repair':34 'row':4,11,17 'seen':25 'self':9 'self-insert':8 'tom':12 'valid':28 'visibl':5
8	1	3	d17e6caed2c82627dfbb0a532c69ceeb	Fix race condition that could lead to file already exists errors during pg_clog and pg_subtrans file creation	'alreadi':9 'clog':14 'condit':3 'could':5 'creation':19 'error':11 'exist':10 'file':8,18 'fix':1 'lead':6 'pg':13,16 'race':2 'subtran':17
8	1	3	981a6de372a706cecf0458aa772362da	Fix cases that could lead to crashes if a cache-invalidation	'cach':11 'cache-invalid':10 'case':2 'could':4 'crash':7 'fix':1 'invalid':12 'lead':5
8	1	3	8c149802b2375396f32b72d0a1678a0b	Ensure ALTER COLUMN TYPE will process FOREIGN KEY , UNIQUE , and PRIMARY KEY	'alter':2 'column':3 'ensur':1 'foreign':7 'key':8,12 'primari':11 'process':6 'type':4 'uniqu':9
8	1	3	ea830a9236db1e4791b436f535e428c7	Fixes to allow restoring dumps that have cross-schema	'allow':3 'cross':9 'cross-schema':8 'dump':5 'fix':1 'restor':4 'schema':10
8	1	3	ef66de66eb8b35d84cacd2e35f66c0ce	Allow pg_restore to continue properly after a COPY failure; formerly it tried to treat the remaining	'allow':1 'continu':5 'copi':9 'failur':10 'former':11 'pg':2 'proper':6 'remain':17 'restor':3 'treat':15 'tri':13
8	1	3	f70e81a108893153336f56e65603aaa8	Fix pg_ctl unregister crash	'crash':5 'ctl':3 'fix':1 'pg':2 'unregist':4
8	1	3	39fce6e08b503a8a31a52afe3098a50d	Fix libpq PQprint HTML tags	'fix':1 'html':4 'libpq':2 'pqprint':3 'tag':5
8	1	3	025c8fe569b29279278436001c17bab5	Fix ecpg crash on AMD64 and PPC	'amd64':5 'crash':3 'ecpg':2 'fix':1 'ppc':7
8	1	3	d610c47f9f2c1d95152c32c2d5e310d9	Allow SETOF and %TYPE to be used	'allow':1 'setof':2 'type':4 'use':7
8	1	3	b058a259f70629717aa6d04328610df4	Recover properly if error occurs during argument passing	'argument':7 'error':4 'occur':5 'pass':8 'proper':2 'recov':1
8	1	3	f7cc11b469fe29579255693c728ddcd8	Fix memory leak in plperl_return_next	'fix':1 'leak':3 'memori':2 'next':7 'plperl':5 'return':6
8	1	3	c5bde32a74fcad36aac7f37be1d99907	Fix PL/perl 's handling of locales on	'fix':1 'handl':4 'local':6 'pl/perl':2
8	1	3	63640753cbb1a3600f902ae97884ba97	Fix crash when log_min_messages is set to DEBUG3 or above in postgresql.conf on Win32	'crash':2 'debug3':10 'fix':1 'log':4 'messag':6 'min':5 'postgresql.conf':14 'set':8 'win32':16
8	1	3	a83fb3514a7a910580318dda0b87d68f	Fix pgxs -L library path	'fix':1 'l':3 'librari':4 'path':5 'pgxs':2
8	1	3	8aead97e0db9fa14f3707435bfc43785	Check that SID is enabled while checking for Win32 admin	'admin':10 'check':1,7 'enabl':5 'sid':3 'win32':9
8	1	3	82966114ae9965dc0df48c6faf4fa9cd	Properly reject out-of-range date inputs (Kris	'date':7 'input':8 'kris':9 'out-of-rang':3 'proper':1 'rang':6 'reject':2
8	1	3	c5e8fa273e28cef0a637300ef776650b	Portability fix for testing presence of finite	'finit':7 'fix':2 'portabl':1 'presenc':5 'test':4
8	1	3	dbca9a4f98db937a786f1e956ffac290	Improve speed of COPY IN via libpq, by	'copi':4 'improv':1 'libpq':7 'speed':2 'via':6
8	1	3	96b889c7cb0c656c4ee7e60dcd68d9fc	Improve speed of /contrib/tsearch2 index	'/contrib/tsearch2':4 'improv':1 'index':5 'speed':2
8	1	2	113e77821734d668715fa994b063d674	than exit if there is no more room in ShmemBackendArray (Magnus) The previous behavior could lead to a denial-of-service situation if too many connection requests arrive close together. This applies	'appli':33 'arriv':29 'behavior':14 'close':30 'connect':27 'could':15 'denial':20 'denial-of-servic':19 'exit':2 'lead':16 'magnus':11 'mani':26 'previous':13 'request':28 'room':8 'servic':22 'shmembackendarray':10 'situat':23 'togeth':31
8	1	2	db1d85268b872b3d4c854eb3c2028dc3	Fix bug introduced in 8.0 that could allow ReadBuffer to return an already-used page as new, potentially causing loss of	'8.0':5 'allow':8 'alreadi':14 'already-us':13 'bug':2 'caus':20 'could':7 'fix':1 'introduc':3 'loss':21 'new':18 'page':16 'potenti':19 'readbuff':9 'return':11 'use':15
8	1	2	c248bd648abed0d93e01380ebf58d88f	Fix for protocol-level Describe messages issued	'describ':6 'fix':1 'issu':8 'level':5 'messag':7 'protocol':4 'protocol-level':3
8	1	2	571e23b6708988c4094ee55283bc9ad3	Prevent crashes caused by the use of ISO-8859-5 and ISO-8859-9 encodings	'-5':10 '-8859':9,13 '-9':14 'caus':3 'crash':2 'encod':15 'iso':8,12 'prevent':1 'use':6
8	1	2	c1e6b4e5b768525545cfb4295b8b9e69	Fix longstanding bug in strpos() and regular expression handling in certain rarely used Asian multi-byte character sets (Tatsuo)	'asian':14 'bug':3 'byte':17 'certain':11 'charact':18 'express':8 'fix':1 'handl':9 'longstand':2 'multi':16 'multi-byt':15 'rare':12 'regular':7 'set':19 'strpos':5 'tatsuo':20 'use':13
8	1	2	98668bcbed9a6e2b4238736fd2eec67f	Fix bug where COPY CSV mode considered any \\. to terminate the copy data The new code requires \\. to appear alone on a line, as per	'alon':20 'appear':19 'bug':2 'code':16 'consid':7 'copi':4,12 'csv':5 'data':13 'fix':1 'line':23 'mode':6 'new':15 'per':25 'requir':17 'termin':10
8	1	2	e2a1d71733ddd9dcf2e4926207face46	Make COPY CSV mode quote a literal data value of \\. to ensure it cannot be interpreted as the	'cannot':14 'copi':2 'csv':3 'data':8 'ensur':12 'interpret':16 'liter':7 'make':1 'mode':4 'quot':5 'valu':9
8	1	2	ea1a34befa2083c366483c6ca1e76438	Various fixes for functions returning RECORD s	'fix':2 'function':4 'record':6 'return':5 'various':1
8	1	2	d68ea7ce56f9198bcb4e6974ba46cdda	Fix processing of postgresql.conf so a final line with no newline is processed properly (Tom)	'final':7 'fix':1 'line':8 'newlin':11 'postgresql.conf':4 'process':2,13 'proper':14 'tom':15
8	1	2	6e5cbb3481b20a722e3282ac46ad7932	Fix bug in /contrib/pgcrypto gen_salt, which caused it not to use all available salt space for MD5 and XDES algorithms (Marko Kreen, Solar Designer)	'/contrib/pgcrypto':4 'algorithm':21 'avail':14 'bug':2 'caus':8 'design':25 'fix':1 'gen':5 'kreen':23 'marko':22 'md5':18 'salt':6,15 'solar':24 'space':16 'use':12 'xdes':20
8	1	2	e91a0113a20d273ec94743884d6d3090	Fix autovacuum crash when processing expression indexes	'autovacuum':2 'crash':3 'express':6 'fix':1 'index':7 'process':5
8	1	2	d355223c2b115a807307f0a6929c6aa7	Fix /contrib/dblink to throw an error, rather than crashing, when the number of columns specified is different from	'/contrib/dblink':2 'column':14 'crash':9 'differ':17 'error':6 'fix':1 'number':12 'rather':7 'specifi':15 'throw':4
8	1	1	7db33f4e39eb8531ed5a05cb18704c84	Fix problems with wrong reported column names in cases	'case':9 'column':6 'fix':1 'name':7 'problem':2 'report':5 'wrong':4
8	1	1	f1efbbea7bb392592e753eac69839217	Fix update failures in scenarios involving CHECK constraints,	'check':7 'constraint':8 'failur':3 'fix':1 'involv':6 'scenario':5 'updat':2
8	1	1	b7ef7d2131a381fb9df1748b3e3ca71c	Fix bgwriter problems after recovering from errors (Tom) The background writer was found to leak buffer pins after write errors. While not fatal in itself, this might lead to mysterious blockages of later VACUUM commands.	'background':10 'bgwriter':2 'blockag':31 'buffer':16 'command':35 'error':7,20 'fatal':23 'fix':1 'found':13 'later':33 'lead':28 'leak':15 'might':27 'mysteri':30 'pin':17 'problem':3 'recov':5 'tom':8 'vacuum':34 'write':19 'writer':11
8	1	1	a088db9f099655a016ed60bd972c7e41	Prevent failure if client sends Bind protocol message	'bind':6 'client':4 'failur':2 'messag':8 'prevent':1 'protocol':7 'send':5
8	1	1	dcd008304b6520d70282b834a21a3b32	/contrib/tsearch2 and /contrib/ltree	'/contrib/ltree':3 '/contrib/tsearch2':1
8	1	1	b0e5bdee88bac9ae4c618334370b2fc5	Fix problems with translated error messages in languages that require word reordering, such as Turkish; also problems with unexpected truncation of output strings and wrong display of the smallest possible bigint value (Andrew, Tom) These problems only appeared on platforms that were using our port/snprintf.c code, which includes BSD variants if --enable-nls was given, and perhaps others. In addition, a different form of the translated-error-message problem could appear on Windows depending on which version of libintl was used.	'addit':61 'also':16 'andrew':33 'appear':38,73 'bigint':31 'bsd':49 'code':46 'could':72 'depend':76 'differ':63 'display':26 'enabl':53 'enable-nl':52 'error':5,69 'fix':1 'form':64 'given':56 'includ':48 'languag':8 'libintl':81 'messag':6,70 'nls':54 'other':59 'output':22 'perhap':58 'platform':40 'port/snprintf.c':45 'possibl':30 'problem':2,17,36,71 'reorder':12 'requir':10 'smallest':29 'string':23 'tom':34 'translat':4,68 'translated-error-messag':67 'truncat':20 'turkish':15 'unexpect':19 'use':43,83 'valu':32 'variant':50 'version':79 'window':75 'word':11 'wrong':25
8	1	1	e700f72206837ab2b2c8acc13450d229	Re-allow AM / PM , HH , HH12 , and D format specifiers for to_char(time) and to_char(interval) . ( to_char(interval) should probably use	'allow':3 'char':14,18,21 'd':9 'format':10 'hh':6 'hh12':7 'interv':19,22 'pm':5 'probabl':24 're':2 're-allow':1 'specifi':11 'time':15 'use':25
8	1	1	f4b4345285737d70040c965d30dede20	AIX, HPUX, and MSVC compile fixes (Tom, Hiroshi	'aix':1 'compil':5 'fix':6 'hiroshi':8 'hpux':2 'msvc':4 'tom':7
8	1	1	334afd77d8e93fa98fd6cf493f358cca	Retry file reads and writes after Windows	'file':2 'read':3 'retri':1 'window':7 'write':5
8	1	1	0584f862c94da760ef86141a9e7eda9a	Prevent autovacuum from crashing during	'autovacuum':2 'crash':4 'prevent':1
8	1	1	e0ebf53e5bb34716d9129a3e6d30e20f	Fix problems with ON COMMIT DELETE ROWS temp	'commit':5 'delet':6 'fix':1 'problem':2 'row':7 'temp':8
8	1	1	ab4c618cb2f08f03e22cecac18f4a5a2	Fix problems when a trigger alters the output of a SELECT	'alter':6 'fix':1 'output':8 'problem':2 'select':11 'trigger':5
8	1	1	f0574a625fe1b75753b2602a464180ea	Add 8.1.0 release note item on how to migrate invalid	'8.1.0':2 'add':1 'invalid':10 'item':5 'migrat':9 'note':4 'releas':3
8	1	0	e5cc4e49ce7f4da1c8269b4af66d542c	Prevent problems due to transaction ID (XID) wraparound (Tom) The server will now warn when the transaction counter approaches the wraparound point. If the counter becomes too close to wraparound, the server will stop accepting queries. This ensures that data is not lost before needed vacuuming is performed.	'accept':35 'approach':19 'becom':26 'close':28 'counter':18,25 'data':40 'due':3 'ensur':38 'id':6 'lost':43 'need':45 'perform':48 'point':22 'prevent':1 'problem':2 'queri':36 'server':11,32 'stop':34 'tom':9 'transact':5,17 'vacuum':46 'warn':14 'wraparound':8,21,30 'xid':7
8	1	0	eee2092e00af02935c8cc9c5d6a52ff6	Fix problems with object IDs (OIDs) conflicting with existing system objects after the OID counter has wrapped around (Tom)	'around':18 'conflict':7 'counter':15 'exist':9 'fix':1 'id':5 'object':4,11 'oid':6,14 'problem':2 'system':10 'tom':19 'wrap':17
8	1	0	3cb38bee1d8dec9179835ab84848c82e	Add temp_buffers configuration parameter to allow users to determine the size of the local buffer area for temporary table access (Tom)	'access':21 'add':1 'allow':7 'area':17 'buffer':3,16 'configur':4 'determin':10 'local':15 'paramet':5 'size':12 'tabl':20 'temp':2 'temporari':19 'tom':22 'user':8
8	1	0	759d25356dc79dbd10c5af7aab5e4236	Add session start time and client IP address to pg_stat_activity (Magnus)	'activ':12 'add':1 'address':8 'client':6 'ip':7 'magnus':13 'pg':10 'session':2 'start':3 'stat':11 'time':4
8	1	0	151abbad2f11d08c7e2d9c012a725050	Adjust pg_stat views for bitmap scans (Tom) The meanings of some of the fields have changed slightly.	'adjust':1 'bitmap':6 'chang':17 'field':15 'mean':10 'pg':2 'scan':7 'slight':18 'stat':3 'tom':8 'view':4
8	1	0	0e341a10f82d9a9de021be95a96aca5f	Enhance pg_locks view (Tom)	'enhanc':1 'lock':3 'pg':2 'tom':5 'view':4
8	1	0	547f3d32191efa69b5e751da3efac4f9	Log queries for client-side PREPARE and EXECUTE (Simon)	'client':5 'client-sid':4 'execut':9 'log':1 'prepar':7 'queri':2 'side':6 'simon':10
8	1	0	7103931039729043beb3e99077c17d91	Allow Kerberos name and user name case sensitivity to be specified in postgresql.conf (Magnus)	'allow':1 'case':7 'kerbero':2 'magnus':14 'name':3,6 'postgresql.conf':13 'sensit':8 'specifi':11 'user':5
8	1	0	efabfea474e8d859cc1be26185d58ea2	Add configuration parameter krb_server_hostname so that the server host name can be specified as part of service principal (Todd Kover) If not set, any service principal matching an entry in the keytab can be used. This is new Kerberos matching behavior in this release.	'add':1 'behavior':43 'configur':2 'entri':31 'host':11 'hostnam':6 'kerbero':41 'keytab':34 'kover':22 'krb':4 'match':29,42 'name':12 'new':40 'paramet':3 'part':17 'princip':20,28 'releas':46 'server':5,10 'servic':19,27 'set':25 'specifi':15 'todd':21 'use':37
8	1	0	a266d559dcca9a183d6b16fe1d24eb08	Add log_line_prefix options for millisecond timestamps ( %m ) and remote host ( %h ) (Ed L.)	'add':1 'ed':14 'h':13 'host':12 'l':15 'line':3 'log':2 'm':9 'millisecond':7 'option':5 'prefix':4 'remot':11 'timestamp':8
8	1	0	a994fdf38618bb605e0e46f96dd953df	Add WAL logging for GiST indexes (Teodor, Oleg) GiST indexes are now safe for crash and point-in-time recovery.	'add':1 'crash':15 'gist':5,9 'index':6,10 'log':3 'oleg':8 'point':18 'point-in-tim':17 'recoveri':21 'safe':13 'teodor':7 'time':20 'wal':2
8	1	0	af84c540efcf852d9bfc662c121b4971	Remove old *.backup files when we do pg_stop_backup() (Bruce) This prevents a large number of *.backup files from existing in pg_xlog/ .	'backup':3,10,18 'bruce':11 'exist':21 'file':4,19 'larg':15 'number':16 'old':2 'pg':8,23 'prevent':13 'remov':1 'stop':9 'xlog':24
8	1	0	0304eb9742aab46ee267ded153ccb606	Add configuration parameters to control TCP/IP keep-alive times for idle, interval, and count (Oliver Jowett) These values can be changed to allow more rapid detection of lost client connections.	'add':1 'aliv':9 'allow':24 'chang':22 'client':30 'configur':2 'connect':31 'control':5 'count':15 'detect':27 'idl':12 'interv':13 'jowett':17 'keep':8 'keep-al':7 'lost':29 'oliv':16 'paramet':3 'rapid':26 'tcp/ip':6 'time':10 'valu':19
8	1	0	7c0c95f3960f143db624526a36a27140	Add per-user and per-database connection limits (Petr Jelinek) Using ALTER USER and ALTER DATABASE , limits can now be enforced on the maximum number of sessions that can concurrently connect as a specific user or to a specific database. Setting the limit to zero disables user or database connections.	'add':1 'alter':14,17 'concurr':32 'connect':9,33,52 'databas':8,18,42,51 'disabl':48 'enforc':23 'jelinek':12 'limit':10,19,45 'maximum':26 'number':27 'per':3,7 'per-databas':6 'per-us':2 'petr':11 'session':29 'set':43 'specif':36,41 'use':13 'user':4,15,37,49 'zero':47
8	1	0	192ba74be76bdce48dfc9e694cbd202c	Allow more than two gigabytes of shared memory and per-backend work memory on 64-bit machines (Koichi Suzuki)	'64':16 'allow':1 'backend':12 'bit':17 'gigabyt':5 'koichi':19 'machin':18 'memori':8,14 'per':11 'per-backend':10 'share':7 'suzuki':20 'two':4 'work':13
8	1	0	a11fe1183b44f4394481029af8d2954c	New system catalog pg_pltemplate allows overriding obsolete procedural-language definitions in dump files (Tom)	'allow':6 'catalog':3 'definit':12 'dump':14 'file':15 'languag':11 'new':1 'obsolet':8 'overrid':7 'pg':4 'pltemplat':5 'procedur':10 'procedural-languag':9 'system':2 'tom':16
8	1	0	d4b7a074d7a1a25ee22896696a5d389a	Add temporary views (Koju Iijima, Neil)	'add':1 'iijima':5 'koju':4 'neil':6 'temporari':2 'view':3
8	1	0	c65525726a3894e51c6c3d4856510c69	Fix HAVING without any aggregate functions or GROUP BY so that the query returns a single group (Tom) Previously, such a case would treat the HAVING clause the same as a WHERE clause. This was not per spec.	'aggreg':5 'case':22 'claus':27,33 'fix':1 'function':6 'group':8,17 'per':37 'previous':19 'queri':13 'return':14 'singl':16 'spec':38 'tom':18 'treat':24 'without':3 'would':23
8	1	0	2af02b785d6b3ffda30f11d4053e7f42	Add USING clause to allow additional tables to be specified to DELETE (Euler Taveira de Oliveira, Neil) In prior releases, there was no clear method for specifying additional tables to be used for joins in a DELETE statement. UPDATE already has a FROM clause for this purpose.	'add':1 'addit':6,28 'allow':5 'alreadi':40 'claus':3,44 'clear':24 'de':15 'delet':12,37 'euler':13 'join':34 'method':25 'neil':17 'oliveira':16 'prior':19 'purpos':47 'releas':20 'specifi':10,27 'statement':38 'tabl':7,29 'taveira':14 'updat':39 'use':2,32
8	1	0	8b973d7e21fec209db2319a094e16ae8	Add support for \\x hex escapes in backend and ecpg strings (Bruce) This is just like the standard C \\x escape syntax. Octal escapes were already supported.	'add':1 'alreadi':26 'backend':8 'bruce':12 'c':19 'ecpg':10 'escap':6,21,24 'hex':5 'like':16 'octal':23 'standard':18 'string':11 'support':2,27 'syntax':22 'x':4,20
8	1	0	d28988a2ec37929483dd86ef5d23e9e2	Add BETWEEN SYMMETRIC query syntax (Pavel Stehule) This feature allows BETWEEN comparisons without requiring the first value to be less than the second. For example, 2 BETWEEN [ASYMMETRIC] 3 AND 1 returns false, while 2 BETWEEN SYMMETRIC 3 AND 1 returns true. BETWEEN ASYMMETRIC was already supported.	'1':31,40 '2':26,35 '3':29,38 'add':1 'allow':10 'alreadi':46 'asymmetr':28,44 'comparison':12 'exampl':25 'fals':33 'featur':9 'first':16 'less':20 'pavel':6 'queri':4 'requir':14 'return':32,41 'second':23 'stehul':7 'support':47 'symmetr':3,37 'syntax':5 'true':42 'valu':17 'without':13
8	1	0	79d14b106ebee48aa742647ec5dd3555	Add NOWAIT option to SELECT ... FOR UPDATE/SHARE (Hans-Juergen Schoenig) While the statement_timeout configuration parameter allows a query taking more than a certain amount of time to be cancelled, the NOWAIT option allows a query to be canceled as soon as a SELECT ... FOR UPDATE/SHARE command cannot immediately acquire a row lock.	'acquir':51 'add':1 'allow':18,35 'amount':26 'cancel':31,40 'cannot':49 'certain':25 'command':48 'configur':16 'han':9 'hans-juergen':8 'immedi':50 'juergen':10 'lock':54 'nowait':2,33 'option':3,34 'paramet':17 'queri':20,37 'row':53 'schoenig':11 'select':5,45 'soon':42 'statement':14 'take':21 'time':28 'timeout':15 'update/share':7,47
8	1	0	a2f531b4efde95d5a5ee3b3542744bc9	Track dependencies of shared objects (Alvaro) PostgreSQL allows global tables (users, databases, tablespaces) to reference information in multiple databases. This addition adds dependency information for global tables, so, for example, user ownership can be tracked across databases, so a user who owns something in any database can no longer be removed. Dependency tracking already existed for database-local objects.	'across':36 'add':22 'addit':21 'allow':8 'alreadi':54 'alvaro':6 'databas':12,19,37,46,58 'database-loc':57 'depend':2,23,52 'exampl':30 'exist':55 'global':9,26 'inform':16,24 'local':59 'longer':49 'multipl':18 'object':5,60 'own':42 'ownership':32 'postgresql':7 'refer':15 'remov':51 'share':4 'someth':43 'tabl':10,27 'tablespac':13 'track':1,35,53 'user':11,31,40
8	1	0	7fe6c77eab93afd48920374b51120f71	Add support for numeric ^ numeric based on power(numeric, numeric) The function already existed, but there was no operator assigned to it.	'add':1 'alreadi':13 'assign':20 'base':6 'exist':14 'function':12 'numer':4,5,9,10 'oper':19 'power':8 'support':2
8	1	0	456bec5e065733335055245e381758da	Add justify_days() and justify_hours() (Michael Glaesemann) These functions, respectively, adjust days to an appropriate number of full months and days, and adjust hours to an appropriate number of full days and hours.	'add':1 'adjust':12,24 'appropri':16,28 'day':3,13,22,32 'full':19,31 'function':10 'glaesemann':8 'hour':6,25,34 'justifi':2,5 'michael':7 'month':20 'number':17,29 'respect':11
8	1	0	63c4c1c613bd14056f8e601c663c61b2	Allow limited ALTER OWNER commands to be performed by the object owner (Stephen Frost) Prior releases allowed only superusers to change object owners. Now, ownership can be transferred if the user executing the command owns the object and would be able to create it as the new owner (that is, the user is a member of the new owning role and that role has the CREATE permission that would be needed to create the object afresh).	'abl':41 'afresh':76 'allow':1,17 'alter':3 'chang':21 'command':5,34 'creat':43,66,73 'execut':32 'frost':14 'limit':2 'member':55 'need':71 'new':47,58 'object':11,22,37,75 'own':35,59 'owner':4,12,23,48 'ownership':25 'perform':8 'permiss':67 'prior':15 'releas':16 'role':60,63 'stephen':13 'superus':19 'transfer':28 'user':31,52 'would':39,69
8	1	0	66a252c8057bb6e26c7bdd4a12035db8	Add ALTER object SET SCHEMA capability for some object types (tables, functions, types) (Bernd Helmle) This allows objects to be moved to different schemas.	'add':1 'allow':17 'alter':2 'bernd':14 'capabl':6 'differ':23 'function':12 'helml':15 'move':21 'object':3,9,18 'schema':5,24 'set':4 'tabl':11 'type':10,13
8	1	0	89dab68e4317137515537e33edb6c25a	Add ALTER TABLE ENABLE/DISABLE TRIGGER to disable triggers (Satoshi Nagayasu)	'add':1 'alter':2 'disabl':7 'enable/disable':4 'nagayasu':10 'satoshi':9 'tabl':3 'trigger':5,8
8	1	0	3af001d8be535aae8535cba21d094baf	Allow TRUNCATE to truncate multiple tables in a single command (Alvaro) Because of referential integrity checks, it is not allowed to truncate a table that is part of a referential integrity constraint. Using this new functionality, TRUNCATE can be used to truncate such tables, if both tables involved in a referential integrity constraint are truncated in a single TRUNCATE command.	'allow':1,20 'alvaro':11 'check':16 'command':10,60 'constraint':32,53 'function':36 'integr':15,31,52 'involv':48 'multipl':5 'new':35 'part':27 'referenti':14,30,51 'singl':9,58 'tabl':6,24,44,47 'truncat':2,4,22,37,42,55,59 'use':33,40
8	1	0	ddc4d320d5ebb0ec61e62ddf35ff6e7d	Properly process carriage returns and line feeds in COPY CSV mode (Andrew) In release 8.0, carriage returns and line feeds in CSV COPY TO were processed in an inconsistent manner. (This was documented on the TODO list.)	'8.0':15 'andrew':12 'carriag':3,16 'copi':9,23 'csv':10,22 'document':33 'feed':7,20 'inconsist':29 'line':6,19 'list':37 'manner':30 'mode':11 'process':2,26 'proper':1 'releas':14 'return':4,17 'todo':36
8	1	0	3f8338bd6da63c77101a443ff62c4e40	Add COPY WITH CSV HEADER to allow a header line as the first line in COPY (Andrew) This allows handling of the common CSV usage of placing the column names on the first line of the data file. For COPY TO , the first line contains the column names, and for COPY FROM , the first line is ignored.	'add':1 'allow':7,19 'andrew':17 'column':29,47 'common':23 'contain':45 'copi':2,16,40,51 'csv':4,24 'data':37 'file':38 'first':13,33,43,54 'handl':20 'header':5,9 'ignor':57 'line':10,14,34,44,55 'name':30,48 'place':27 'usag':25
8	1	0	1220012468246f2b2a9c61bf5103a7b7	On Windows, display better sub-second precision in EXPLAIN ANALYZE (Magnus)	'analyz':11 'better':4 'display':3 'explain':10 'magnus':12 'precis':8 'second':7 'sub':6 'sub-second':5 'window':2
8	1	0	d2269709b91b25b987bba9055e4d4b2e	Add trigger duration display to EXPLAIN ANALYZE (Tom) Prior releases included trigger execution time as part of the total execution time, but did not show it separately. It is now possible to see how much time is spent in each trigger.	'add':1 'analyz':7 'display':4 'durat':3 'execut':13,20 'explain':6 'includ':11 'much':35 'part':16 'possibl':31 'prior':9 'releas':10 'see':33 'separ':27 'show':25 'spent':38 'time':14,21,36 'tom':8 'total':19 'trigger':2,12,41
8	1	0	d158f89ab9b89629114648488070abb1	Add support for \\x hex escapes in COPY (Sergey Ten) Previous releases only supported octal escapes.	'add':1 'copi':8 'escap':6,16 'hex':5 'octal':15 'previous':11 'releas':12 'sergey':9 'support':2,14 'ten':10 'x':4
8	1	0	249285432e972ab101c40fb608faeb96	Make SHOW ALL include variable descriptions (Matthias Schmidt) SHOW varname still only displays the variable's value and does not include the description.	'descript':6,23 'display':13 'includ':4,21 'make':1 'matthia':7 'schmidt':8 'show':2,9 'still':11 'valu':17 'variabl':5,15 'varnam':10
8	1	0	ec0e8f0256c546d177f2a22b0cd57a39	Make initdb create a new standard database called postgres , and convert utilities to use postgres rather than template1 for standard lookups (Dave) In prior releases, template1 was used both as a default connection for utilities like createuser , and as a template for new databases. This caused CREATE DATABASE to sometimes fail, because a new database cannot be created if anyone else is in the template database. With this change, the default connection database is now postgres , meaning it is much less likely someone will be using template1 during CREATE DATABASE .	'anyon':60 'call':8 'cannot':56 'caus':46 'chang':69 'connect':33,72 'convert':11 'creat':3,47,58,89 'createus':37 'databas':7,44,48,55,66,73,90 'dave':22 'default':32,71 'els':61 'fail':51 'initdb':2 'less':81 'like':36,82 'lookup':21 'make':1 'mean':77 'much':80 'new':5,43,54 'postgr':9,15,76 'prior':24 'rather':16 'releas':25 'someon':83 'sometim':50 'standard':6,20 'templat':41,65 'template1':18,26,87 'use':14,28,86 'util':12,35
8	1	0	800a7e84e8e375b3fd9a0428580f8ed6	Create new reindexdb command-line utility by moving /contrib/reindexdb into the server (Euler Taveira de Oliveira)	'/contrib/reindexdb':10 'command':5 'command-lin':4 'creat':1 'de':16 'euler':14 'line':6 'move':9 'new':2 'oliveira':17 'reindexdb':3 'server':13 'taveira':15 'util':7
8	1	0	b22a7434d2abe4b76f134e444d7cfa4e	Add MAX() and MIN() aggregates for array types (Koju Iijima)	'add':1 'aggreg':5 'array':7 'iijima':10 'koju':9 'max':2 'min':4 'type':8
8	1	0	b86f8495e133dcde2546ef8e4c7e713c	Fix to_date() and to_timestamp() to behave reasonably when CC and YY fields are both used (Karel Zak) If the format specification contains CC and a year specification is YYY or longer, ignore the CC . If the year specification is YY or shorter, interpret CC as the previous century.	'behav':8 'cc':11,25,36,46 'centuri':50 'contain':24 'date':3 'field':14 'fix':1 'format':22 'ignor':34 'interpret':45 'karel':18 'longer':33 'previous':49 'reason':9 'shorter':44 'specif':23,29,40 'timestamp':6 'use':17 'year':28,39 'yy':13,42 'yyy':31 'zak':19
8	1	0	5b5ddc666b137b9f6e61bc57813bc3cd	Add md5(bytea) (Abhijit Menon-Sen) md5(text) already existed.	'abhijit':4 'add':1 'alreadi':10 'bytea':3 'exist':11 'md5':2,8 'menon':6 'menon-sen':5 'sen':7 'text':9
8	1	0	4263def9d48909769d75c2cb4a472c29	Fix NUMERIC modulus by properly truncating the quotient during computation (Bruce) In previous releases, modulus for large values sometimes returned negative results due to rounding of the quotient.	'bruce':11 'comput':10 'due':23 'fix':1 'larg':17 'modulus':3,15 'negat':21 'numer':2 'previous':13 'proper':5 'quotient':8,28 'releas':14 'result':22 'return':20 'round':25 'sometim':19 'truncat':6 'valu':18
8	1	0	156a476d06b8914f3f73aca0b2ec903c	Add a function lastval() (Dennis Bj&ouml;rklund) lastval() is a simplified version of currval() . It automatically determines the proper sequence name based on the most recent nextval() or setval() call performed by the current session.	'add':1 'automat':16 'base':22 'bj':6 'call':30 'current':34 'currval':14 'denni':5 'determin':17 'function':3 'lastval':4,8 'name':21 'nextval':27 'perform':31 'proper':19 'recent':26 'rklund':7 'sequenc':20 'session':35 'setval':29 'simplifi':11 'version':12
8	1	0	5aefc4ebf6a02071f2c0635de9284e5b	Add to_timestamp(DOUBLE PRECISION) (Michael Glaesemann) Converts Unix seconds since 1970 to a TIMESTAMP WITH TIMEZONE .	'1970':12 'add':1 'convert':8 'doubl':4 'glaesemann':7 'michael':6 'precis':5 'second':10 'sinc':11 'timestamp':3,15 'timezon':17 'unix':9
8	1	0	b5b9211ee6caa6d70c7b05133004a1ca	Add pg_postmaster_start_time() function (Euler Taveira de Oliveira, Matthias Schmidt)	'add':1 'de':9 'euler':7 'function':6 'matthia':11 'oliveira':10 'pg':2 'postmast':3 'schmidt':12 'start':4 'taveira':8 'time':5
8	1	0	0f1c581fd21e7db288b8ad2d3379ee58	Allow the full use of time zone names in AT TIME ZONE , not just the short list previously available (Magnus) Previously, only a predefined list of time zone names were supported by AT TIME ZONE . Now any supported time zone name can be used, e.g.: SELECT CURRENT_TIMESTAMP AT TIME ZONE 'Europe/London'; In the above query, the time zone used is adjusted based on the daylight saving time rules that were in effect on the supplied date.	'adjust':62 'allow':1 'avail':19 'base':63 'current':47 'date':77 'daylight':66 'e.g':45 'effect':73 'europe/london':52 'full':3 'list':17,25 'magnus':20 'name':8,29,41 'predefin':24 'previous':18,21 'queri':56 'rule':69 'save':67 'select':46 'short':16 'suppli':76 'support':31,38 'time':6,11,27,34,39,50,58,68 'timestamp':48 'use':4,44,60 'zone':7,12,28,35,40,51,59
8	1	0	ec7e633ecf5fbe2c60e5bf64882464d4	Add GREATEST() and LEAST() variadic functions (Pavel Stehule) These functions take a variable number of arguments and return the greatest or least value among the arguments.	'add':1 'among':24 'argument':16,26 'function':6,10 'greatest':2,20 'least':4,22 'number':14 'pavel':7 'return':18 'stehul':8 'take':11 'valu':23 'variabl':13 'variad':5
8	1	0	12000fd4f34cf75a641c95be8e707c9a	Add pg_column_size() (Mark Kirkwood) This returns storage size of a column, which might be compressed.	'add':1 'column':3,13 'compress':17 'kirkwood':6 'mark':5 'might':15 'pg':2 'return':8 'size':4,10 'storag':9
8	1	0	5a870815cb68228ec08d942b9aa5a80a	Add regexp_replace() (Atsushi Ogawa) This allows regular expression replacement, like sed. An optional flag argument allows selection of global (replace all) and case-insensitive modes.	'add':1 'allow':7,17 'argument':16 'atsushi':4 'case':25 'case-insensit':24 'express':9 'flag':15 'global':20 'insensit':26 'like':11 'mode':27 'ogawa':5 'option':14 'regexp':2 'regular':8 'replac':3,10,21 'sed':12 'select':18
8	1	0	ddfdd8f52a3228818c3e55c68a3631ba	Fix interval division and multiplication (Bruce) Previous versions sometimes returned unjustified results, like '4 months'::interval / 5 returning '1 mon -6 days' .	'-6':21 '1':19 '4':14 '5':17 'bruce':6 'day':22 'divis':3 'fix':1 'interv':2,16 'like':13 'mon':20 'month':15 'multipl':5 'previous':7 'result':12 'return':10,18 'sometim':9 'unjustifi':11 'version':8
8	1	0	c6227cf13b68850fb93121d7702a196a	Fix roundoff behavior in timestamp, time, and interval output (Tom) This fixes some cases in which the seconds field would be shown as 60 instead of incrementing the higher-order fields.	'60':24 'behavior':3 'case':14 'field':19,32 'fix':1,12 'higher':30 'higher-ord':29 'increment':27 'instead':25 'interv':8 'order':31 'output':9 'roundoff':2 'second':18 'shown':22 'time':6 'timestamp':5 'tom':10 'would':20
8	1	0	da155922218e820bb22b9f1877c4b5bd	Add \\set ON_ERROR_ROLLBACK to allow statements in a transaction to error without affecting the rest of the transaction (Greg Sabino Mullane) This is basically implemented by wrapping every statement in a sub-transaction.	'add':1 'affect':15 'allow':7 'basic':26 'error':4,13 'everi':30 'greg':21 'implement':27 'mullan':23 'rest':17 'rollback':5 'sabino':22 'set':2 'statement':8,31 'sub':35 'sub-transact':34 'transact':11,20,36 'without':14 'wrap':29
8	1	0	290a7623e6dce819c0442103d2aac76c	Add support for \\x hex strings in psql variables (Bruce) Octal escapes were already supported.	'add':1 'alreadi':14 'bruce':10 'escap':12 'hex':5 'octal':11 'psql':8 'string':6 'support':2,15 'variabl':9 'x':4
8	1	0	f7803e259b6e324c943cdcf5fbd14588	Add a separate day field to type interval so a one day interval can be distinguished from a 24 hour interval (Michael Glaesemann) Days that contain a daylight saving time adjustment are not 24 hours long, but typically 23 or 25 hours. This change creates a conceptual distinction between intervals of so many days and intervals of so many hours . Adding 1 day to a timestamp now gives the same local time on the next day even if a daylight saving time adjustment occurs between, whereas adding 24 hours will give a different local time when this happens. For example, under US DST rules: '2005-04-03 00:00:00-05' + '1 day' = '2005-04-04 00:00:00-04' '2005-04-03 00:00:00-05' + '24 hours' = '2005-04-04 01:00:00-04'	'-03':107,123 '-04':106,115,116,120,122,131,132,136 '-05':111,127 '00':108,109,110,117,118,119,124,125,126,134,135 '01':133 '1':62,112 '2005':105,114,121,130 '23':39 '24':19,34,88,128 '25':41 'ad':61,87 'add':1 'adjust':31,83 'chang':44 'conceptu':47 'contain':26 'creat':45 'day':4,12,24,54,63,76,113 'daylight':28,80 'differ':93 'distinct':48 'distinguish':16 'dst':103 'even':77 'exampl':100 'field':5 'give':68,91 'glaesemann':23 'happen':98 'hour':20,35,42,60,89,129 'interv':8,13,21,50,56 'local':71,94 'long':36 'mani':53,59 'michael':22 'next':75 'occur':84 'one':11 'rule':104 'save':29,81 'separ':3 'time':30,72,82,95 'timestamp':66 'type':7 'typic':38 'us':102 'wherea':86
8	1	0	7a82f4de56e5263aec9c48ee99e9414c	Move /contrib/dbsize into the backend, and rename some of the functions (Dave Page, Andreas Pflug) pg_tablespace_size()	'/contrib/dbsize':2 'andrea':14 'backend':5 'dave':12 'function':11 'move':1 'page':13 'pflug':15 'pg':16 'renam':7 'size':18 'tablespac':17
8	1	0	2d9cee8e231c62838ea8ab637e178242	pg_total_relation_size() includes indexes and TOAST tables.	'includ':5 'index':6 'pg':1 'relat':3 'size':4 'tabl':9 'toast':8 'total':2
8	1	0	3df9c77e25562a9face2ccba45166dac	Add functions for read-only file access to the cluster directory (Dave Page, Andreas Pflug) pg_stat_file()	'access':8 'add':1 'andrea':15 'cluster':11 'dave':13 'directori':12 'file':7,19 'function':2 'page':14 'pflug':16 'pg':17 'read':5 'read-on':4 'stat':18
8	1	0	1d3d566e6a6c3b051a847b26cfda3178	pg_read_file()	'file':3 'pg':1 'read':2
8	1	0	1039a0c782074b810289592ce79d4692	pg_ls_dir()	'dir':3 'ls':2 'pg':1
8	1	0	3196c3f2f4a7af827aa37647eb9b8cda	Add pg_reload_conf() to force reloading of the configuration files (Dave Page, Andreas Pflug)	'add':1 'andrea':14 'conf':4 'configur':10 'dave':12 'file':11 'forc':6 'page':13 'pflug':15 'pg':2 'reload':3,7
8	1	0	9abff0280c241ab168ea84dd08236261	Add pg_rotate_logfile() to force rotation of the server log file (Dave Page, Andreas Pflug)	'add':1 'andrea':15 'dave':13 'file':12 'forc':6 'log':11 'logfil':4 'page':14 'pflug':16 'pg':2 'rotat':3,7 'server':10
8	1	0	dc072775699d9284796659c7f8a333ed	Change pg_stat_* views to include TOAST tables (Tom)	'chang':1 'includ':6 'pg':2 'stat':3 'tabl':8 'toast':7 'tom':9 'view':4
8	1	0	11ec67eee478d28e9b3c9f46762d067b	Rename some encodings to be more consistent and to follow international standards (Bruce) UNICODE is now UTF8	'bruce':13 'consist':7 'encod':3 'follow':10 'intern':11 'renam':1 'standard':12 'unicod':14 'utf8':17
8	1	0	8dbb0ebc2eefc5c95a69b2c90e9ff9e9	ALT is now WIN866	'alt':1 'win866':4
8	1	0	c1242650b23c70cb297593f887b2d498	WIN is now WIN1251	'win':1 'win1251':4
8	1	0	70831fb925d1ba36d7265b3efa090032	TCVN is now WIN1258	'tcvn':1 'win1258':4
8	1	0	700167069f19b70d5cc166ecf0fafbbc	The original names still work.	'name':3 'origin':2 'still':4 'work':5
8	1	0	2952650fd3c611a681869af6d6a760fc	Add support for WIN1252 encoding (Roland Volkmann)	'add':1 'encod':5 'roland':6 'support':2 'volkmann':7 'win1252':4
8	1	0	18cb13db7184d44154acbeeca6287e78	Add support for four-byte UTF8 characters (John Hansen) Previously only one, two, and three-byte UTF8 characters were supported. This is particularly important for support for some Chinese character sets.	'add':1 'byte':6,18 'charact':8,20,32 'chines':31 'four':5 'four-byt':4 'hansen':10 'import':26 'john':9 'one':13 'particular':25 'previous':11 'set':33 'support':2,22,28 'three':17 'three-byt':16 'two':14 'utf8':7,19
8	1	0	e6ad0e25197e39e881c53891c512054d	Allow direct conversion between EUC_JP and SJIS to improve performance (Atsushi Ogawa)	'allow':1 'atsushi':12 'convers':3 'direct':2 'euc':5 'improv':10 'jp':6 'ogawa':13 'perform':11 'sjis':8
8	1	0	f87e5426235f5df53ddd942cec3e0ccc	Allow the UTF8 encoding to work on Windows (Magnus) This is done by mapping UTF8 to the Windows-native UTF16 implementation.	'allow':1 'done':12 'encod':4 'implement':22 'magnus':9 'map':14 'nativ':20 'utf16':21 'utf8':3,15 'window':8,19 'windows-n':18 'work':6
8	1	0	e776fa2f7a7c874a7e018c922f4172cd	Fix ALTER LANGUAGE RENAME (Sergey Yatskevich)	'alter':2 'fix':1 'languag':3 'renam':4 'sergey':5 'yatskevich':6
8	1	0	7e89f037f817dc10ea488490ebb61a34	Allow function characteristics, like strictness and volatility, to be modified via ALTER FUNCTION (Neil)	'allow':1 'alter':12 'characterist':3 'function':2,13 'like':4 'modifi':10 'neil':14 'strict':5 'via':11 'volatil':7
8	1	0	f78bbf71e769441d662d15e18cc38d1f	Increase the maximum number of function arguments to 100 (Tom)	'100':9 'argument':7 'function':6 'increas':1 'maximum':3 'number':4 'tom':10
8	1	0	87eda19670cab69825a579d16aec229d	Add support for troff -ms output format (Roger Leigh)	'add':1 'format':7 'leigh':9 'ms':5 'output':6 'roger':8 'support':2 'troff':4
8	3	6	f1639dd9df9f4c6b7e075aea1344264c	Fix possible garbage output from contrib/sslinfo functions (Tom)	'contrib/sslinfo':6 'fix':1 'function':7 'garbag':3 'output':4 'possibl':2 'tom':8
8	1	0	53e77ccb299fae4bf8e7c06d6f596b3c	Allow SQL and PL/PgSQL functions to use OUT and INOUT parameters (Tom) OUT is an alternate way for a function to return values. Instead of using RETURN , values can be returned by assigning to parameters declared as OUT or INOUT . This is notationally simpler in some cases, particularly so when multiple values need to be returned. While returning multiple values from a function was possible in previous releases, this greatly simplifies the process. (The feature will be extended to other server-side languages in future releases.)	'allow':1 'altern':16 'assign':33 'case':47 'declar':36 'extend':78 'featur':75 'function':5,20,63 'futur':86 'great':70 'inout':10,40 'instead':24 'languag':84 'multipl':51,59 'need':53 'notat':43 'paramet':11,35 'particular':48 'pl/pgsql':4 'possibl':65 'previous':67 'process':73 'releas':68,87 'return':22,27,31,56,58 'server':82 'server-sid':81 'side':83 'simpler':44 'simplifi':71 'sql':2 'tom':12 'use':7,26 'valu':23,28,52,60 'way':17
8	1	0	5637542fe26c785499ea353f6e5aaae9	Move language handler functions into the pg_catalog schema This makes it easier to drop the public schema if desired.	'catalog':8 'desir':20 'drop':15 'easier':13 'function':4 'handler':3 'languag':2 'make':11 'move':1 'pg':7 'public':17 'schema':9,18
8	1	0	f3bf21192ce802b72527e94448860daf	Add SPI_getnspname() to SPI (Neil)	'add':1 'getnspnam':3 'neil':6 'spi':2,5
8	1	0	22ede76416f50f00cf75ac6680a9c274	Overhaul the memory management of PL/PgSQL functions (Neil) The parsetree of each function is now stored in a separate memory context. This allows this memory to be easily reclaimed when it is no longer needed.	'allow':23 'context':21 'easili':28 'function':7,13 'longer':34 'manag':4 'memori':3,20,25 'need':35 'neil':8 'overhaul':1 'parsetre':10 'pl/pgsql':6 'reclaim':29 'separ':19 'store':16
8	1	0	8643d1a09d86695dd2be80a8aa53723d	Check function syntax at CREATE FUNCTION time, rather than at runtime (Neil) Previously, most syntax errors were reported only when the function was executed.	'check':1 'creat':5 'error':16 'execut':24 'function':2,6,22 'neil':12 'previous':13 'rather':8 'report':18 'runtim':11 'syntax':3,15 'time':7
8	1	0	635121998c227ab1d73402c748c15a18	Allow OPEN to open non- SELECT queries like EXPLAIN and SHOW (Tom)	'allow':1 'explain':9 'like':8 'non':5 'open':2,4 'queri':7 'select':6 'show':11 'tom':12
8	1	0	a6f74ad154703d36168dab50723360a4	No longer require functions to issue a RETURN statement (Tom) This is a byproduct of the newly added OUT and INOUT functionality. RETURN can be omitted when it is not needed to provide the function's return value.	'ad':18 'byproduct':14 'function':4,22,35 'inout':21 'issu':6 'longer':2 'need':31 'newli':17 'omit':26 'provid':33 'requir':3 'return':8,23,37 'statement':9 'tom':10 'valu':38
8	1	0	744425092535fcbf92e0132642d15376	Add support for an optional INTO clause to PL/PgSQL's EXECUTE statement (Pavel Stehule, Neil)	'add':1 'claus':7 'execut':11 'neil':15 'option':5 'pavel':13 'pl/pgsql':9 'statement':12 'stehul':14 'support':2
8	1	0	c272479648522dfab286f878149ec470	Make CREATE TABLE AS set ROW_COUNT (Tom)	'count':7 'creat':2 'make':1 'row':6 'set':5 'tabl':3 'tom':8
8	1	0	61fddf2c4ab33577b3cc23779aeb89b4	Define SQLSTATE and SQLERRM to return the SQLSTATE and error message of the current exception (Pavel Stehule, Neil) These variables are only defined inside exception blocks.	'block':26 'current':14 'defin':1,23 'error':10 'except':15,25 'insid':24 'messag':11 'neil':18 'pavel':16 'return':6 'sqlerrm':4 'sqlstate':2,8 'stehul':17 'variabl':20
8	1	0	e5b5472f99e4b359bf4b8f6b9ca8976c	Allow the parameters to the RAISE statement to be expressions (Pavel Stehule, Neil)	'allow':1 'express':10 'neil':13 'paramet':3 'pavel':11 'rais':6 'statement':7 'stehul':12
8	1	0	9412e964f0888aa6beabb4cc3a035f3d	Add a loop CONTINUE statement (Pavel Stehule, Neil)	'add':1 'continu':4 'loop':3 'neil':8 'pavel':6 'statement':5 'stehul':7
8	1	0	20ef9a408394316e3823a7897c24d11d	Allow block and loop labels (Pavel Stehule)	'allow':1 'block':2 'label':5 'loop':4 'pavel':6 'stehul':7
8	1	0	9053bed13b351845f37d544f4e25d5f7	Allow large result sets to be returned efficiently (Abhijit Menon-Sen) This allows functions to use return_next() to avoid building the entire result set in memory.	'abhijit':9 'allow':1,14 'avoid':21 'build':22 'effici':8 'entir':24 'function':15 'larg':2 'memori':28 'menon':11 'menon-sen':10 'next':19 'result':3,25 'return':7,18 'sen':12 'set':4,26 'use':17
8	1	0	45515d00c59ec850daf074a1f4b8caa1	Allow one-row-at-a-time retrieval of query results (Abhijit Menon-Sen) This allows functions to use spi_query() and spi_fetchrow() to avoid accumulating the entire result set in memory.	'abhijit':12 'accumul':28 'allow':1,17 'avoid':27 'entir':30 'fetchrow':25 'function':18 'memori':34 'menon':14 'menon-sen':13 'one':3 'one-row-at-a-tim':2 'queri':10,22 'result':11,31 'retriev':8 'row':4 'sen':15 'set':32 'spi':21,24 'time':7 'use':20
8	1	0	66ad1c2dec2f991477238656da377ec3	Force PL/Perl to handle strings as UTF8 if the server encoding is UTF8 (David Kamholz)	'david':14 'encod':11 'forc':1 'handl':4 'kamholz':15 'pl/perl':2 'server':10 'string':5 'utf8':7,13
8	1	0	f8cec6133e4311968a1c2bfe0d61d11d	Add a validator function for PL/Perl (Andrew) This allows syntax errors to be reported at definition time, rather than execution time.	'add':1 'allow':9 'andrew':7 'definit':16 'error':11 'execut':20 'function':4 'pl/perl':6 'rather':18 'report':14 'syntax':10 'time':17,21 'valid':3
8	1	0	d04745b28a1141fe31f7cad9570ae54c	Allow PL/Perl to return a Perl array when the function returns an array type (Andrew) This basically maps PostgreSQL arrays to Perl arrays.	'allow':1 'andrew':15 'array':7,13,20,23 'basic':17 'function':10 'map':18 'perl':6,22 'pl/perl':2 'postgresql':19 'return':4,11 'type':14
8	1	0	bfd5d9e8360bad93dec911db60ee04ee	Allow Perl nonfatal warnings to generate NOTICE messages (Andrew)	'allow':1 'andrew':9 'generat':6 'messag':8 'nonfat':3 'notic':7 'perl':2 'warn':4
8	1	0	42d69acabcd30b9d05f1f2286a8084a3	Allow Perl's strict mode to be enabled (Andrew)	'allow':1 'andrew':9 'enabl':8 'mode':5 'perl':2 'strict':4
8	1	0	59e71648aa104c1f1c093e378da8d111	Allow the history file location to be controlled by HISTFILE (Andreas Seltenreich) This allows configuration of per-database history storage.	'allow':1,14 'andrea':11 'configur':15 'control':8 'databas':19 'file':4 'histfil':10 'histori':3,20 'locat':5 'per':18 'per-databas':17 'seltenreich':12 'storag':21
8	1	0	23035343439df9be6be3c101090c6bab	Prevent \\x (expanded mode) from affecting the output of \\d tablename (Neil)	'affect':6 'd':10 'expand':3 'mode':4 'neil':12 'output':8 'prevent':1 'tablenam':11 'x':2
8	1	0	0967339a08d2877dd782ec99a8405d09	Add -L option to psql to log sessions (Lorne Sunley) This option was added because some operating systems do not have simple command-line activity logging functionality.	'activ':26 'ad':14 'add':1 'command':24 'command-lin':23 'function':28 'l':2 'line':25 'log':7,27 'lorn':9 'oper':17 'option':3,12 'psql':5 'session':8 'simpl':22 'sunley':10 'system':18
8	1	0	272ea8682160eac81954954f827339e7	Make \\d show the tablespaces of indexes (Qingqing Zhou)	'd':2 'index':7 'make':1 'qingq':8 'show':3 'tablespac':5 'zhou':9
8	1	0	98671f1b01578a48d2d96c73395bc4ab	Allow psql help ( \\h ) to make a best guess on the proper help information (Greg Sabino Mullane) This allows the user to just add \\h to the front of the syntax error query and get help on the supported syntax. Previously any additional query text beyond the command name had to be removed to use \\h .	'add':24 'addit':43 'allow':1,19 'best':8 'beyond':46 'command':48 'error':32 'front':28 'get':35 'greg':15 'guess':9 'h':4,25,56 'help':3,13,36 'inform':14 'make':6 'mullan':17 'name':49 'previous':41 'proper':12 'psql':2 'queri':33,44 'remov':53 'sabino':16 'support':39 'syntax':31,40 'text':45 'use':55 'user':21
8	1	0	0d934293f8172b1d39494f467a5c9116	Add \\pset numericlocale to allow numbers to be output in a locale-aware format (Eugen Nedelcu) For example, using C locale 100000 would be output as 100,000.0 while a European locale might output this value as 100.000,0 .	'0':40 '000.0':29 '100':28 '100.000':39 '100000':23 'add':1 'allow':5 'awar':14 'c':21 'eugen':16 'european':32 'exampl':19 'format':15 'local':13,22,33 'locale-awar':12 'might':34 'nedelcu':17 'number':6 'numericlocal':3 'output':9,26,35 'pset':2 'use':20 'valu':37 'would':24
8	1	0	406ea6ab844901c3cd66649dfa07fde8	Make startup banner show both server version number and psql 's version number, when they are different (Bruce) Also, a warning will be shown if the server and psql are from different major releases.	'also':19 'banner':3 'bruce':18 'differ':17,32 'major':33 'make':1 'number':8,13 'psql':10,29 'releas':34 'server':6,27 'show':4 'shown':24 'startup':2 'version':7,12 'warn':21
8	1	0	55180f29d702fc5ed4a4a807f6374d2d	Add -n / --schema switch to pg_restore (Richard van den Berg) This allows just the objects in a specified schema to be restored.	'add':1 'allow':13 'berg':11 'den':10 'n':2 'object':16 'pg':6 'restor':7,23 'richard':8 'schema':3,20 'specifi':19 'switch':4 'van':9
8	1	0	77a2617a6e8516d96a017460bc741dd9	Allow pg_dump to dump large objects even in text mode (Tom) With this change, large objects are now always dumped; the former -b switch is a no-op.	'allow':1 'alway':20 'b':24 'chang':15 'dump':3,5,21 'even':8 'former':23 'larg':6,16 'mode':11 'no-op':28 'object':7,17 'op':30 'pg':2 'switch':25 'text':10 'tom':12
8	1	0	2e2d83686152b7c62059cb9f2f4d18f5	Allow pg_dump to dump a consistent snapshot of large objects (Tom)	'allow':1 'consist':7 'dump':3,5 'larg':10 'object':11 'pg':2 'snapshot':8 'tom':12
8	1	0	f10fd154ef1f7f48592e1b09e3938f43	Dump comments for large objects (Tom)	'comment':2 'dump':1 'larg':4 'object':5 'tom':6
8	1	0	dc0540aec2d66a641476edd1d7121f91	Add --encoding to pg_dump (Magnus Hagander) This allows a database to be dumped in an encoding that is different from the server's encoding. This is valuable when transferring the dump to a machine with a different encoding.	'add':1 'allow':9 'databas':11 'differ':20,38 'dump':5,14,32 'encod':2,17,25,39 'hagand':7 'machin':35 'magnus':6 'pg':4 'server':23 'transfer':30 'valuabl':28
8	1	0	bc0d0666eabf3500fd3a59d8ddb5959c	Rely on pg_pltemplate for procedural languages (Tom) If the call handler for a procedural language is in the pg_catalog schema, pg_dump does not dump the handler. Instead, it dumps the language using just CREATE LANGUAGE name , relying on the pg_pltemplate catalog to provide the language's creation parameters at load time.	'call':11 'catalog':21,45 'creat':37 'creation':51 'dump':24,27,32 'handler':12,29 'instead':30 'languag':7,16,34,38,49 'load':54 'name':39 'paramet':52 'pg':3,20,23,43 'pltemplat':4,44 'procedur':6,15 'provid':47 'reli':1,40 'schema':22 'time':55 'tom':8 'use':35
8	1	0	3f275dcb7c4c68acfc272e5fc728bc23	Add a PGPASSFILE environment variable to specify the password file's filename (Andrew)	'add':1 'andrew':13 'environ':4 'file':10 'filenam':12 'password':9 'pgpassfil':3 'specifi':7 'variabl':5
8	1	0	6f45e9463513a7bddd9933ef2e878e3f	Add lo_create() , that is similar to lo_creat() but allows the OID of the large object to be specified (Tom)	'add':1 'allow':11 'creat':3,9 'larg':16 'lo':2,8 'object':17 'oid':13 'similar':6 'specifi':20 'tom':21
8	1	0	c0993c2a039eb8aa220085459552d361	Make libpq consistently return an error to the client application on malloc() failure (Neil)	'applic':10 'client':9 'consist':3 'error':6 'failur':13 'libpq':2 'make':1 'malloc':12 'neil':14 'return':4
8	1	0	2aa62529e43a37140491bd885b429035	Fix pgxs to support building against a relocated installation	'build':5 'fix':1 'instal':9 'pgxs':2 'reloc':8 'support':4
8	1	0	1586595213418c6302c65916622ec588	Add spinlock support for the Itanium processor using Intel compiler (Vikram Kalsi)	'add':1 'compil':10 'intel':9 'itanium':6 'kalsi':12 'processor':7 'spinlock':2 'support':3 'use':8 'vikram':11
8	1	0	c298e1fe03c6b5e227d50be5c584b89d	Add Kerberos 5 support for Windows (Magnus)	'5':3 'add':1 'kerbero':2 'magnus':7 'support':4 'window':6
8	1	0	f9b183412d062a0b6a5e17173f3a1444	Add Chinese FAQ (laser@pgsqldb.com)	'add':1 'chines':2 'faq':3 'laser@pgsqldb.com':4
8	1	0	2fb9daaeb58609b23c492196e54852da	Rename Rendezvous to Bonjour to match OS/X feature renaming (Bruce)	'bonjour':4 'bruce':10 'featur':8 'match':6 'os/x':7 'renam':1,9 'rendezv':2
8	1	0	747e8b6719e9acf1256011e1ad54db79	Add support for fsync_writethrough on Darwin (Chris Campbell)	'add':1 'campbel':9 'chris':8 'darwin':7 'fsync':4 'support':2 'writethrough':5
8	1	0	a6c31ffcd45e918349fec507299f4626	Streamline the passing of information within the server, the optimizer, and the lock system (Tom)	'inform':5 'lock':13 'optim':10 'pass':3 'server':8 'streamlin':1 'system':14 'tom':15 'within':6
8	1	0	22358a12a65076f6be2c82e066c975fa	Allow pg_config to be compiled using MSVC (Andrew) This is required to build DBD::Pg using MSVC .	'allow':1 'andrew':9 'build':14 'compil':6 'config':3 'dbd':15 'msvc':8,18 'pg':2,16 'requir':12 'use':7,17
8	1	0	454ba5bcbfb130189e0270f3cf823e99	Remove support for Kerberos V4 (Magnus) Kerberos 4 had security vulnerabilities and is no longer maintained.	'4':8 'kerbero':4,7 'longer':15 'magnus':6 'maintain':16 'remov':1 'secur':10 'support':2 'v4':5 'vulner':11
8	1	0	93dbee896ed9936472114fdcf23550a2	Code cleanups (Coverity static analysis performed by EnterpriseDB)	'analysi':5 'cleanup':2 'code':1 'cover':3 'enterprisedb':8 'perform':6 'static':4
8	1	0	f40156c089764a39b52045fd9ab73741	Modify postgresql.conf to use documentation defaults on / off rather than true / false (Bruce)	'bruce':13 'default':6 'document':5 'fals':12 'modifi':1 'postgresql.conf':2 'rather':9 'true':11 'use':4
8	1	0	2cfc55cad8b114759114502a7c369287	Enhance pg_config to be able to report more build-time values (Tom)	'abl':6 'build':11 'build-tim':10 'config':3 'enhanc':1 'pg':2 'report':8 'time':12 'tom':14 'valu':13
8	1	0	770c633bd9c720feb11a93cc89ce1254	Allow libpq to be built thread-safe on Windows (Dave Page)	'allow':1 'built':5 'dave':11 'libpq':2 'page':12 'safe':8 'thread':7 'thread-saf':6 'window':10
8	1	0	2dec89870399ef6aa3c24ab7de47ec66	Allow IPv6 connections to be used on Windows (Andrew)	'allow':1 'andrew':9 'connect':3 'ipv6':2 'use':6 'window':8
8	1	0	631e6a63a8e134025444af02b72268c4	Add Server Administration documentation about I/O subsystem reliability (Bruce)	'add':1 'administr':3 'bruce':9 'document':4 'i/o':6 'reliabl':8 'server':2 'subsystem':7
8	1	0	04c85d3abe3fb22be2d321a40196b7ca	Move private declarations from gist.h to gist_private.h (Neil) In previous releases, gist.h contained both the public GiST API (intended for use by authors of GiST index implementations) as well as some private declarations used by the implementation of GiST itself. The latter have been moved to a separate file, gist_private.h . Most GiST index implementations should be unaffected.	'api':19 'author':24 'contain':14 'declar':3,34 'file':50 'gist':7,18,26,40,51,54 'gist.h':5,13 'implement':28,38,56 'index':27,55 'intend':20 'latter':43 'move':1,46 'neil':9 'previous':11 'privat':2,33 'private.h':8,52 'public':17 'releas':12 'separ':49 'unaffect':59 'use':22,35 'well':30
8	1	0	ecb9148fc31dce87dc0a0aaea9c9f954	Overhaul GiST memory management (Neil) GiST methods are now always invoked in a short-lived memory context. Therefore, memory allocated via palloc() will be reclaimed automatically, so GiST index implementations do not need to manually release allocated memory via pfree() .	'alloc':21,38 'alway':10 'automat':27 'context':18 'gist':2,6,29 'implement':31 'index':30 'invok':11 'live':16 'manag':4 'manual':36 'memori':3,17,20,39 'method':7 'need':34 'neil':5 'overhaul':1 'palloc':23 'pfree':41 'reclaim':26 'releas':37 'short':15 'short-liv':14 'therefor':19 'via':22,40
8	1	0	bfc38ed7d51ff7a3042d2498c696c9a8	Add /contrib/pg_buffercache contrib module (Mark Kirkwood) This displays the contents of the buffer cache, for debugging and performance tuning purposes.	'/contrib/pg_buffercache':2 'add':1 'buffer':13 'cach':14 'content':10 'contrib':3 'debug':16 'display':8 'kirkwood':6 'mark':5 'modul':4 'perform':18 'purpos':20 'tune':19
8	1	0	467d18c53dcb5d694f2cbed2f177356b	Remove /contrib/array because it is obsolete (Tom)	'/contrib/array':2 'obsolet':6 'remov':1 'tom':7
8	1	0	1a5d338ee7a62f901ed2c0b2fc76e97b	Clean up the /contrib/lo module (Tom)	'/contrib/lo':4 'clean':1 'modul':5 'tom':6
8	1	0	a4ccf0142345c397cf85d9561327c593	Move /contrib/findoidjoins to /src/tools (Tom)	'/contrib/findoidjoins':2 '/src/tools':4 'move':1 'tom':5
8	1	0	1b3ca7f70781f0b5cde47ccb9ee1804f	Remove the &lt;&lt; , &gt;&gt; , &amp;&lt; , and &amp;&gt; operators from /contrib/cube These operators were not useful.	'/contrib/cube':6 'oper':4,8 'remov':1 'use':11
8	1	0	126b5ccabf1156e512d6a49a64dd4110	Improve /contrib/btree_gist (Janko Richter)	'/contrib/btree_gist':2 'improv':1 'janko':3 'richter':4
8	1	0	c9893ff884ff37a7c6a22d1f03291d1f	Improve /contrib/pgbench (Tomoaki Sato, Tatsuo) There is now a facility for testing with SQL command scripts given by the user, instead of only a hard-wired command sequence.	'/contrib/pgbench':2 'command':15,28 'facil':10 'given':17 'hard':26 'hard-wir':25 'improv':1 'instead':21 'sato':4 'script':16 'sequenc':29 'sql':14 'tatsuo':5 'test':12 'tomoaki':3 'user':20 'wire':27
8	1	0	7bb0ef5e2a1b856384a35538dcb96ffc	Improve /contrib/pgcrypto (Marko Kreen) Implementation of OpenPGP symmetric-key and public-key encryption Both RSA and Elgamal public-key algorithms are supported.	'/contrib/pgcrypto':2 'algorithm':23 'elgam':19 'encrypt':15 'implement':5 'improv':1 'key':10,14,22 'kreen':4 'marko':3 'openpgp':7 'public':13,21 'public-key':12,20 'rsa':17 'support':25 'symmetr':9 'symmetric-key':8
8	1	0	e8b947e18390e0df8f69ededf9d57f03	Stand alone build: include SHA256/384/512 hashes, Fortuna PRNG	'alon':2 'build':3 'fortuna':7 'hash':6 'includ':4 'prng':8 'sha256/384/512':5 'stand':1
8	1	0	39248ea4bfd21f427ca4d8b86c2815ec	OpenSSL build: support 3DES, use internal AES with OpenSSL &lt; 0.9.7	'0.9.7':10 '3des':4 'ae':7 'build':2 'intern':6 'openssl':1,9 'support':3 'use':5
8	1	0	17d01b985d61077d4dc8df25fc43ef5f	Take build parameters (OpenSSL, zlib) from configure result There is no need to edit the Makefile anymore.	'anymor':17 'build':2 'configur':7 'edit':14 'makefil':16 'need':12 'openssl':4 'paramet':3 'result':8 'take':1 'zlib':5
8	1	0	bbea14ab6817a5b78464b5305b9ae4ed	Remove support for libmhash and libmcrypt	'libmcrypt':6 'libmhash':4 'remov':1 'support':2
8	2	7	b38bcdf66579d921c9948bc8573ee4e6	Fix unrecognized node type error in some variants of ALTER OWNER (Tom)	'alter':10 'error':5 'fix':1 'node':3 'owner':11 'tom':12 'type':4 'unrecogn':2 'variant':8
8	2	13	823a5ca6b2bbd23f7396677c912fcb2a	Prevent error recursion crashes when encoding conversion fails (Tom) This change extends fixes made in the last two minor releases for related failure scenarios. The previous fixes were narrowly tailored for the original problem reports, but we have now recognized that any error thrown by an encoding conversion function could potentially lead to infinite recursion while trying to report the error. The solution therefore is to disable translation and encoding conversion and report the plain-ASCII form of any error message, if we find we have gotten into a recursive error reporting situation. (CVE-2009-0922)	'-0922':97 '-2009':96 'ascii':77 'chang':11 'convers':7,48,71 'could':50 'crash':4 'cve':95 'disabl':67 'encod':6,47,70 'error':2,43,61,81,92 'extend':12 'fail':8 'failur':23 'find':85 'fix':13,27 'form':78 'function':49 'gotten':88 'infinit':54 'last':17 'lead':52 'made':14 'messag':82 'minor':19 'narrowli':29 'origin':33 'plain':76 'plain-ascii':75 'potenti':51 'prevent':1 'previous':26 'problem':34 'recogn':40 'recurs':3,55,91 'relat':22 'releas':20 'report':35,59,73,93 'scenario':24 'situat':94 'solut':63 'tailor':30 'therefor':64 'thrown':44 'tom':9 'translat':68 'tri':57 'two':18
8	2	13	029dd667f0b3c50067008fadae2d5c39	Disallow CREATE CONVERSION with the wrong encodings for the specified conversion function (Heikki) This prevents one possible scenario for encoding conversion failure. The previous change is a backstop to guard against other kinds of failures in the same area.	'area':39 'backstop':28 'chang':25 'convers':3,11,21 'creat':2 'disallow':1 'encod':7,20 'failur':22,35 'function':12 'guard':30 'heikki':13 'kind':33 'one':16 'possibl':17 'prevent':15 'previous':24 'scenario':18 'specifi':10 'wrong':6
8	2	13	c57ebc9c3b373992f1a0ed31f9e15011	Fix core dump when to_char() is given format codes that are inappropriate for the type of the data argument (Tom)	'argument':20 'char':6 'code':10 'core':2 'data':19 'dump':3 'fix':1 'format':9 'given':8 'inappropri':13 'tom':21 'type':16
8	2	12	ee82c3df361cb89bcd075dbbc6f1a63f	Avoid unnecessary locking of small tables in VACUUM (Heikki)	'avoid':1 'heikki':9 'lock':3 'small':5 'tabl':6 'unnecessari':2 'vacuum':8
8	2	13	f48d4a81be633bf57c72cfb54c0fe4f1	Fix possible failure in contrib/tsearch2 when C locale is used with a multi-byte encoding (Teodor) Crashes were possible on platforms where wchar_t is narrower than int ; Windows in particular.	'byte':15 'c':7 'contrib/tsearch2':5 'crash':18 'encod':16 'failur':3 'fix':1 'int':29 'local':8 'multi':14 'multi-byt':13 'narrow':27 'particular':32 'platform':22 'possibl':2,20 'teodor':17 'use':10 'wchar':24 'window':30
8	2	13	2ddc414f455dce4294e75bb8697bf52c	Fix extreme inefficiency in contrib/tsearch2 parser's handling of an email-like string containing multiple @ characters (Heikki)	'charact':17 'contain':15 'contrib/tsearch2':5 'email':12 'email-lik':11 'extrem':2 'fix':1 'handl':8 'heikki':18 'ineffici':3 'like':13 'multipl':16 'parser':6 'string':14
8	2	13	c74bc370db7edd8327e6beef7b43c846	Fix decompilation of CASE WHEN with an implicit coercion (Tom) This mistake could lead to Assert failures in an Assert-enabled build, or an unexpected CASE WHEN clause error message in other cases, when trying to examine or dump a view.	'assert':16,21 'assert-en':20 'build':23 'case':4,27,34 'claus':29 'coercion':9 'could':13 'decompil':2 'dump':40 'enabl':22 'error':30 'examin':38 'failur':17 'fix':1 'implicit':8 'lead':14 'messag':31 'mistak':12 'tom':10 'tri':36 'unexpect':26 'view':42
8	2	13	4fc7778c1973bf1c60b123ebbdea9e37	Fix possible misassignment of the owner of a TOAST table's rowtype (Tom) If CLUSTER or a rewriting variant of ALTER TABLE were executed by someone other than the table owner, the pg_type entry for the table's TOAST table would end up marked as owned by that someone. This caused no immediate problems, since the permissions on the TOAST rowtype aren't examined by any ordinary database operation. However, it could lead to unexpected failures if one later tried to drop the role that issued the command (in 8.1 or 8.2), or owner of data type appears to be invalid warnings from pg_dump after having done so (in 8.3).	'8.1':91 '8.2':93 '8.3':112 'alter':21 'appear':99 'aren':63 'caus':52 'cluster':15 'command':89 'could':73 'data':97 'databas':69 'done':109 'drop':83 'dump':106 'end':43 'entri':35 'examin':65 'execut':24 'failur':77 'fix':1 'howev':71 'immedi':54 'invalid':102 'issu':87 'later':80 'lead':74 'mark':45 'misassign':3 'one':79 'oper':70 'ordinari':68 'own':47 'owner':6,31,95 'permiss':58 'pg':33,105 'possibl':2 'problem':55 'rewrit':18 'role':85 'rowtyp':12,62 'sinc':56 'someon':26,50 'tabl':10,22,30,38,41 'toast':9,40,61 'tom':13 'tri':81 'type':34,98 'unexpect':76 'variant':19 'warn':103 'would':42
8	2	12	fb022dd859d223813030f07f0f74b720	Fix configure script to properly report failure when unable to obtain linkage information for PL/Perl (Andrew)	'andrew':16 'configur':2 'failur':7 'fix':1 'inform':13 'linkag':12 'obtain':11 'pl/perl':15 'proper':5 'report':6 'script':3 'unabl':9
8	2	13	e39949b32ec60a2d388b4cb259b33bc9	Fix PL/pgSQL to not treat INTO after INSERT as an INTO-variables clause anywhere in the string, not only at the start; in particular, don't fail for INSERT INTO within CREATE RULE (Tom)	'anywher':15 'claus':14 'creat':33 'fail':28 'fix':1 'insert':8,30 'into-vari':11 'particular':25 'pl/pgsql':2 'rule':34 'start':23 'string':18 'tom':35 'treat':5 'variabl':13 'within':32
8	2	13	92f2632bd47e2327831630c10b927b5c	Clean up PL/pgSQL error status variables fully at block exit (Ashesh Vashi and Dave Page) This is not a problem for PL/pgSQL itself, but the omission could cause the PL/pgSQL Debugger to crash while examining the state of a function.	'ashesh':11 'block':9 'caus':28 'clean':1 'could':27 'crash':33 'dave':14 'debugg':31 'error':4 'examin':35 'exit':10 'fulli':7 'function':40 'omiss':26 'page':15 'pl/pgsql':3,22,30 'problem':20 'state':37 'status':5 'variabl':6 'vashi':12
8	2	13	3862fbefa5c0092aad950d5c63d13611	Retry failed calls to CallNamedPipe() on Windows (Steve Marshall, Magnus) It appears that this function can sometimes fail transiently; we previously treated any failure as a hard error, which could confuse LISTEN / NOTIFY as well as other operations.	'appear':12 'call':3 'callnamedpip':5 'confus':31 'could':30 'error':28 'fail':2,18 'failur':24 'function':15 'hard':27 'listen':32 'magnus':10 'marshal':9 'notifi':33 'oper':38 'previous':21 'retri':1 'sometim':17 'steve':8 'transient':19 'treat':22 'well':35 'window':7
8	2	13	16364a26b80915323dd1cc503f14e851	Add MUST (Mauritius Island Summer Time) to the default list of known timezone abbreviations (Xavier Bugaud)	'abbrevi':14 'add':1 'bugaud':16 'default':9 'island':4 'known':12 'list':10 'mauritius':3 'must':2 'summer':5 'time':6 'timezon':13 'xavier':15
8	2	12	43d54f6f6facad24a74fae2bf1fc594a	Improve handling of URLs in headline() function (Teodor)	'function':7 'handl':2 'headlin':6 'improv':1 'teodor':8 'url':4
8	2	12	b7a30488addd44acfd80b1a32536ed98	Improve handling of overlength headlines in headline() function (Teodor)	'function':8 'handl':2 'headlin':5,7 'improv':1 'overlength':4 'teodor':9
8	2	12	6c4bde05922323122598c20e06c184ff	Prevent possible Assert failure or misconversion if an encoding conversion is created with the wrong conversion function for the specified pair of encodings (Tom, Heikki)	'assert':3 'convers':10,16 'creat':12 'encod':9,23 'failur':4 'function':17 'heikki':25 'misconvers':6 'pair':21 'possibl':2 'prevent':1 'specifi':20 'tom':24 'wrong':15
8	2	12	0f5199ba74761316278655b6f32aa2c0	Fix possible Assert failure if a statement executed in PL/pgSQL is rewritten into another kind of statement, for example if an INSERT is rewritten into an UPDATE (Heikki)	'anoth':14 'assert':3 'exampl':19 'execut':8 'failur':4 'fix':1 'heikki':28 'insert':22 'kind':15 'pl/pgsql':10 'possibl':2 'rewritten':12,24 'statement':7,17 'updat':27
8	2	12	1d4f21ca7dcc18a5d83867bc4edeb15c	Ensure that a snapshot is available to datatype input functions (Tom) This primarily affects domains that are declared with CHECK constraints involving user-defined stable or immutable functions. Such functions typically fail if no snapshot has been set.	'affect':14 'avail':6 'check':20 'constraint':21 'datatyp':8 'declar':18 'defin':25 'domain':15 'ensur':1 'fail':33 'function':10,29,31 'immut':28 'input':9 'involv':22 'primarili':13 'set':39 'snapshot':4,36 'stabl':26 'tom':11 'typic':32 'user':24 'user-defin':23
8	2	12	f75ec54055b09d14b7c7077164513e49	Make it safer for SPI-using functions to be used within datatype I/O; in particular, to be used in domain check constraints (Tom)	'check':22 'constraint':23 'datatyp':13 'domain':21 'function':8 'i/o':14 'make':1 'particular':16 'safer':3 'spi':6 'spi-us':5 'tom':24 'use':7,11,19 'within':12
8	2	12	fba962dfae3687fb56553fbacc8abc05	Fix a problem that made UPDATE RETURNING tableoid return zero instead of the correct OID (Tom)	'correct':14 'fix':1 'instead':11 'made':5 'oid':15 'problem':3 'return':7,9 'tableoid':8 'tom':16 'updat':6 'zero':10
8	2	12	dd4f3d3444521a74ec6d7dde8d21b861	Fix planner misestimation of selectivity when transitive equality is applied to an outer-join clause (Tom) This could result in bad plans for queries like ... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...	'42':37 'a.a1':33,36 'appli':10 'b':31 'b.b1':34 'bad':22 'claus':16 'could':19 'equal':8 'fix':1 'join':15,30 'left':29 'like':26 'misestim':3 'outer':14 'outer-join':13 'plan':23 'planner':2 'queri':25 'result':20 'select':5 'tom':17 'transit':7
8	2	12	626c724f34366a51f1189d9ee636e5db	Improve optimizer's handling of long IN lists (Tom) This change avoids wasting large amounts of time on such lists when constraint exclusion is enabled.	'amount':15 'avoid':12 'chang':11 'constraint':22 'enabl':25 'exclus':23 'handl':4 'improv':1 'larg':14 'list':8,20 'long':6 'optim':2 'time':17 'tom':9 'wast':13
8	2	12	04f77799a591e5fa5c4d572e94f9e065	Ensure that the contents of a holdable cursor don't depend on the contents of TOAST tables (Tom) Previously, large field values in a cursor result might be represented as TOAST pointers, which would fail if the referenced table got dropped before the cursor is read, or if the large value is deleted and then vacuumed away. This cannot happen with an ordinary cursor, but it could with a cursor that is held past its creating transaction.	'away':57 'cannot':59 'content':4,14 'could':67 'creat':76 'cursor':8,25,44,64,70 'delet':53 'depend':11 'drop':41 'ensur':1 'fail':35 'field':21 'got':40 'happen':60 'held':73 'holdabl':7 'larg':20,50 'might':27 'ordinari':63 'past':74 'pointer':32 'previous':19 'read':46 'referenc':38 'repres':29 'result':26 'tabl':17,39 'toast':16,31 'tom':18 'transact':77 'vacuum':56 'valu':22,51 'would':34
8	2	12	e3de541b87f719e0e8b183ab966d5126	Fix memory leak when a set-returning function is terminated without reading its whole result (Tom)	'fix':1 'function':9 'leak':3 'memori':2 'read':13 'result':16 'return':8 'set':7 'set-return':6 'termin':11 'tom':17 'whole':15 'without':12
8	2	12	ea51301813d8da98ac58e5123c64c301	Fix contrib/dblink 's dblink_get_result(text,bool) function (Joe)	'bool':8 'contrib/dblink':2 'dblink':4 'fix':1 'function':9 'get':5 'joe':10 'result':6 'text':7
8	2	12	f1639dd9df9f4c6b7e075aea1344264c	Fix possible garbage output from contrib/sslinfo functions (Tom)	'contrib/sslinfo':6 'fix':1 'function':7 'garbag':3 'output':4 'possibl':2 'tom':8
8	2	12	7dbc05bf9e4f556ca7d7446dd7b76cea	Make all documentation reference pgsql-bugs and/or pgsql-hackers as appropriate, instead of the now-decommissioned pgsql-ports and pgsql-patches mailing lists (Tom)	'and/or':8 'appropri':13 'bug':7 'decommiss':19 'document':3 'hacker':11 'instead':14 'list':28 'mail':27 'make':1 'now-decommiss':17 'patch':26 'pgsql':6,10,21,25 'pgsql-bug':5 'pgsql-hacker':9 'pgsql-patch':24 'pgsql-port':20 'port':22 'refer':4 'tom':29
8	2	12	a137f3d11406ba38e754a4441b9e6752	Update time zone data files to tzdata release 2009a (for Kathmandu and historical DST corrections in Switzerland, Cuba)	'2009a':9 'correct':15 'cuba':18 'data':4 'dst':14 'file':5 'histor':13 'kathmandu':11 'releas':8 'switzerland':17 'time':2 'tzdata':7 'updat':1 'zone':3
8	2	11	3ea6b093f857a02dc014a5619a4fa2ce	Fix GiST index corruption due to marking the wrong index entry dead after a deletion (Teodor) This would result in index searches failing to find rows they should have found. Corrupted indexes can be fixed with REINDEX .	'corrupt':4,31 'dead':12 'delet':15 'due':5 'entri':11 'fail':23 'find':25 'fix':1,35 'found':30 'gist':2 'index':3,10,21,32 'mark':7 'reindex':37 'result':19 'row':26 'search':22 'teodor':16 'would':18 'wrong':9
8	2	11	397c350d8275d5b104e3c065081708a7	Fix backend crash when the client encoding cannot represent a localized error message (Tom) We have addressed similar issues before, but it would still fail if the character has no equivalent message itself couldn't be converted. The fix is to disable localization and send the plain ASCII error message when we detect such a situation.	'address':17 'ascii':48 'backend':2 'cannot':8 'charact':28 'client':6 'convert':37 'couldn':34 'crash':3 'detect':53 'disabl':42 'encod':7 'equival':31 'error':12,49 'fail':25 'fix':1,39 'issu':19 'local':11,43 'messag':13,32,50 'plain':47 'repres':9 'send':45 'similar':18 'situat':56 'still':24 'tom':14 'would':23
8	2	11	a9f7d93fbd56975e91b88bbe9416360c	Fix possible crash when deeply nested functions are invoked from a trigger (Tom)	'crash':3 'deepli':5 'fix':1 'function':7 'invok':9 'nest':6 'possibl':2 'tom':13 'trigger':12
8	2	11	f5b773bd93df79db4993988bd7091bd3	Improve optimization of expression IN ( expression-list ) queries (Tom, per an idea from Robert Haas) Cases in which there are query variables on the right-hand side had been handled less efficiently in 8.2.x and 8.3.x than in prior versions. The fix restores 8.1 behavior for such cases.	'8.1':48 '8.2':36 '8.3':39 'behavior':49 'case':17,52 'effici':34 'express':4,7 'expression-list':6 'fix':46 'haa':16 'hand':28 'handl':32 'idea':13 'improv':1 'less':33 'list':8 'optim':2 'per':11 'prior':43 'queri':9,22 'restor':47 'right':27 'right-hand':26 'robert':15 'side':29 'tom':10 'variabl':23 'version':44 'x':37,40
8	2	11	bfbb7a32dac504c80d0b92929e621400	Fix mis-expansion of rule queries when a sub- SELECT appears in a function call in FROM , a multi-row VALUES list, or a RETURNING list (Tom) The usual symptom of this problem is an unrecognized node type error.	'appear':12 'call':16 'error':41 'expans':4 'fix':1 'function':15 'list':24,28 'mis':3 'mis-expans':2 'multi':21 'multi-row':20 'node':39 'problem':35 'queri':7 'return':27 'row':22 'rule':6 'select':11 'sub':10 'symptom':32 'tom':29 'type':40 'unrecogn':38 'usual':31 'valu':23
8	2	11	06f6ad3f2a5341ef3bdc6533ac7059c1	Fix memory leak during rescan of a hashed aggregation plan (Neil)	'aggreg':9 'fix':1 'hash':8 'leak':3 'memori':2 'neil':11 'plan':10 'rescan':5
8	2	11	5331107353ccbe0920d333113a7771a2	Ensure an error is reported when a newly-defined PL/pgSQL trigger function is invoked as a normal function (Tom)	'defin':10 'ensur':1 'error':3 'function':13,19 'invok':15 'newli':9 'newly-defin':8 'normal':18 'pl/pgsql':11 'report':5 'tom':20 'trigger':12
8	2	11	168bafae2d57952f1862ad2dc6fe3812	Prevent possible collision of relfilenode numbers when moving a table to another tablespace with ALTER SET TABLESPACE (Heikki) The command tried to re-use the existing filename, instead of picking one that is known unused in the destination directory.	'alter':15 'anoth':12 'collis':3 'command':20 'destin':39 'directori':40 'exist':27 'filenam':28 'heikki':18 'instead':29 'known':35 'move':8 'number':6 'one':32 'pick':31 'possibl':2 'prevent':1 're':24 're-us':23 'relfilenod':5 'set':16 'tabl':10 'tablespac':13,17 'tri':21 'unus':36 'use':25
8	2	11	a5725c9b8bbcbc0c04c9614744987fb8	Fix incorrect tsearch2 headline generation when single query item matches first word of text (Sushant Sinha)	'first':11 'fix':1 'generat':5 'headlin':4 'incorrect':2 'item':9 'match':10 'queri':8 'singl':7 'sinha':16 'sushant':15 'text':14 'tsearch2':3 'word':12
8	2	11	46ec7f88abf6be219a4abca766871823	Fix improper display of fractional seconds in interval values when using a non-ISO datestyle in an --enable-integer-datetimes build (Ron Mayer)	'build':23 'datestyl':16 'datetim':22 'display':3 'enabl':20 'enable-integer-datetim':19 'fix':1 'fraction':5 'improp':2 'integ':21 'interv':8 'iso':15 'mayer':25 'non':14 'non-iso':13 'ron':24 'second':6 'use':11 'valu':9
8	2	11	c706c337d807900d535ad406ff966b86	Ensure SPI_getvalue and SPI_getbinval behave correctly when the passed tuple and tuple descriptor have different numbers of columns (Tom) This situation is normal when a table has had columns added or removed, but these two functions didn't handle it properly. The only likely consequence is an incorrect error indication.	'ad':32 'behav':7 'column':20,31 'consequ':47 'correct':8 'descriptor':15 'didn':39 'differ':17 'ensur':1 'error':51 'function':38 'getbinv':6 'getvalu':3 'handl':41 'incorrect':50 'indic':52 'like':46 'normal':25 'number':18 'pass':11 'proper':43 'remov':34 'situat':23 'spi':2,5 'tabl':28 'tom':21 'tupl':12,14 'two':37
8	2	11	2b0b91b554c653a6d5838d497b0bef75	Fix ecpg 's parsing of CREATE ROLE (Michael)	'creat':6 'ecpg':2 'fix':1 'michael':8 'pars':4 'role':7
8	2	11	3dbfb8a024c3fd8d3d1d95d750222bf3	Fix recent breakage of pg_ctl restart (Tom)	'breakag':3 'ctl':6 'fix':1 'pg':5 'recent':2 'restart':7 'tom':8
8	2	11	f4e957db57481e4af92681ecf9c248f9	Ensure pg_control is opened in binary mode (Itagaki Takahiro) pg_controldata and pg_resetxlog did this incorrectly, and so could fail on Windows.	'binari':7 'control':3 'controldata':12 'could':21 'ensur':1 'fail':22 'incorrect':18 'itagaki':9 'mode':8 'open':5 'pg':2,11,14 'resetxlog':15 'takahiro':10 'window':24
8	2	7	22e2b118bc322fbc702a325f9ea14c4b	Fix rare crash when an error occurs during a query using a hash index (Heikki)	'crash':3 'error':6 'fix':1 'hash':13 'heikki':15 'index':14 'occur':7 'queri':10 'rare':2 'use':11
8	2	11	9bf87483bd69d58d2b6e0cd2934c66ef	Update time zone data files to tzdata release 2008i (for DST law changes in Argentina, Brazil, Mauritius, Syria)	'2008i':9 'argentina':15 'brazil':16 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':17 'releas':8 'syria':18 'time':2 'tzdata':7 'updat':1 'zone':3
8	2	10	a870b3af96c40485243c85b420beb46f	Fix bug in btree WAL recovery code (Heikki) Recovery failed if the WAL ended partway through a page split operation.	'btree':4 'bug':2 'code':7 'end':14 'fail':10 'fix':1 'heikki':8 'oper':20 'page':18 'partway':15 'recoveri':6,9 'split':19 'wal':5,13
8	2	10	62ad63b32ee714a7aefc9b67a84f098d	Fix potential miscalculation of datfrozenxid (Alvaro) This error may explain some recent reports of failure to remove old pg_clog data.	'alvaro':6 'clog':20 'data':21 'datfrozenxid':5 'error':8 'explain':10 'failur':15 'fix':1 'may':9 'miscalcul':3 'old':18 'pg':19 'potenti':2 'recent':12 'remov':17 'report':13
8	2	10	ac11de008a8e58a5d1dbb3b637bdfedf	Widen local lock counters from 32 to 64 bits (Tom) This responds to reports that the counters could overflow in sufficiently long transactions, leading to unexpected lock is already held errors.	'32':6 '64':8 'alreadi':29 'bit':9 'could':18 'counter':4,17 'error':31 'held':30 'lead':24 'local':2 'lock':3,27 'long':22 'overflow':19 'report':14 'respond':12 'suffici':21 'tom':10 'transact':23 'unexpect':26 'widen':1
8	2	10	1eefaf6bdf649340ef623af81f6c2113	Fix possible duplicate output of tuples during a GiST index scan (Teodor)	'duplic':3 'fix':1 'gist':9 'index':10 'output':4 'possibl':2 'scan':11 'teodor':12 'tupl':6
8	2	10	2c2d850c7276b767a5f8f617eb8b99e6	Fix missed permissions checks when a view contains a simple UNION ALL construct (Heikki) Permissions for the referenced tables were checked properly, but not permissions for the view itself.	'check':4,21 'construct':13 'contain':8 'fix':1 'heikki':14 'miss':2 'permiss':3,15,25 'proper':22 'referenc':18 'simpl':10 'tabl':19 'union':11 'view':7,28
8	2	10	597761c6603cf784d2292b20f0f4062b	Add checks in executor startup to ensure that the tuples produced by an INSERT or UPDATE will match the target table's current rowtype (Tom) ALTER COLUMN TYPE , followed by re-use of a previously cached plan, could produce this type of situation. The check protects against data corruption and/or crashes that could ensue.	'add':1 'alter':26 'and/or':51 'cach':37 'check':2,46 'column':27 'corrupt':50 'could':39,54 'crash':52 'current':23 'data':49 'ensu':55 'ensur':7 'executor':4 'follow':29 'insert':14 'match':18 'plan':38 'previous':36 'produc':11,40 'protect':47 're':32 're-us':31 'rowtyp':24 'situat':44 'startup':5 'tabl':21 'target':20 'tom':25 'tupl':10 'type':28,42 'updat':16 'use':33
8	2	10	61bfec266a08abfbe88b196798381ce1	Fix possible repeated drops during DROP OWNED (Tom) This would typically result in strange errors such as cache lookup failed for relation NNN .	'cach':18 'drop':4,6 'error':15 'fail':20 'fix':1 'lookup':19 'nnn':23 'own':7 'possibl':2 'relat':22 'repeat':3 'result':12 'strang':14 'tom':8 'typic':11 'would':10
8	2	9	516d6d43e350ee3813694a8cc9ef0c84	Make ALTER AGGREGATE ... OWNER TO update pg_shdepend (Tom) This oversight could lead to problems if the aggregate was later involved in a DROP OWNED or REASSIGN OWNED operation.	'aggreg':3,18 'alter':2 'could':12 'drop':24 'involv':21 'later':20 'lead':13 'make':1 'oper':29 'oversight':11 'own':25,28 'owner':4 'pg':7 'problem':15 'reassign':27 'shdepend':8 'tom':9 'updat':6
8	2	10	15cd6b1a036685dfb19f2f46af04db6d	Fix AT TIME ZONE to first try to interpret its timezone argument as a timezone abbreviation, and only try it as a full timezone name if that fails, rather than the other way around as formerly (Tom) The timestamp input functions have always resolved ambiguous zone names in this order. Making AT TIME ZONE do so as well improves consistency, and fixes a compatibility bug introduced in 8.1: in ambiguous cases we now behave the same as 8.0 and before did, since in the older versions AT TIME ZONE accepted only abbreviations.	'8.0':78 '8.1':68 'abbrevi':16,92 'accept':90 'alway':43 'ambigu':45,70 'argument':12 'around':34 'behav':74 'bug':65 'case':71 'compat':64 'consist':60 'fail':28 'first':6 'fix':1,62 'former':36 'full':23 'function':41 'improv':59 'input':40 'interpret':9 'introduc':66 'make':51 'name':25,47 'older':85 'order':50 'rather':29 'resolv':44 'sinc':82 'time':3,53,88 'timestamp':39 'timezon':11,15,24 'tom':37 'tri':7,19 'version':86 'way':33 'well':58 'zone':4,46,54,89
8	2	10	2a23a4ad2dad26a347325d454794dd21	Fix datetime input functions to correctly detect integer overflow when running on a 64-bit platform (Tom)	'64':14 'bit':15 'correct':6 'datetim':2 'detect':7 'fix':1 'function':4 'input':3 'integ':8 'overflow':9 'platform':16 'run':11 'tom':17
8	2	10	e0067fe1146c824093c6bed3a25621ed	Prevent integer overflows during units conversion when displaying a configuration parameter that has units (Tom)	'configur':10 'convers':6 'display':8 'integ':2 'overflow':3 'paramet':11 'prevent':1 'tom':15 'unit':5,14
8	2	10	29a9d16ebb0879a3ca692b8fd6f2b3c5	Improve performance of writing very long log messages to syslog (Tom)	'improv':1 'log':7 'long':6 'messag':8 'perform':2 'syslog':10 'tom':11 'write':4
8	2	10	ec99d9572c8443ea46cd3ee3fdb0cf90	Allow spaces in the suffix part of an LDAP URL in pg_hba.conf (Tom)	'allow':1 'hba.conf':13 'ldap':9 'part':6 'pg':12 'space':2 'suffix':5 'tom':14 'url':10
8	2	10	47d3340fd4ac365b13ef28eab8d4437a	Fix bug in backwards scanning of a cursor on a SELECT DISTINCT ON query (Tom)	'backward':4 'bug':2 'cursor':8 'distinct':12 'fix':1 'queri':14 'scan':5 'select':11 'tom':15
8	2	10	e361faf05adc1b4672f4100fd8b9bbd9	Fix planner bug with nested sub-select expressions (Tom) If the outer sub-select has no direct dependency on the parent query, but the inner one does, the outer value might not get recalculated for new parent query rows.	'bug':3 'depend':20 'direct':19 'express':9 'fix':1 'get':35 'inner':27 'might':33 'nest':5 'new':38 'one':28 'outer':13,31 'parent':23,39 'planner':2 'queri':24,40 'recalcul':36 'row':41 'select':8,16 'sub':7,15 'sub-select':6,14 'tom':10 'valu':32
8	2	10	759db704b2320d4bc4bccae74a052ec0	Fix planner to estimate that GROUP BY expressions yielding boolean results always result in two groups, regardless of the expressions' contents (Tom) This is very substantially more accurate than the regular GROUP BY estimate for certain boolean tests like col IS NULL .	'accur':28 'alway':12 'boolean':10,37 'certain':36 'col':40 'content':21 'estim':4,34 'express':8,20 'fix':1 'group':6,16,32 'like':39 'null':42 'planner':2 'regardless':17 'regular':31 'result':11,13 'substanti':26 'test':38 'tom':22 'two':15 'yield':9
8	2	10	57e2400239d22c9b7c72e92d82957b5c	Fix PL/PgSQL to not fail when a FOR loop's target variable is a record containing composite-type fields (Tom)	'composit':18 'composite-typ':17 'contain':16 'fail':5 'field':20 'fix':1 'loop':9 'pl/pgsql':2 'record':15 'target':11 'tom':21 'type':19 'variabl':12
8	2	10	70fc9a4f185e818e99c7bfe937165c65	Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful about the encoding of data sent to or from Tcl (Tom)	'8.5':8 'behav':4 'care':13 'correct':5 'data':18 'encod':16 'fix':1 'pl/tcl':2 'sent':19 'tcl':7,23 'tom':24
8	2	10	712851d53f21871e234bb76944f0739f	On Windows, work around a Microsoft bug by preventing libpq from trying to send more than 64kB per system call (Magnus)	'64kb':17 'around':4 'bug':7 'call':20 'libpq':10 'magnus':21 'microsoft':6 'per':18 'prevent':9 'send':14 'system':19 'tri':12 'window':2 'work':3
8	2	10	af452e00b3eafc6294a31f6b5d3d0b4d	Improve pg_dump and pg_restore 's error reporting after failure to send a SQL command (Tom)	'command':16 'dump':3 'error':8 'failur':11 'improv':1 'pg':2,5 'report':9 'restor':6 'send':13 'sql':15 'tom':17
8	2	10	1277360c4443f843fc81df97fed6bad1	Fix pg_ctl to properly preserve postmaster command-line arguments across a restart (Bruce)	'across':12 'argument':11 'bruce':15 'command':9 'command-lin':8 'ctl':3 'fix':1 'line':10 'pg':2 'postmast':7 'preserv':6 'proper':5 'restart':14
8	2	10	ec45c869c77e0c74a72c406fa0d7e4e0	Update time zone data files to tzdata release 2008f (for DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco, Pakistan, Palestine, and Paraguay)	'2008f':9 'argentina':15 'bahama':16 'brazil':17 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':18 'morocco':19 'pakistan':20 'palestin':21 'paraguay':23 'releas':8 'time':2 'tzdata':7 'updat':1 'zone':3
8	2	9	db798581b8b44ea9d6cab7fea4a6bc46	Make pg_get_ruledef() parenthesize negative constants (Tom) Before this fix, a negative constant in a view or rule might be dumped as, say, -42::integer , which is subtly incorrect: it should be (-42)::integer due to operator precedence rules. Usually this would make little difference, but it could interact with another recent patch to cause PostgreSQL to reject what had been a valid SELECT DISTINCT view query. Since this could result in pg_dump output failing to reload, it is being treated as a high-priority fix. The only released versions in which dump output is actually incorrect are 8.3.1 and 8.2.7.	'-42':25,34 '8.2.7':104 '8.3.1':102 'actual':99 'anoth':52 'caus':56 'constant':7,14 'could':49,71 'differ':46 'distinct':66 'due':36 'dump':22,75,96 'fail':77 'fix':11,89 'get':3 'high':87 'high-prior':86 'incorrect':30,100 'integ':26,35 'interact':50 'littl':45 'make':1,44 'might':20 'negat':6,13 'oper':38 'output':76,97 'parenthes':5 'patch':54 'pg':2,74 'postgresql':57 'preced':39 'prioriti':88 'queri':68 'recent':53 'reject':59 'releas':92 'reload':79 'result':72 'rule':19,40 'ruledef':4 'say':24 'select':65 'sinc':69 'subt':29 'tom':8 'treat':83 'usual':41 'valid':64 'version':93 'view':17,67 'would':43
8	2	6	5b366d0583666ec521ef20ee5b462394	Fix planner failure in some cases of WHERE false AND var IN (SELECT ...) (Tom)	'case':6 'failur':3 'fals':9 'fix':1 'planner':2 'select':13 'tom':14 'var':11
8	2	8	9612448353477970b11f4d7d145bf0b3	Fix ERRORDATA_STACK_SIZE exceeded crash that occurred on Windows when using UTF-8 database encoding and a different client encoding (Tom)	'-8':14 'client':20 'crash':6 'databas':15 'differ':19 'encod':16,21 'errordata':2 'exceed':5 'fix':1 'occur':8 'size':4 'stack':3 'tom':22 'use':12 'utf':13 'window':10
8	2	8	fd658d336c599356fbaa956aedd2e10c	Fix ALTER TABLE ADD COLUMN ... PRIMARY KEY so that the new column is correctly checked to see if it's been initialized to all non-nulls (Brendan Jurd) Previous versions neglected to check this requirement at all.	'add':4 'alter':2 'brendan':28 'check':15,34 'column':5,12 'correct':14 'fix':1 'initi':22 'jurd':29 'key':7 'neglect':32 'new':11 'non':26 'non-nul':25 'null':27 'previous':30 'primari':6 'requir':36 'see':17 'tabl':3 'version':31
8	2	8	e8ee123b907c8cf7dd2057da017d9806	Fix possible CREATE TABLE failure when inheriting the same constraint from multiple parent relations that inherited that constraint from a common ancestor (Tom)	'ancestor':22 'common':21 'constraint':10,18 'creat':3 'failur':5 'fix':1 'inherit':7,16 'multipl':12 'parent':13 'possibl':2 'relat':14 'tabl':4 'tom':23
8	2	8	9aeeb40c15dcc76385c58015678f866f	Fix pg_get_ruledef() to show the alias, if any, attached to the target table of an UPDATE or DELETE (Tom)	'alia':8 'attach':11 'delet':20 'fix':1 'get':3 'pg':2 'ruledef':4 'show':6 'tabl':15 'target':14 'tom':21 'updat':18
8	2	8	91113ec105cb983bbcdb111472cc3219	Fix GIN bug that could result in a too many LWLocks taken failure (Teodor)	'bug':3 'could':5 'failur':13 'fix':1 'gin':2 'lwlock':11 'mani':10 'result':6 'taken':12 'teodor':14
8	2	8	361a55c898ca0cea507d61af8ea580ca	Avoid possible crash when decompressing corrupted data (Zdenek Kotala)	'avoid':1 'corrupt':6 'crash':3 'data':7 'decompress':5 'kotala':9 'possibl':2 'zdenek':8
8	2	8	6be8ad928674bd26c2c197ec28d1c0e8	Repair two places where SIGTERM exit of a backend could leave corrupted state in shared memory (Tom) Neither case is very important if SIGTERM is used to shut down the whole database cluster together, but there was a problem if someone tried to SIGTERM individual backends.	'backend':9,46 'case':19 'cluster':33 'corrupt':12 'could':10 'databas':32 'exit':6 'import':22 'individu':45 'leav':11 'memori':16 'neither':18 'place':3 'problem':39 'repair':1 'share':15 'shut':28 'sigterm':5,24,44 'someon':41 'state':13 'togeth':34 'tom':17 'tri':42 'two':2 'use':26 'whole':31
8	2	8	56c8907c422c955208a03b738693a4a2	Fix conversions between ISO-8859-5 and other encodings to handle Cyrillic Yo characters ( e and E with two dots) (Sergey Burladyan)	'-5':6 '-8859':5 'burladyan':22 'charact':14 'convers':2 'cyril':12 'dot':20 'e':15,17 'encod':9 'fix':1 'handl':11 'iso':4 'sergey':21 'two':19 'yo':13
8	2	7	f32fbc3e7f9d6e90aa211c284737fd39	Fix memory leaks in certain usages of set-returning functions (Neil)	'certain':5 'fix':1 'function':11 'leak':3 'memori':2 'neil':12 'return':10 'set':9 'set-return':8 'usag':6
8	2	7	b8bc3d8f2054b5621751e05d0543026b	Fix input of datetime values for February 29 in years BC (Tom) The former coding was mistaken about which years were leap years.	'29':8 'bc':11 'code':15 'datetim':4 'februari':7 'fix':1 'former':14 'input':2 'leap':22 'mistaken':17 'tom':12 'valu':5 'year':10,20,23
8	2	8	a69bd8c3c5149e3a2294c0d8532ce1ba	Fix several datatype input functions, notably array_in() , that were allowing unused bytes in their results to contain uninitialized, unpredictable values (Tom) This could lead to failures in which two apparently identical literal values were not seen as equal, resulting in the parser complaining about unmatched ORDER BY and DISTINCT expressions.	'allow':11 'appar':31 'array':7 'byte':13 'complain':44 'contain':18 'could':24 'datatyp':3 'distinct':50 'equal':39 'express':51 'failur':27 'fix':1 'function':5 'ident':32 'input':4 'lead':25 'liter':33 'notabl':6 'order':47 'parser':43 'result':16,40 'seen':37 'sever':2 'tom':22 'two':30 'uniniti':19 'unmatch':46 'unpredict':20 'unus':12 'valu':21,34
8	2	8	e433bfce0c4b7a064ae159dec508499a	Fix a corner case in regular-expression substring matching ( substring( string from pattern ) ) (Tom) The problem occurs when there is a match to the pattern overall but the user has specified a parenthesized subexpression and that subexpression hasn't got a match. An example is substring('foo' from 'foo(bar)?') . This should return NULL, since (bar) isn't matched, but it was mistakenly returning the whole-pattern match instead (ie, foo ).	'bar':51,57 'case':4 'corner':3 'exampl':45 'express':8 'fix':1 'foo':48,50,73 'got':41 'hasn':39 'ie':72 'instead':71 'isn':58 'match':10,23,43,60,70 'mistaken':64 'null':55 'occur':18 'overal':27 'parenthes':34 'pattern':14,26,69 'problem':17 'regular':7 'regular-express':6 'return':54,65 'sinc':56 'specifi':32 'string':12 'subexpress':35,38 'substr':9,11,47 'tom':15 'user':30 'whole':68 'whole-pattern':67
8	2	8	1192905e08aea7bd5b3dc5d872bc640e	Update time zone data files to tzdata release 2008c (for DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and Argentina/San_Luis)	'2008c':9 'argentina/san_luis':22 'chang':13 'choibalsan':17 'cuba':20 'data':4 'dst':11 'file':5 'iraq':16 'law':12 'morocco':15 'pakistan':18 'releas':8 'syria':19 'time':2 'tzdata':7 'updat':1 'zone':3
8	2	8	af9ed9daa5cda7b3ea3e2630d86c6096	Fix incorrect result from ecpg 's PGTYPEStimestamp_sub() function (Michael)	'ecpg':5 'fix':1 'function':9 'incorrect':2 'michael':10 'pgtypestimestamp':7 'result':3 'sub':8
8	2	8	e32c3c303f010665e8f514a95b80bad9	Fix broken GiST comparison function for contrib/tsearch2 's tsquery type (Teodor)	'broken':2 'comparison':4 'contrib/tsearch2':7 'fix':1 'function':5 'gist':3 'teodor':11 'tsqueri':9 'type':10
8	2	8	7e2971b13f32d4fb40b5007c18193efd	Fix possible crashes in contrib/cube functions (Tom)	'contrib/cube':5 'crash':3 'fix':1 'function':6 'possibl':2 'tom':7
8	2	8	85618920178e644a6e9b0da529179d3f	Fix core dump in contrib/xml2 's xpath_table() function when the input query returns a NULL value (Tom)	'contrib/xml2':5 'core':2 'dump':3 'fix':1 'function':9 'input':12 'null':16 'queri':13 'return':14 'tabl':8 'tom':18 'valu':17 'xpath':7
8	2	8	7058f36c959dfa913985f5108733a09d	Fix contrib/xml2 's makefile to not override CFLAGS (Tom)	'cflag':8 'contrib/xml2':2 'fix':1 'makefil':4 'overrid':7 'tom':9
8	2	8	baaf4d8aa95adf9c0d22e846d2965e96	Fix DatumGetBool macro to not fail with gcc 4.3 (Tom) This problem affects old style (V0) C functions that return boolean. The fix is already in 8.3, but the need to back-patch it was not realized at the time.	'4.3':9 '8.3':27 'affect':13 'alreadi':25 'back':33 'back-patch':32 'boolean':21 'c':17 'datumgetbool':2 'fail':6 'fix':1,23 'function':18 'gcc':8 'macro':3 'need':30 'old':14 'patch':34 'problem':12 'realiz':38 'return':20 'style':15 'time':41 'tom':10 'v0':16
8	2	7	13db9430b5ac323f87e41fcd174d0d8a	Fix character string comparison for Windows locales that consider different character combinations as equal (Tom) This fix applies only on Windows and only when using UTF-8 database encoding. The same fix was made for all other cases over two years ago, but Windows with UTF-8 uses a separate code path that was not updated. If you are using a locale that considers some non-identical strings as equal, you may need to REINDEX to fix existing indexes on textual columns.	'-8':27,47 'ago':42 'appli':18 'case':38 'charact':2,11 'code':51 'column':83 'combin':12 'comparison':4 'consid':9,64 'databas':28 'differ':10 'encod':29 'equal':14,71 'exist':79 'fix':1,17,32,78 'ident':68 'index':80 'local':7,62 'made':34 'may':73 'need':74 'non':67 'non-ident':66 'path':52 'reindex':76 'separ':50 'string':3,69 'textual':82 'tom':15 'two':40 'updat':56 'use':25,48,60 'utf':26,46 'window':6,21,44 'year':41
8	2	7	2d44ea506696c33313b923632318c6fe	Repair potential deadlock between concurrent VACUUM FULL operations on different system catalogs (Tom)	'catalog':12 'concurr':5 'deadlock':3 'differ':10 'full':7 'oper':8 'potenti':2 'repair':1 'system':11 'tom':13 'vacuum':6
8	2	7	d16a4a28282d8076c9daaad3726e18a4	Fix longstanding LISTEN / NOTIFY race condition (Tom) In rare cases a session that had just executed a LISTEN might not get a notification, even though one would be expected because the concurrent transaction executing NOTIFY was observed to commit later. A side effect of the fix is that a transaction that has executed a not-yet-committed LISTEN command will not see any row in pg_listener for the LISTEN , should it choose to look; formerly it would have. This behavior was never documented one way or the other, but it is possible that some applications depend on the old behavior.	'applic':97 'behavior':82,102 'case':10 'choos':74 'command':60 'commit':39,58 'concurr':32 'condit':6 'depend':98 'document':85 'effect':43 'even':24 'execut':16,34,53 'expect':29 'fix':1,46 'former':77 'get':21 'later':40 'listen':3,18,59,68,71 'longstand':2 'look':76 'might':19 'never':84 'not-yet-commit':55 'notif':23 'notifi':4,35 'observ':37 'old':101 'one':26,86 'pg':67 'possibl':94 'race':5 'rare':9 'row':65 'see':63 'session':12 'side':42 'though':25 'tom':7 'transact':33,50 'way':87 'would':27,79 'yet':57
8	2	7	7f9a170ddf48fa8a56a169fcbeb5a916	Disallow LISTEN and UNLISTEN within a prepared transaction (Tom) This was formerly allowed but trying to do it had various unpleasant consequences, notably that the originating backend could not exit as long as an UNLISTEN remained uncommitted.	'allow':13 'backend':27 'consequ':22 'could':28 'disallow':1 'exit':30 'former':12 'listen':2 'long':32 'notabl':23 'origin':26 'prepar':7 'remain':36 'tom':9 'transact':8 'tri':15 'uncommit':37 'unlisten':4,35 'unpleas':21 'various':20 'within':5
8	2	7	b75b4c9f5ff42832d2b3081d0215faeb	Disallow dropping a temporary table within a prepared transaction (Heikki) This was correctly disallowed by 8.1, but the check was inadvertently broken in 8.2.	'8.1':16 '8.2':24 'broken':22 'check':19 'correct':13 'disallow':1,14 'drop':2 'heikki':10 'inadvert':21 'prepar':8 'tabl':5 'temporari':4 'transact':9 'within':6
8	2	7	e59c41c51da3f8b4fbeb52e7954be3ef	Ensure pg_stat_activity . waiting flag is cleared when a lock wait is aborted (Tom)	'abort':14 'activ':4 'clear':8 'ensur':1 'flag':6 'lock':11 'pg':2 'stat':3 'tom':15 'wait':5,12
8	2	7	85f2e7b894cedcfda89e8d6f10efb7c4	Fix handling of process permissions on Windows Vista (Dave, Magnus) In particular, this fix allows starting the server as the Administrator user.	'administr':21 'allow':15 'dave':9 'fix':1,14 'handl':2 'magnus':10 'particular':12 'permiss':5 'process':4 'server':18 'start':16 'user':22 'vista':8 'window':7
8	2	7	e2cc663421096be5d49a548f233e220d	Update time zone data files to tzdata release 2008a (in particular, recent Chile changes); adjust timezone abbreviation VET (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)	'-4':23,27 '00':28 '2008a':9 '30':24 'abbrevi':17 'adjust':15 'chang':14 'chile':13 'data':4 'file':5 'mean':21 'particular':11 'recent':12 'releas':8 'time':2 'timezon':16 'tom':29 'tzdata':7 'updat':1 'utc':22,26 'venezuela':19 'vet':18 'zone':3
8	2	7	b29a1d221ce8a748eb7df87b6ea5daad	Fix pg_ctl to correctly extract the postmaster's port number from command-line options (Itagaki Takahiro, Tom) Previously, pg_ctl start -w could try to contact the postmaster on the wrong port, leading to bogus reports of startup failure.	'bogus':37 'command':14 'command-lin':13 'contact':28 'correct':5 'could':25 'ctl':3,22 'extract':6 'failur':41 'fix':1 'itagaki':17 'lead':35 'line':15 'number':11 'option':16 'pg':2,21 'port':10,34 'postmast':8,30 'previous':20 'report':38 'start':23 'startup':40 'takahiro':18 'tom':19 'tri':26 'w':24 'wrong':33
8	2	7	63140e0cb402e6a602586b52d1374f77	Use -fwrapv to defend against possible misoptimization in recent gcc versions (Tom) This is known to be necessary when building PostgreSQL with gcc 4.3 or later.	'4.3':24 'build':20 'defend':4 'fwrapv':2 'gcc':10,23 'known':15 'later':26 'misoptim':7 'necessari':18 'possibl':6 'postgresql':21 'recent':9 'tom':12 'use':1 'version':11
8	2	7	ec91c8145c3399d731f98a52a21f66c5	Correctly enforce statement_timeout values longer than INT_MAX microseconds (about 35 minutes) (Tom) This bug affects only builds with --enable-integer-datetimes .	'35':12 'affect':17 'bug':16 'build':19 'correct':1 'datetim':24 'enabl':22 'enable-integer-datetim':21 'enforc':2 'int':8 'integ':23 'longer':6 'max':9 'microsecond':10 'minut':13 'statement':3 'timeout':4 'tom':14 'valu':5
8	2	7	d7e9e37a0f9ba70008aa0068a48fc187	Fix unexpected PARAM_SUBLINK ID planner error when constant-folding simplifies a sub-select (Tom)	'constant':10 'constant-fold':9 'error':7 'fix':1 'fold':11 'id':5 'param':3 'planner':6 'select':16 'simplifi':12 'sub':15 'sub-select':14 'sublink':4 'tom':17 'unexpect':2
8	3	6	e2b922d13d0ba92689629ff0fae6fb01	Support running as a service on Windows 7 beta (Dave and Magnus)	'7':8 'beta':9 'dave':10 'magnus':12 'run':2 'servic':5 'support':1 'window':7
8	2	7	518b0c50952b630af28ed502b50c2240	Fix logical errors in constraint-exclusion handling of IS NULL and NOT expressions (Tom) The planner would sometimes exclude partitions that should not have been excluded because of the possibility of NULL results.	'constraint':6 'constraint-exclus':5 'error':3 'exclud':20,27 'exclus':7 'express':14 'fix':1 'handl':8 'logic':2 'null':11,33 'partit':21 'planner':17 'possibl':31 'result':34 'sometim':19 'tom':15 'would':18
8	2	7	56be5dee264e196bdc947bff0a201d04	Fix another cause of failed to build any N-way joins planner errors (Tom) This could happen in cases where a clauseless join needed to be forced before a join clause could be exploited.	'anoth':2 'build':7 'case':20 'caus':3 'claus':32 'clauseless':23 'could':17,33 'error':14 'exploit':35 'fail':5 'fix':1 'forc':28 'happen':18 'join':12,24,31 'n':10 'n-way':9 'need':25 'planner':13 'tom':15 'way':11
8	2	7	0d4c66bf95d255149c1f1b982dfd8173	Fix incorrect constant propagation in outer-join planning (Tom) The planner could sometimes incorrectly conclude that a variable could be constrained to be equal to a constant, leading to wrong query results.	'conclud':16 'constant':3,28 'constrain':22 'could':13,20 'equal':25 'fix':1 'incorrect':2,15 'join':8 'lead':29 'outer':7 'outer-join':6 'plan':9 'planner':12 'propag':4 'queri':32 'result':33 'sometim':14 'tom':10 'variabl':19 'wrong':31
8	2	7	b22d4f809d56c1061886c50f09a4f512	Fix display of constant expressions in ORDER BY and GROUP BY (Tom) An explictly casted constant would be shown incorrectly. This could for example lead to corruption of a view definition during dump and reload.	'cast':15 'constant':4,16 'corrupt':27 'could':22 'definit':31 'display':2 'dump':33 'exampl':24 'explict':14 'express':5 'fix':1 'group':10 'incorrect':20 'lead':25 'order':7 'reload':35 'shown':19 'tom':12 'view':30 'would':17
8	2	7	fa3c9c91f879f3c15c4c347afe18ab20	Fix libpq to handle NOTICE messages correctly during COPY OUT (Tom) This failure has only been observed to occur when a user-defined datatype's output routine issues a NOTICE, but there is no guarantee it couldn't happen due to other causes.	'caus':44 'copi':9 'correct':7 'couldn':38 'datatyp':25 'defin':24 'due':41 'failur':13 'fix':1 'guarante':36 'handl':4 'happen':40 'issu':29 'libpq':2 'messag':6 'notic':5,31 'observ':17 'occur':19 'output':27 'routin':28 'tom':11 'user':23 'user-defin':22
8	2	6	c4b6b648c757bf7b40c847509e1b8633	Prevent functions in indexes from executing with the privileges of the user running VACUUM , ANALYZE , etc (Tom) Functions used in index expressions and partial-index predicates are evaluated whenever a new table entry is made. It has long been understood that this poses a risk of trojan-horse code execution if one modifies a table owned by an untrustworthy user. (Note that triggers, defaults, check constraints, etc. pose the same type of risk.) But functions in indexes pose extra danger because they will be executed by routine maintenance operations such as VACUUM FULL , which are commonly performed automatically under a superuser account. For example, a nefarious user can execute code with superuser privileges by setting up a trojan-horse index definition and waiting for the next routine vacuum. The fix arranges for standard maintenance operations (including VACUUM , ANALYZE , REINDEX , and CLUSTER ) to execute as the table owner rather than the calling user, using the same privilege-switching mechanism already used for SECURITY DEFINER functions. To prevent bypassing this security measure, execution of SET SESSION AUTHORIZATION and SET ROLE is now forbidden within a SECURITY DEFINER context. (CVE-2007-6600)	'-2007':192 '-6600':193 'account':104 'alreadi':163 'analyz':15,141 'arrang':134 'author':179 'automat':100 'bypass':171 'call':154 'check':67 'cluster':144 'code':51,112 'common':98 'constraint':68 'context':190 'cve':191 'danger':82 'default':66 'defin':167,189 'definit':124 'entri':34 'etc':16,69 'evalu':29 'exampl':106 'execut':6,52,87,111,146,175 'express':22 'extra':81 'fix':133 'forbidden':185 'full':95 'function':2,18,77,168 'hors':50,122 'includ':139 'index':4,21,26,79,123 'long':39 'made':36 'mainten':90,137 'measur':174 'mechan':162 'modifi':55 'nefari':108 'new':32 'next':129 'note':63 'one':54 'oper':91,138 'own':58 'owner':150 'partial':25 'partial-index':24 'perform':99 'pose':44,70,80 'predic':27 'prevent':1,170 'privileg':9,115,160 'privilege-switch':159 'rather':151 'reindex':142 'risk':46,75 'role':182 'routin':89,130 'run':13 'secur':166,173,188 'session':178 'set':117,177,181 'standard':136 'superus':103,114 'switch':161 'tabl':33,57,149 'tom':17 'trigger':65 'trojan':49,121 'trojan-hors':48,120 'type':73 'understood':41 'untrustworthi':61 'use':19,156,164 'user':12,62,109,155 'vacuum':14,94,131,140 'wait':126 'whenev':30 'within':186
8	2	6	98ed18b50bd68b97e2d1308c7843b7a5	Fix libpq crash when PGPASSFILE refers to a file that is not a plain file (Martin Pitt)	'crash':3 'file':9,15 'fix':1 'libpq':2 'martin':16 'pgpassfil':5 'pitt':17 'plain':14 'refer':6
8	2	6	917c339bfd51ff2af60b9e572987a3cf	ecpg parser fixes (Michael)	'ecpg':1 'fix':3 'michael':4 'parser':2
8	2	6	8ae0148a5caea8b8cd3344cee4393031	Repair assorted bugs in the regular-expression package (Tom, Will Drewry) Suitably crafted regular-expression patterns could cause crashes, infinite or near-infinite looping, and/or massive memory consumption, all of which pose denial-of-service hazards for applications that accept regex search patterns from untrustworthy sources. (CVE-2007-4769, CVE-2007-4772, CVE-2007-6067)	'-2007':52,55,58 '-4769':53 '-4772':56 '-6067':59 'accept':44 'and/or':28 'applic':42 'assort':2 'bug':3 'caus':20 'consumpt':31 'could':19 'craft':14 'crash':21 'cve':51,54,57 'denial':37 'denial-of-servic':36 'drewri':12 'express':8,17 'hazard':40 'infinit':22,26 'loop':27 'massiv':29 'memori':30 'near':25 'near-infinit':24 'packag':9 'pattern':18,47 'pose':35 'regex':45 'regular':7,16 'regular-express':6,15 'repair':1 'search':46 'servic':39 'sourc':50 'suitabl':13 'tom':10 'untrustworthi':49
8	2	6	1bc6fa65ff3d3216ff451b171c521023	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe) The fix that appeared for this in 8.2.5 was incomplete, as it plugged the hole for only some dblink functions. (CVE-2007-6601, CVE-2007-3278)	'-2007':39,42 '-3278':43 '-6601':40 '/contrib/dblink':7 '8.2.5':25 'appear':21 'authent':12 'cve':38,41 'dblink':36 'fix':19 'function':37 'hole':32 'incomplet':27 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'plug':30 'requir':1 'secur':15 'superus':4 'use':6,9
8	2	6	854180e68dd8652313691302a7be55ed	Fix bugs in WAL replay for GIN indexes (Teodor)	'bug':2 'fix':1 'gin':7 'index':8 'replay':5 'teodor':9 'wal':4
8	2	6	e621f6c2168439c9e1ff4b1dc7e3398d	Fix GIN index build to work properly when maintenance_work_mem is 4GB or more (Tom)	'4gb':13 'build':4 'fix':1 'gin':2 'index':3 'mainten':9 'mem':11 'proper':7 'tom':16 'work':6,10
8	2	6	305c03cbff33863c0a250e2399f1f18a	Update time zone data files to tzdata release 2007k (in particular, recent Argentina changes) (Tom)	'2007k':9 'argentina':13 'chang':14 'data':4 'file':5 'particular':11 'recent':12 'releas':8 'time':2 'tom':15 'tzdata':7 'updat':1 'zone':3
8	2	6	a630624920ee15d84ab4e4c6b4a32b98	Improve planner's handling of LIKE/regex estimation in non-C locales (Tom)	'c':11 'estim':7 'handl':4 'improv':1 'like/regex':6 'local':12 'non':10 'non-c':9 'planner':2 'tom':13
8	2	6	e4c3e61802a50e59df7b361f86b78a9a	Fix planning-speed problem for deep outer-join nests, as well as possible poor choice of join order (Tom)	'choic':17 'deep':7 'fix':1 'join':10,19 'nest':11 'order':20 'outer':9 'outer-join':8 'plan':3 'planning-spe':2 'poor':16 'possibl':15 'problem':5 'speed':4 'tom':21 'well':13
8	2	6	2ba54f3a67da4eb44b964200ccf43082	Make CREATE TABLE ... SERIAL and ALTER SEQUENCE ... OWNED BY not change the currval() state of the sequence (Tom)	'alter':6 'chang':11 'creat':2 'currval':13 'make':1 'own':8 'sequenc':7,17 'serial':4 'state':14 'tabl':3 'tom':18
8	2	6	8bf03ee924cfbfe123d0264b5f23599e	Preserve the tablespace and storage parameters of indexes that are rebuilt by ALTER TABLE ... ALTER COLUMN TYPE (Tom)	'alter':13,15 'column':16 'index':8 'paramet':6 'preserv':1 'rebuilt':11 'storag':5 'tabl':14 'tablespac':3 'tom':18 'type':17
8	2	6	ef33d51432038a4695b9c68628854101	Make archive recovery always start a new WAL timeline, rather than only when a recovery stop time was used (Simon) This avoids a corner-case risk of trying to overwrite an existing archived copy of the last WAL segment, and seems simpler and cleaner than the original definition.	'alway':4 'archiv':2,34 'avoid':22 'case':26 'cleaner':45 'copi':35 'corner':25 'corner-cas':24 'definit':49 'exist':33 'last':38 'make':1 'new':7 'origin':48 'overwrit':31 'rather':10 'recoveri':3,15 'risk':27 'seem':42 'segment':40 'simon':20 'simpler':43 'start':5 'stop':16 'time':17 'timelin':9 'tri':29 'use':19 'wal':8,39
8	2	6	794dc8069a09ddc693fe53cf09b27adc	Make VACUUM not use all of maintenance_work_mem when the table is too small for it to be useful (Alvaro)	'alvaro':21 'mainten':7 'make':1 'mem':9 'small':15 'tabl':12 'use':4,20 'vacuum':2 'work':8
8	2	6	c7f6d81b73ec74ba7c7b3ee64a640a9a	Fix potential crash in translate() when using a multibyte database encoding (Tom)	'crash':3 'databas':10 'encod':11 'fix':1 'multibyt':9 'potenti':2 'tom':12 'translat':5 'use':7
8	2	6	13fe0d187b29d03477ce4beb9a73314b	Make corr() return the correct result for negative correlation values (Neil)	'corr':2 'correct':5 'correl':9 'make':1 'negat':8 'neil':11 'result':6 'return':3 'valu':10
8	2	6	a466b46271f3f41102739be385539473	Fix overflow in extract(epoch from interval) for intervals exceeding 68 years (Tom)	'68':11 'epoch':5 'exceed':10 'extract':4 'fix':1 'interv':7,9 'overflow':2 'tom':13 'year':12
8	2	6	ed6d7881094654224c858b94c0d46089	Fix PL/Perl to not fail when a UTF-8 regular expression is used in a trusted function (Andrew)	'-8':9 'andrew':18 'express':11 'fail':5 'fix':1 'function':17 'pl/perl':2 'regular':10 'trust':16 'use':13 'utf':8
8	2	6	68bc57eaaf86b77024b9a921f5d36f28	Fix PL/Perl to cope when platform's Perl defines type bool as int rather than char (Tom) While this could theoretically happen anywhere, no standard build of Perl did things this way ... until Mac OS X 10.5.	'10.5':37 'anywher':23 'bool':11 'build':26 'char':16 'cope':4 'could':20 'defin':9 'fix':1 'happen':22 'int':13 'mac':34 'os':35 'perl':8,28 'pl/perl':2 'platform':6 'rather':14 'standard':25 'theoret':21 'thing':30 'tom':17 'type':10 'way':32 'x':36
8	2	6	a35e9475c65b4c11267350c7bc905ce8	Fix PL/Python to work correctly with Python 2.5 on 64-bit machines (Marko Kreen)	'2.5':8 '64':10 'bit':11 'correct':5 'fix':1 'kreen':14 'machin':12 'marko':13 'pl/python':2 'python':7 'work':4
8	2	6	6437379ad74d4c454c288ade317f0345	Fix PL/Python to not crash on long exception messages (Alvaro)	'alvaro':10 'crash':5 'except':8 'fix':1 'long':7 'messag':9 'pl/python':2
8	2	6	1d593e0c82a6a3f2c85be53986e71e8f	Fix pg_dump to correctly handle inheritance child tables that have default expressions different from their parent's (Tom)	'child':8 'correct':5 'default':12 'differ':14 'dump':3 'express':13 'fix':1 'handl':6 'inherit':7 'parent':17 'pg':2 'tabl':9 'tom':19
8	2	6	3a021187b2f2dc536873a1e255a165d2	Make contrib/pgcrypto defend against OpenSSL libraries that fail on keys longer than 128 bits; which is the case at least on some Solaris versions (Marko Kreen)	'128':13 'bit':14 'case':18 'contrib/pgcrypto':2 'defend':3 'fail':8 'key':10 'kreen':26 'least':20 'librari':6 'longer':11 'make':1 'marko':25 'openssl':5 'solari':23 'version':24
8	2	6	c8f8576b15626880680c84e5b4dc328a	Make contrib/tablefunc 's crosstab() handle NULL rowid as a category in its own right, rather than crashing (Joe)	'categori':10 'contrib/tablefunc':2 'crash':17 'crosstab':4 'handl':5 'joe':18 'make':1 'null':6 'rather':15 'right':14 'rowid':7
8	2	6	036d79aff0b9227e0da9459e5e07cce5	Fix tsvector and tsquery output routines to escape backslashes correctly (Teodor, Bruce)	'backslash':9 'bruce':12 'correct':10 'escap':8 'fix':1 'output':5 'routin':6 'teodor':11 'tsqueri':4 'tsvector':2
8	2	6	6f17d76da80f19683af3d0504d688def	Fix crash of to_tsvector() on huge input strings (Teodor)	'crash':2 'fix':1 'huge':7 'input':8 'string':9 'teodor':10 'tsvector':5
8	2	6	70f80db23e261362270ca9a1abd9300d	Require a specific version of Autoconf to be used when re-generating the configure script (Peter) This affects developers and packagers only. The change was made to prevent accidental use of untested combinations of Autoconf and PostgreSQL versions. You can remove the version check if you really want to use a different Autoconf version, but it's your responsibility whether the result works or not.	'accident':30 'affect':19 'autoconf':6,36,54 'chang':25 'check':45 'combin':34 'configur':15 'develop':20 'differ':53 'generat':13 'made':27 'packag':22 'peter':17 'postgresql':38 'prevent':29 're':12 're-gener':11 'realli':48 'remov':42 'requir':1 'respons':60 'result':63 'script':16 'specif':3 'untest':33 'use':9,31,51 'version':4,39,44,55 'want':49 'whether':61 'work':64
8	2	6	a57298824fab897d9a10f960d2989c12	Update gettimeofday configuration check so that PostgreSQL can be built on newer versions of MinGW (Magnus)	'built':10 'check':4 'configur':3 'gettimeofday':2 'magnus':16 'mingw':15 'newer':12 'postgresql':7 'updat':1 'version':13
8	2	5	f496f502109032b6c2c9f57b3091124f	Prevent index corruption when a transaction inserts rows and then aborts close to the end of a concurrent VACUUM on the same table (Tom)	'abort':11 'close':12 'concurr':18 'corrupt':3 'end':15 'index':2 'insert':7 'prevent':1 'row':8 'tabl':23 'tom':24 'transact':6 'vacuum':19
8	2	5	5844f88da41c6ca8507bc4cdcc58905e	Fix ALTER DOMAIN ADD CONSTRAINT for cases involving domains over domains (Tom)	'add':4 'alter':2 'case':7 'constraint':5 'domain':3,9,11 'fix':1 'involv':8 'tom':12
8	2	5	4ac9051dca34f9743b83c747a2fa1cc2	Make CREATE DOMAIN ... DEFAULT NULL work properly (Tom)	'creat':2 'default':4 'domain':3 'make':1 'null':5 'proper':7 'tom':8 'work':6
8	2	5	923eadb75cc15bccdf9be2763051634e	Fix some planner problems with outer joins, notably poor size estimation for t1 LEFT JOIN t2 WHERE t2.col IS NULL (Tom)	'estim':11 'fix':1 'join':7,15 'left':14 'notabl':8 'null':20 'outer':6 'planner':3 'poor':9 'problem':4 'size':10 't1':13 't2':16 't2.col':18 'tom':21
8	2	5	b77eb95b8b972d8020db1e68b5202b4d	Allow the interval data type to accept input consisting only of milliseconds or microseconds (Neil)	'accept':7 'allow':1 'consist':9 'data':4 'input':8 'interv':3 'microsecond':14 'millisecond':12 'neil':15 'type':5
8	2	5	96994629a839edea24030e4417a3e7fb	Allow timezone name to appear before the year in timestamp input (Tom)	'allow':1 'appear':5 'input':11 'name':3 'timestamp':10 'timezon':2 'tom':12 'year':8
8	2	5	6f8f95b98a9f981dfb140428d76e62f8	Fixes for GIN indexes used by /contrib/tsearch2 (Teodor)	'/contrib/tsearch2':7 'fix':1 'gin':3 'index':4 'teodor':8 'use':5
8	2	5	8b49166e485a955e79c8ee9a58d52a9b	Speed up rtree index insertion (Teodor)	'index':4 'insert':5 'rtree':3 'speed':1 'teodor':6
8	2	5	592b4ba4858e52f2bb8268972581e1ba	Fix excessive logging of SSL error messages (Tom)	'error':6 'excess':2 'fix':1 'log':3 'messag':7 'ssl':5 'tom':8
8	2	5	55d0d0610248620799bc97d4f7b4cd75	Fix logging so that log messages are never interleaved when using the syslogger process (Andrew)	'andrew':15 'fix':1 'interleav':9 'log':2,5 'messag':6 'never':8 'process':14 'syslogg':13 'use':11
8	2	5	f9dc71a4d66ebad0251b3beda15bdfa7	Fix crash when log_min_error_statement logging runs out of memory (Tom)	'crash':2 'error':6 'fix':1 'log':4,8 'memori':12 'min':5 'run':9 'statement':7 'tom':13
8	2	5	5ffafbef3802b627e18cbb9cc135d69e	Fix incorrect handling of some foreign-key corner cases (Tom)	'case':10 'corner':9 'fix':1 'foreign':7 'foreign-key':6 'handl':3 'incorrect':2 'key':8 'tom':11
8	2	5	52a232def25f8ccfd3d898c3a440c155	Fix stddev_pop(numeric) and var_pop(numeric) (Tom)	'fix':1 'numer':4,8 'pop':3,7 'stddev':2 'tom':9 'var':6
8	2	5	ea776e1b636020b72600c3e11a641a1c	Prevent REINDEX and CLUSTER from failing due to attempting to process temporary tables of other sessions (Alvaro)	'alvaro':17 'attempt':9 'cluster':4 'due':7 'fail':6 'prevent':1 'process':11 'reindex':2 'session':16 'tabl':13 'temporari':12
8	2	5	711b9416fd8e710aef0a2375bfb35979	Update the time zone database rules, particularly New Zealand's upcoming changes (Tom)	'chang':12 'databas':5 'new':8 'particular':7 'rule':6 'time':3 'tom':13 'upcom':11 'updat':1 'zealand':9 'zone':4
8	2	5	f647a383688e825edb458dc356181219	Windows socket and semaphore improvements (Magnus)	'improv':5 'magnus':6 'semaphor':4 'socket':2 'window':1
8	2	5	4e64b0d24713089d89395008c25e768e	Make pg_ctl -w work properly in Windows service mode (Dave Page)	'ctl':3 'dave':11 'make':1 'mode':10 'page':12 'pg':2 'proper':6 'servic':9 'w':4 'window':8 'work':5
8	2	5	1f36e991ef05c333d801e797869908ea	Fix memory allocation bug when using MIT Kerberos on Windows (Magnus)	'alloc':3 'bug':4 'fix':1 'kerbero':8 'magnus':11 'memori':2 'mit':7 'use':6 'window':10
8	2	5	810a3d9feb5c3dd7e4a170ce9f83fe5c	Suppress timezone name ( %Z ) in log timestamps on Windows because of possible encoding mismatches (Tom)	'encod':13 'log':6 'mismatch':14 'name':3 'possibl':12 'suppress':1 'timestamp':7 'timezon':2 'tom':15 'window':9 'z':4
8	2	2	6bba20b9b5efe54826d8584639a7cb5f	Fix Borland C compile scripts (L Bayuk)	'bayuk':7 'borland':2 'c':3 'compil':4 'fix':1 'l':6 'script':5
8	2	5	2da747b0978c37a0d34e5c6a70aa1b06	Require non-superusers who use /contrib/dblink to use only password authentication, as a security measure (Joe)	'/contrib/dblink':7 'authent':12 'joe':17 'measur':16 'non':3 'non-superus':2 'password':11 'requir':1 'secur':15 'superus':4 'use':6,9
8	2	5	44fcfccf01c3c080d62feb1e83e522c6	Restrict /contrib/pgstattuple functions to superusers, for security reasons (Tom)	'/contrib/pgstattuple':2 'function':3 'reason':8 'restrict':1 'secur':7 'superus':5 'tom':9
8	2	5	9156f50b43659a9d25f6daeaf1e9a476	Do not let /contrib/intarray try to make its GIN opclass the default (this caused problems at dump/restore) (Tom)	'/contrib/intarray':4 'caus':14 'default':12 'dump/restore':17 'gin':9 'let':3 'make':7 'opclass':10 'problem':15 'tom':18 'tri':5
8	2	4	65097a712a80fac1e986f41090348391	Support explicit placement of the temporary-table schema within search_path , and disable searching it for functions and operators (Tom) This is needed to allow a security-definer function to set a truly secure value of search_path . Without it, an unprivileged SQL user can use temporary objects to execute code with the privileges of the security-definer function (CVE-2007-2138). See CREATE FUNCTION for more information.	'-2007':64 '-2138':65 'allow':26 'code':53 'creat':67 'cve':63 'defin':30,61 'disabl':14 'execut':52 'explicit':2 'function':18,31,62,68 'inform':71 'need':24 'object':50 'oper':20 'path':12,40 'placement':3 'privileg':56 'schema':9 'search':11,15,39 'secur':29,36,60 'security-defin':28,59 'see':66 'set':33 'sql':45 'support':1 'tabl':8 'temporari':7,49 'temporary-t':6 'tom':21 'truli':35 'unprivileg':44 'use':48 'user':46 'valu':37 'within':10 'without':41
8	2	4	df6ab38b7777d3af6137ff3193a98719	Fix shared_preload_libraries for Windows by forcing reload in each backend (Korry Douglas)	'backend':12 'dougla':14 'fix':1 'forc':8 'korri':13 'librari':4 'preload':3 'reload':9 'share':2 'window':6
8	2	4	1102ba63c9d437f16cb59bde2649a514	Fix to_char() so it properly upper/lower cases localized day or month names (Pavel Stehule)	'case':8 'char':3 'day':10 'fix':1 'local':9 'month':12 'name':13 'pavel':14 'proper':6 'stehul':15 'upper/lower':7
8	2	4	eaebb1c50531a784b5aa61ef1b4fd472	/contrib/tsearch2 crash fixes (Teodor)	'/contrib/tsearch2':1 'crash':2 'fix':3 'teodor':4
8	2	4	620351d0a1dad18a79ace141b6396a9c	Require COMMIT PREPARED to be executed in the same database as the transaction was prepared in (Heikki)	'commit':2 'databas':10 'execut':6 'heikki':17 'prepar':3,15 'requir':1 'transact':13
8	3	6	c66c06fc418b54bf350e66cb79d0eb30	Fix ecpg 's handling of varchar structs (Michael)	'ecpg':2 'fix':1 'handl':4 'michael':8 'struct':7 'varchar':6
8	2	4	85ab65c85d1ee1a86bdbb8dec395c52b	Allow pg_dump to do binary backups larger than two gigabytes on Windows (Magnus)	'allow':1 'backup':7 'binari':6 'dump':3 'gigabyt':11 'larger':8 'magnus':14 'pg':2 'two':10 'window':13
8	2	4	ba9b5bc9e515e2be458b1dc61812021f	New traditional (Taiwan) Chinese FAQ (Zhou Daojing)	'chines':4 'daoj':7 'faq':5 'new':1 'taiwan':3 'tradit':2 'zhou':6
8	2	4	a8ae6110a4ab6f754cfc30e3588fc7c5	Prevent the statistics collector from writing to disk too frequently (Tom)	'collector':4 'disk':8 'frequent':10 'prevent':1 'statist':3 'tom':11 'write':6
8	2	4	86da84097102640442e98e5383cd4628	Fix potential-data-corruption bug in how VACUUM FULL handles UPDATE chains (Tom, Pavan Deolasee)	'bug':6 'chain':13 'corrupt':5 'data':4 'deolase':16 'fix':1 'full':10 'handl':11 'pavan':15 'potenti':3 'potential-data-corrupt':2 'tom':14 'updat':12 'vacuum':9
8	2	4	dc8a15ed9255415534420b3833226e2e	Fix bug in domains that use array types (Tom)	'array':7 'bug':2 'domain':4 'fix':1 'tom':9 'type':8 'use':6
8	2	4	82dd90d0c5aba7cb1654350628769c17	Fix pg_dump so it can dump a serial column's sequence using -t when not also dumping the owning table (Tom)	'also':17 'column':10 'dump':3,7,18 'fix':1 'own':20 'pg':2 'sequenc':12 'serial':9 'tabl':21 'tom':22 'use':13
8	2	4	23926ba6ecb0038f616f40e129d0a627	Planner fixes, including improving outer join and bitmap scan selection logic (Tom)	'bitmap':8 'fix':2 'improv':4 'includ':3 'join':6 'logic':11 'outer':5 'planner':1 'scan':9 'select':10 'tom':12
8	2	4	05e30e363b2569d0cdc472eb7716db68	Fix possible wrong answers or crash when a PL/pgSQL function tries to RETURN from within an EXCEPTION block (Tom)	'answer':4 'block':18 'crash':6 'except':17 'fix':1 'function':10 'pl/pgsql':9 'possibl':2 'return':13 'tom':19 'tri':11 'within':15 'wrong':3
8	2	4	8aef5b83b5dca3a20825c7dc9dedf8b1	Fix PANIC during enlargement of a hash index (Tom)	'enlarg':4 'fix':1 'hash':7 'index':8 'panic':2 'tom':9
8	2	4	1cb39a0b4e6d434a4654f6f3eef90d72	Fix POSIX-style timezone specs to follow new USA DST rules (Tom)	'dst':11 'fix':1 'follow':8 'new':9 'posix':3 'posix-styl':2 'rule':12 'spec':6 'style':4 'timezon':5 'tom':13 'usa':10
8	2	3	9d79958150491cde6f81f11b5e6df120	Remove overly-restrictive check for type length in constraints and functional indexes(Tom)	'check':5 'constraint':10 'function':12 'index':13 'length':8 'over':3 'overly-restrict':2 'remov':1 'restrict':4 'tom':14 'type':7
8	2	3	c588f7d05cf5e566973369f394dab847	Fix optimization so MIN/MAX in subqueries can again use indexes (Tom)	'fix':1 'index':10 'min/max':4 'optim':2 'subqueri':6 'tom':11 'use':9
8	2	2	6c4fa9afd3d73355d828556d01d88a9e	Remove security vulnerabilities that allowed connected users to read backend memory (Tom) The vulnerabilities involve suppressing the normal check that a SQL function returns the data type it's declared to, and changing the data type of a table column (CVE-2007-0555, CVE-2007-0556). These errors can easily be exploited to cause a backend crash, and in principle might be used to read database content that the user should not be able to access.	'-0555':43 '-0556':46 '-2007':42,45 'abl':74 'access':76 'allow':5 'backend':10,56 'caus':54 'chang':33 'check':19 'column':40 'connect':6 'content':67 'crash':57 'cve':41,44 'data':26,35 'databas':66 'declar':30 'easili':50 'error':48 'exploit':52 'function':23 'involv':15 'memori':11 'might':61 'normal':18 'principl':60 'read':9,65 'remov':1 'return':24 'secur':2 'sql':22 'suppress':16 'tabl':39 'tom':12 'type':27,36 'use':63 'user':7,70 'vulner':3,14
8	2	2	5c9b72fd012405e05c2cf815e3d2aa5f	Fix not-so-rare-anymore bug wherein btree index page splits could fail due to choosing an infeasible split point (Heikki Linnakangas)	'anymor':6 'btree':9 'bug':7 'choos':17 'could':13 'due':15 'fail':14 'fix':1 'heikki':22 'index':10 'infeas':19 'linnakanga':23 'not-so-rare-anymor':2 'page':11 'point':21 'rare':5 'split':12,20 'wherein':8
8	2	2	f102231c2577a15f4da9a38058ac9c88	Properly handle to_char('CC') for years ending in 00 (Tom) Year 2000 is in the twentieth century, not the twenty-first.	'00':10 '2000':13 'cc':5 'centuri':18 'char':4 'end':8 'first':23 'handl':2 'proper':1 'tom':11 'twenti':22 'twentieth':17 'twenty-first':21 'year':7,12
8	2	2	b9f2ec10002c101255faab87a2a1df3d	/contrib/tsearch2 localization improvements (Tatsuo, Teodor)	'/contrib/tsearch2':1 'improv':3 'local':2 'tatsuo':4 'teodor':5
8	2	2	4b771b6b24bef111adcff8ee48922781	Fix incorrect permission check in information_schema.key_column_usage view (Tom) The symptom is relation with OID nnnnn does not exist errors. To get this fix without using initdb , use CREATE OR REPLACE VIEW to install the corrected definition found in share/information_schema.sql . Note you will need to do this in each database.	'check':4 'column':8 'correct':38 'creat':31 'databas':52 'definit':39 'error':22 'exist':21 'fix':1,26 'found':40 'get':24 'incorrect':2 'inform':6 'initdb':29 'instal':36 'need':46 'nnnnn':18 'note':43 'oid':17 'permiss':3 'relat':15 'replac':33 'schema.key':7 'share/information_schema.sql':42 'symptom':13 'tom':11 'usag':9 'use':28,30 'view':10,34 'without':27
8	2	2	1145f94b0f328f6b76ed35a0034395cc	Improve VACUUM performance for databases with many tables (Tom)	'databas':5 'improv':1 'mani':7 'perform':3 'tabl':8 'tom':9 'vacuum':2
8	2	2	3f2f2ffc26baad017a7a1c6e24a1e408	Fix for rare Assert() crash triggered by UNION (Tom)	'assert':4 'crash':5 'fix':1 'rare':3 'tom':9 'trigger':6 'union':8
8	2	2	57d0def0cd5d8d00bdbdd43b038829e5	Fix potentially incorrect results from index searches using ROW inequality conditions (Tom)	'condit':11 'fix':1 'incorrect':3 'index':6 'inequ':10 'potenti':2 'result':4 'row':9 'search':7 'tom':12 'use':8
8	2	2	d7306c5b8c93b070dab79d9ca8f92e8d	Tighten security of multi-byte character processing for UTF8 sequences over three bytes long (Tom)	'byte':6,14 'charact':7 'long':15 'multi':5 'multi-byt':4 'process':8 'secur':2 'sequenc':11 'three':13 'tighten':1 'tom':16 'utf8':10
8	2	2	3d5fea1fde5a408994790aaeff8d99b0	Fix bogus permission denied failures occurring on Windows due to attempts to fsync already-deleted files (Magnus, Tom)	'alreadi':15 'already-delet':14 'attempt':11 'bogus':2 'delet':16 'deni':4 'due':9 'failur':5 'file':17 'fix':1 'fsync':13 'magnus':18 'occur':6 'permiss':3 'tom':19 'window':8
8	2	2	1ba733576402b349b43253507fa303a3	Fix bug that could cause the statistics collector to hang on Windows (Magnus) This would in turn lead to autovacuum not working.	'autovacuum':20 'bug':2 'caus':5 'collector':8 'could':4 'fix':1 'hang':10 'lead':18 'magnus':13 'statist':7 'turn':17 'window':12 'work':22 'would':15
8	2	2	9201922c2f55a8642827ff59751a37e8	Fix possible crashes when an already-in-use PL/pgSQL function is updated (Tom)	'alreadi':7 'already-in-us':6 'crash':3 'fix':1 'function':11 'pl/pgsql':10 'possibl':2 'tom':14 'updat':13 'use':9
8	2	2	956719e40dbd4aec6282b9e936b20009	Improve PL/pgSQL handling of domain types (Sergiy Vyshnevetskiy, Tom)	'domain':5 'handl':3 'improv':1 'pl/pgsql':2 'sergiy':7 'tom':9 'type':6 'vyshnevetskiy':8
8	2	2	cd8cf36a70acae346b2e6ea0243291b4	Fix possible errors in processing PL/pgSQL exception blocks (Tom)	'block':8 'error':3 'except':7 'fix':1 'pl/pgsql':6 'possibl':2 'process':5 'tom':9
8	2	1	85614f2ff2ff6c35a90b60263972deda	Fix crash with SELECT ... LIMIT ALL (also LIMIT NULL ) (Tom)	'also':7 'crash':2 'fix':1 'limit':5,8 'null':9 'select':4 'tom':10
8	2	1	d96f0867ae60f4e491b11119ff2cfa2c	Several /contrib/tsearch2 fixes (Teodor)	'/contrib/tsearch2':2 'fix':3 'sever':1 'teodor':4
8	2	1	f9c03ff30d9c11a2841d0c8a24e01363	On Windows, make log messages coming from the operating system use ASCII encoding (Hiroshi Saito) This fixes a conversion problem when there is a mismatch between the encoding of the operating system and database server.	'ascii':12 'come':6 'convers':19 'databas':34 'encod':13,28 'fix':17 'hiroshi':14 'log':4 'make':3 'messag':5 'mismatch':25 'oper':9,31 'problem':20 'saito':15 'server':35 'system':10,32 'use':11 'window':2
8	2	1	057d83d4da60acf52376c94cbf062a0c	Fix Windows linking of pg_dump using win32.mak (Hiroshi Saito)	'dump':6 'fix':1 'hiroshi':9 'link':3 'pg':5 'saito':10 'use':7 'win32.mak':8 'window':2
8	2	1	fc672ecfe612ddde48458bb974f7164f	Fix planner mistakes for outer join queries (Tom)	'fix':1 'join':6 'mistak':3 'outer':5 'planner':2 'queri':7 'tom':8
8	2	1	abfa4e42cfd2875eb9b5fd91db14d665	Fix several problems in queries involving sub-SELECTs (Tom)	'fix':1 'involv':6 'problem':3 'queri':5 'select':9 'sever':2 'sub':8 'sub-select':7 'tom':10
8	2	1	6c72a4a4e24b8f507fb9f2c51914ea66	Fix potential crash in SPI during subtransaction abort (Tom) This affects all PL functions since they all use SPI.	'abort':8 'affect':11 'crash':3 'fix':1 'function':14 'pl':13 'potenti':2 'sinc':15 'spi':5,19 'subtransact':7 'tom':9 'use':18
8	2	1	6c4133fde7fb9c160d980ab366b4d75e	Improve build speed of PDF documentation (Peter)	'build':2 'document':6 'improv':1 'pdf':5 'peter':7 'speed':3
8	2	1	a61552c7ddb3e4df2131e138e6cf9409	Re-add JST (Japan) timezone abbreviation (Tom)	'abbrevi':7 'add':3 'japan':5 'jst':4 're':2 're-add':1 'timezon':6 'tom':8
8	2	1	335325c0dee0d6d6fdca7cb4e96d4373	Improve optimization decisions related to index scans (Tom)	'decis':3 'improv':1 'index':6 'optim':2 'relat':4 'scan':7 'tom':8
8	2	1	c9251ca89ce00f5dd6e5f823445d792d	Have psql print multi-byte combining characters as before, rather than output as \\u (Tom)	'byte':6 'charact':8 'combin':7 'multi':5 'multi-byt':4 'output':13 'print':3 'psql':2 'rather':11 'tom':16 'u':15
8	2	1	c76055f305260b9741ed995773faa1ab	Improve index usage of regular expressions that use parentheses (Tom) This improves psql \\d performance also.	'also':16 'd':14 'express':6 'improv':1,12 'index':2 'parenthes':9 'perform':15 'psql':13 'regular':5 'tom':10 'usag':3 'use':8
8	2	1	466e9bebbdcbcc67aa1eaba8d1819bc4	Make pg_dumpall assume that databases have public CONNECT privilege, when dumping from a pre-8.2 server (Tom) This preserves the previous behavior that anyone can connect to a database if allowed by pg_hba.conf .	'-8.2':16 'allow':32 'anyon':25 'assum':4 'behavior':23 'connect':9,27 'databas':6,30 'dump':12 'dumpal':3 'hba.conf':35 'make':1 'pg':2,34 'pre':15 'preserv':20 'previous':22 'privileg':10 'public':8 'server':17 'tom':18
8	2	0	1bb2073c41afd346727a103399753794	Allow a forced switch to a new transaction log file (Simon, Tom) This is valuable for keeping warm standby slave servers in sync with the master. Transaction log file switching now also happens automatically during pg_stop_backup() . This ensures that all transaction log files needed for recovery can be archived immediately.	'allow':1 'also':32 'archiv':51 'automat':34 'backup':38 'ensur':40 'file':10,29,45 'forc':3 'happen':33 'immedi':52 'keep':17 'log':9,28,44 'master':26 'need':46 'new':7 'pg':36 'recoveri':48 'server':21 'simon':11 'slave':20 'standbi':19 'stop':37 'switch':4,30 'sync':23 'tom':12 'transact':8,27,43 'valuabl':15 'warm':18
8	2	0	adc210a1822a59abacc9f0f5e52f517d	Add WAL informational functions (Simon) Add functions for interrogating the current transaction log insertion point and determining WAL filenames from the hex WAL locations displayed by pg_stop_backup() and related functions.	'add':1,6 'backup':29 'current':11 'determin':17 'display':25 'filenam':19 'function':4,7,32 'hex':22 'inform':3 'insert':14 'interrog':9 'locat':24 'log':13 'pg':27 'point':15 'relat':31 'simon':5 'stop':28 'transact':12 'wal':2,18,23
8	2	0	867d43d1d03fa489800aa163f15c79ce	Improve recovery from a crash during WAL replay (Simon) The server now does periodic checkpoints during WAL recovery, so if there is a crash, future WAL recovery is shortened. This also eliminates the need for warm standby servers to replay the entire log since the base backup if they crash.	'also':31 'backup':47 'base':46 'checkpoint':15 'crash':5,24,50 'elimin':32 'entir':42 'futur':25 'improv':1 'log':43 'need':34 'period':14 'recoveri':2,18,27 'replay':8,40 'server':11,38 'shorten':29 'simon':9 'sinc':44 'standbi':37 'wal':7,17,26 'warm':36
8	2	0	2e2307274aba7afddf78f0b54f9877e4	Prevent max_stack_depth from being set to unsafe values On platforms where we can determine the actual kernel stack depth limit (which is most), make sure that the initial default value of max_stack_depth is safe, and reject attempts to set it to unsafely large values.	'actual':18 'attempt':41 'default':31 'depth':4,21,36 'determin':16 'initi':30 'kernel':19 'larg':47 'limit':22 'make':26 'max':2,34 'platform':12 'prevent':1 'reject':40 'safe':38 'set':7,43 'stack':3,20,35 'sure':27 'unsaf':9,46 'valu':10,32,48
8	2	0	43e4db540e14f4870c1ac8fe324debce	Improve reliability of long-term WAL replay (Heikki, Simon, Tom) Formerly, trying to roll forward through more than 2 billion transactions would not work due to XID wraparound. This meant warm standby servers had to be reloaded from fresh base backups periodically.	'2':20 'backup':42 'base':41 'billion':21 'due':26 'former':12 'forward':16 'fresh':40 'heikki':9 'improv':1 'long':5 'long-term':4 'meant':31 'period':43 'reliabl':2 'reload':38 'replay':8 'roll':15 'server':34 'simon':10 'standbi':33 'term':6 'tom':11 'transact':22 'tri':13 'wal':7 'warm':32 'work':25 'would':23 'wraparound':29 'xid':28
8	2	0	19c45d3e511fbd236aea9a4ebe078d76	Add archive_timeout to force transaction log file switches at a given interval (Simon) This enforces a maximum replication delay for warm standby servers.	'add':1 'archiv':2 'delay':20 'enforc':16 'file':8 'forc':5 'given':12 'interv':13 'log':7 'maximum':18 'replic':19 'server':24 'simon':14 'standbi':23 'switch':9 'timeout':3 'transact':6 'warm':22
8	2	0	006737b39c0cfe401577a743ce2876a6	Add native LDAP authentication (Magnus Hagander) This is particularly useful for platforms that do not support PAM , such as Windows.	'add':1 'authent':4 'hagand':6 'ldap':3 'magnus':5 'nativ':2 'pam':17 'particular':9 'platform':12 'support':16 'use':10 'window':20
8	2	0	bff590b82e59c89f12a172fa378f3edf	Add GRANT CONNECT ON DATABASE (Gevik Babakhani) This gives SQL-level control over database access. It works as an additional filter on top of the existing pg_hba.conf controls.	'access':16 'add':1 'addit':21 'babakhani':7 'connect':3 'control':13,30 'databas':5,15 'exist':27 'filter':22 'gevik':6 'give':9 'grant':2 'hba.conf':29 'level':12 'pg':28 'sql':11 'sql-level':10 'top':24 'work':18
8	2	0	636834cc1339f982560e7370f261dc6f	Add support for SSL Certificate Revocation List ( CRL ) files (Libor Hoho&scaron;) The server and libpq both recognize CRL files now.	'add':1 'certif':5 'crl':8,18 'file':9,19 'hoho':11 'libor':10 'libpq':15 'list':7 'recogn':17 'revoc':6 'server':13 'ssl':4 'support':2
8	2	0	5f3774ffcf24fb93623bc01d3ab6e152	GiST indexes are now clusterable (Teodor)	'cluster':5 'gist':1 'index':2 'teodor':6
8	2	0	72da9862b7193d9c922b1e3e594b86f1	Remove routine autovacuum server log entries (Bruce) pg_stat_activity now shows autovacuum activity.	'activ':10,14 'autovacuum':3,13 'bruce':7 'entri':6 'log':5 'pg':8 'remov':1 'routin':2 'server':4 'show':12 'stat':9
8	2	0	6ccc038dafcce0d773b3dfea28497106	Track maximum XID age within individual tables, instead of whole databases (Alvaro) This reduces the overhead involved in preventing transaction ID wraparound, by avoiding unnecessary VACUUMs.	'age':4 'alvaro':12 'avoid':24 'databas':11 'id':21 'individu':6 'instead':8 'involv':17 'maximum':2 'overhead':16 'prevent':19 'reduc':14 'tabl':7 'track':1 'transact':20 'unnecessari':25 'vacuum':26 'whole':10 'within':5 'wraparound':22 'xid':3
8	2	0	1bbba73fbf7aee6b66e79bed89226257	Add last vacuum and analyze timestamp columns to the stats collector (Larry Rosenman) These values now appear in the pg_stat_*_tables system views.	'add':1 'analyz':5 'appear':17 'collector':11 'column':7 'larri':12 'last':2 'pg':20 'rosenman':13 'stat':10,21 'system':23 'tabl':22 'timestamp':6 'vacuum':3 'valu':15 'view':24
8	2	0	957358b942be97e2987ad3d309cbddbe	Improve performance of statistics monitoring, especially stats_command_string (Tom, Bruce) This release enables stats_command_string by default, now that its overhead is minimal. This means pg_stat_activity will now show all active queries by default.	'activ':30,35 'bruce':11 'command':8,16 'default':19,38 'enabl':14 'especi':6 'improv':1 'mean':27 'minim':25 'monitor':5 'overhead':23 'perform':2 'pg':28 'queri':36 'releas':13 'show':33 'stat':7,15,29 'statist':4 'string':9,17 'tom':10
8	2	0	327cd36ace4ce5d7d7f5fd52b16724ea	Add a waiting column to pg_stat_activity (Tom) This allows pg_stat_activity to show all the information included in the ps display.	'activ':8,14 'add':1 'allow':11 'column':4 'display':24 'includ':20 'inform':19 'pg':6,12 'ps':23 'show':16 'stat':7,13 'tom':9 'wait':3
8	2	0	c59f4b7c4ab48cccaf4216fb67592609	Add configuration parameter update_process_title to control whether the ps display is updated for every command (Bruce) On platforms where it is expensive to update the ps display, it might be worthwhile to turn this off and rely solely on pg_stat_activity for status information.	'activ':44 'add':1 'bruce':18 'command':17 'configur':2 'control':8 'display':12,29 'everi':16 'expens':24 'inform':47 'might':31 'paramet':3 'pg':42 'platform':20 'process':5 'ps':11,28 'reli':39 'sole':40 'stat':43 'status':46 'titl':6 'turn':35 'updat':4,14,26 'whether':9 'worthwhil':33
8	3	2	5fac221538842eaa20da7a37ec6244a8	Fix REASSIGN OWNED so that it works on procedural languages too (Alvaro)	'alvaro':12 'fix':1 'languag':10 'own':3 'procedur':9 'reassign':2 'work':7
8	2	0	ff9eb6ea727cdc2ae0c6145ad62743d0	Allow units to be specified in configuration settings (Peter) For example, you can now set shared_buffers to 32MB rather than mentally converting sizes.	'32mb':19 'allow':1 'buffer':17 'configur':7 'convert':23 'exampl':11 'mental':22 'peter':9 'rather':20 'set':8,15 'share':16 'size':24 'specifi':5 'unit':2
8	2	0	abd5731af4dc761f85ad042bcc81ee28	Add support for include directives in postgresql.conf (Joachim Wieland)	'add':1 'direct':5 'includ':4 'joachim':8 'postgresql.conf':7 'support':2 'wieland':9
8	2	0	344c0c0e407fbf6125d3329ed26f7ed8	Improve logging of protocol-level prepare/bind/execute messages (Bruce, Tom) Such logging now shows statement names, bind parameter values, and the text of the query being executed. Also, the query text is properly included in logged error messages when enabled by log_min_error_statement .	'also':28 'bind':17 'bruce':9 'enabl':40 'error':37,44 'execut':27 'improv':1 'includ':34 'level':6 'log':2,12,36,42 'messag':8,38 'min':43 'name':16 'paramet':18 'prepare/bind/execute':7 'proper':33 'protocol':5 'protocol-level':4 'queri':25,30 'show':14 'statement':15,45 'text':22,31 'tom':10 'valu':19
8	2	0	311aac5543478daa14445b576065ba43	Add REASSIGN OWNED to reassign ownership of all objects owned by a role (Alvaro) This, and DROP OWNED above, facilitate dropping roles.	'add':1 'alvaro':14 'drop':17,21 'facilit':20 'object':9 'own':3,10,18 'ownership':6 'reassign':2,5 'role':13,22
8	2	0	2d8fc37a27432d38914e9f20f5ffd0d6	Enable highlighting of error location in query in more cases (Tom) The server is now able to report a specific error location for some semantic errors (such as unrecognized column name), rather than just for basic syntax errors as before.	'abl':16 'basic':36 'case':10 'column':30 'enabl':1 'error':4,21,26,38 'highlight':2 'locat':5,22 'name':31 'queri':7 'rather':32 'report':18 'semant':25 'server':13 'specif':20 'syntax':37 'tom':11 'unrecogn':29
8	2	0	a233229b8218a6880095ea7464f63ce8	Fix failed to re-find parent key errors in VACUUM (Tom)	'error':9 'fail':2 'find':6 'fix':1 'key':8 'parent':7 're':5 're-find':4 'tom':12 'vacuum':11
8	2	0	79e1b15d68e0b3c3e7d80e39fb17b313	Clean out pg_internal.init cache files during server restart (Simon) This avoids a hazard that the cache files might contain stale data after PITR recovery.	'avoid':12 'cach':5,17 'clean':1 'contain':20 'data':22 'file':6,18 'hazard':14 'internal.init':4 'might':19 'pg':3 'pitr':24 'recoveri':25 'restart':9 'server':8 'simon':10 'stale':21
8	2	0	46abfdf14af6c4643b8b11c43a19f758	Fix race condition for truncation of a large relation across a gigabyte boundary by VACUUM (Tom)	'across':10 'boundari':13 'condit':3 'fix':1 'gigabyt':12 'larg':8 'race':2 'relat':9 'tom':16 'truncat':5 'vacuum':15
8	2	0	ef5bbc565316a0bdd25ad0cbc7b7be90	Fix bug causing needless deadlock errors on row-level locks (Tom)	'bug':2 'caus':3 'deadlock':5 'error':6 'fix':1 'level':10 'lock':11 'needless':4 'row':9 'row-level':8 'tom':12
8	2	0	c76c6302502734c8d99a521820487ed6	Fix bugs affecting multi-gigabyte hash indexes (Tom)	'affect':3 'bug':2 'fix':1 'gigabyt':6 'hash':7 'index':8 'multi':5 'multi-gigabyt':4 'tom':9
8	2	0	ab28d3825d70d392bda20d7f041deead	Each backend process is now its own process group leader (Tom) This allows query cancel to abort subprocesses invoked from a backend or archive/recovery process.	'abort':17 'allow':13 'archive/recovery':24 'backend':2,22 'cancel':15 'group':9 'invok':19 'leader':10 'process':3,8,25 'queri':14 'subprocess':18 'tom':11
8	2	0	8c2f1790072782d9c3cd38ee697a9fa7	Add INSERT / UPDATE / DELETE RETURNING (Jonah Harris, Tom) This allows these commands to return values, such as the computed serial key for a new row. In the UPDATE case, values from the updated version of the row are returned.	'add':1 'allow':10 'case':29 'command':12 'comput':19 'delet':4 'harri':7 'insert':2 'jonah':6 'key':21 'new':24 'return':5,14,39 'row':25,37 'serial':20 'tom':8 'updat':3,28,33 'valu':15,30 'version':34
8	2	0	e479547fb756d8f260a3fa0bd5003cf3	Add support for multiple-row VALUES clauses, per SQL standard (Joe, Tom) This allows INSERT to insert multiple rows of constants, or queries to generate result sets using constants. For example, INSERT ... VALUES (...), (...), .... , and SELECT * FROM (VALUES (...), (...), ....) AS alias(f1, ...) .	'add':1 'alia':40 'allow':15 'claus':8 'constant':22,30 'exampl':32 'f1':41 'generat':26 'insert':16,18,33 'joe':12 'multipl':5,19 'multiple-row':4 'per':9 'queri':24 'result':27 'row':6,20 'select':36 'set':28 'sql':10 'standard':11 'support':2 'tom':13 'use':29 'valu':7,34,38
8	2	0	27b46ad292ec91794394359bfb23eeda	Allow UPDATE and DELETE to use an alias for the target table (Atsushi Ogawa) The SQL standard does not permit an alias in these commands, but many database systems allow one anyway for notational convenience.	'alia':8,22 'allow':1,30 'anyway':32 'atsushi':13 'command':25 'conveni':35 'databas':28 'delet':4 'mani':27 'notat':34 'ogawa':14 'one':31 'permit':20 'sql':16 'standard':17 'system':29 'tabl':12 'target':11 'updat':2 'use':6
8	2	0	2e1dde4433170851867bac299c371133	Allow UPDATE to set multiple columns with a list of values (Susanne Ebrecht) This is basically a short-hand for assigning the columns and values in pairs. The syntax is UPDATE tab SET ( column , ...) = ( val , ...) .	'allow':1 'assign':22 'basic':16 'column':6,24,35 'ebrecht':13 'hand':20 'list':9 'multipl':5 'pair':28 'set':4,34 'short':19 'short-hand':18 'susann':12 'syntax':30 'tab':33 'updat':2,32 'val':36 'valu':11,26
8	2	0	c6be751643bad0bb84351ed0de396249	Make row comparisons work per standard (Tom) The forms &lt;, &lt;=, &gt;, &gt;= now compare rows lexicographically, that is, compare the first elements, if equal compare the second elements, and so on. Formerly they expanded to an AND condition across all the elements, which was neither standard nor very useful.	'across':36 'compar':11,16,22 'comparison':3 'condit':35 'element':19,25,39 'equal':21 'expand':31 'first':18 'form':9 'former':29 'lexicograph':13 'make':1 'neither':42 'per':5 'row':2,12 'second':24 'standard':6,43 'tom':7 'use':46 'work':4
8	2	0	1e22a6174a0830f8c28802ef0a044a7c	Add pg_timezone_abbrevs and pg_timezone_names views to show supported timezones (Magnus Hagander)	'abbrev':4 'add':1 'hagand':15 'magnus':14 'name':8 'pg':2,6 'show':11 'support':12 'timezon':3,7,13 'view':9
8	2	0	07e87bc2c2e51198f023dcbef107fb13	Add CASCADE option to TRUNCATE (Joachim Wieland) This causes TRUNCATE to automatically include all tables that reference the specified table(s) via foreign keys. While convenient, this is a dangerous tool &mdash; use with caution!	'add':1 'automat':12 'cascad':2 'caus':9 'caution':34 'conveni':26 'danger':30 'foreign':23 'includ':13 'joachim':6 'key':24 'option':3 'refer':17 'specifi':19 'tabl':15,20 'tool':31 'truncat':5,10 'use':32 'via':22 'wieland':7
8	2	0	8a7047e46812f4f6b2c2eab8f00858ab	Support FOR UPDATE and FOR SHARE in the same SELECT command (Tom)	'command':11 'select':10 'share':6 'support':1 'tom':12 'updat':3
8	2	0	8342c3a645e087b189d2b724ea88e2c5	Add IS NOT DISTINCT FROM (Pavel Stehule) This operator is similar to equality ( = ), but evaluates to true when both left and right operands are NULL , and to false when just one is, rather than yielding NULL in these cases.	'add':1 'case':39 'distinct':4 'equal':13 'evalu':15 'fals':28 'left':20 'null':25,36 'one':31 'oper':9 'operand':23 'pavel':6 'rather':33 'right':22 'similar':11 'stehul':7 'true':17 'yield':35
8	2	0	31045ce88ca2645cbae9dff1f61f8dd3	Improve the length output used by UNION / INTERSECT / EXCEPT (Tom) When all corresponding columns are of the same defined length, that length is used for the result, rather than a generic length.	'column':14 'correspond':13 'defin':19 'except':9 'generic':31 'improv':1 'intersect':8 'length':3,20,22,32 'output':4 'rather':28 'result':27 'tom':10 'union':7 'use':5,24
8	2	0	12bbdca9f36c66edecabf738d425f0b1	Allow ILIKE to work for multi-byte encodings (Tom) Internally, ILIKE now calls lower() and then uses LIKE . Locale-specific regular expression patterns still do not work in these encodings.	'allow':1 'byte':8 'call':14 'encod':9,32 'express':24 'ilik':2,12 'intern':11 'like':19 'local':21 'locale-specif':20 'lower':15 'multi':7 'multi-byt':6 'pattern':25 'regular':23 'specif':22 'still':26 'tom':10 'use':18 'work':4,29
8	2	0	d7e7a3f1e414075257771a6395bf956c	Enable standard_conforming_strings to be turned on (Kevin Grittner) This allows backslash escaping in strings to be disabled, making PostgreSQL more standards-compliant. The default is off for backwards compatibility, but future releases will default this to on .	'allow':12 'backslash':13 'backward':31 'compat':32 'compliant':25 'conform':3 'default':27,37 'disabl':19 'enabl':1 'escap':14 'futur':34 'grittner':10 'kevin':9 'make':20 'postgresql':21 'releas':35 'standard':2,24 'standards-compli':23 'string':4,16 'turn':7
8	2	0	efcff6386e10259efdaf7c495cd64d36	Do not flatten subqueries that contain volatile functions in their target lists (Jaime Casanova) This prevents surprising behavior due to multiple evaluation of a volatile function (such as random() or nextval() ). It might cause performance degradation in the presence of functions that are unnecessarily marked as volatile .	'behavior':18 'casanova':14 'caus':34 'contain':6 'degrad':36 'due':19 'evalu':22 'flatten':3 'function':8,26,41 'jaim':13 'list':12 'mark':45 'might':33 'multipl':21 'nextval':31 'perform':35 'presenc':39 'prevent':16 'random':29 'subqueri':4 'surpris':17 'target':11 'unnecessarili':44 'volatil':7,25,47
8	2	0	afb0dffaf7544ceed428e4dc553a322a	Add system views pg_prepared_statements and pg_cursors to show prepared statements and open cursors (Joachim Wieland, Neil) These are very useful in pooled connection setups.	'add':1 'connect':26 'cursor':9,16 'joachim':17 'neil':19 'open':15 'pg':4,8 'pool':25 'prepar':5,12 'setup':27 'show':11 'statement':6,13 'system':2 'use':23 'view':3 'wieland':18
8	2	0	f253871d0d07018ae4b27027f3e173dc	Support portal parameters in EXPLAIN and EXECUTE (Tom) This allows, for example, JDBC ? parameters to work in these commands.	'allow':10 'command':19 'exampl':12 'execut':7 'explain':5 'jdbc':13 'paramet':3,14 'portal':2 'support':1 'tom':8 'work':16
8	2	0	52b5fea68b10bf0ea2078977a4be0a1b	If SQL -level PREPARE parameters are unspecified, infer their types from the content of the query (Neil) Protocol-level PREPARE already did this.	'alreadi':22 'content':13 'infer':8 'level':3,20 'neil':17 'paramet':5 'prepar':4,21 'protocol':19 'protocol-level':18 'queri':16 'sql':2 'type':10 'unspecifi':7
8	2	0	783ac913c311ae3fff95b417a89a4fc9	Allow LIMIT and OFFSET to exceed two billion (Dhanaraj M)	'allow':1 'billion':8 'dhanaraj':9 'exceed':6 'limit':2 'm':10 'offset':4 'two':7
8	2	0	e8c9870a289860c3f84a8759a956db4b	Add TABLESPACE clause to CREATE TABLE AS (Neil) This allows a tablespace to be specified for the new table.	'add':1 'allow':10 'claus':3 'creat':5 'neil':8 'new':18 'specifi':15 'tabl':6,19 'tablespac':2,12
8	2	0	4725726da39d232583ed7f826e22fb62	Add ON COMMIT clause to CREATE TABLE AS (Neil) This allows temporary tables to be truncated or dropped on transaction commit. The default behavior is for the table to remain until the session ends.	'add':1 'allow':11 'behavior':24 'claus':4 'commit':3,21 'creat':6 'default':23 'drop':18 'end':34 'neil':9 'remain':30 'session':33 'tabl':7,13,28 'temporari':12 'transact':20 'truncat':16
8	2	0	5cda07f7a7844bb1ccc1a95b51971660	Add INCLUDING CONSTRAINTS to CREATE TABLE LIKE (Greg Stark) This allows easy copying of CHECK constraints to a new table.	'add':1 'allow':11 'check':15 'constraint':3,16 'copi':13 'creat':5 'easi':12 'greg':8 'includ':2 'like':7 'new':19 'stark':9 'tabl':6,20
8	2	0	6418d051463d2117e23ebe9a50a81ab3	Allow the creation of placeholder (shell) types (Martijn van Oosterhout) A shell type declaration creates a type name, without specifying any of the details of the type. Making a shell type is useful because it allows cleaner declaration of the type's input/output functions, which must exist before the type can be defined for real . The syntax is CREATE TYPE typename .	'allow':1,36 'cleaner':37 'creat':15,59 'creation':3 'declar':14,38 'defin':53 'detail':24 'exist':47 'function':44 'input/output':43 'make':28 'martijn':8 'must':46 'name':18 'oosterhout':10 'placehold':5 'real':55 'shell':6,12,30 'specifi':20 'syntax':57 'type':7,13,17,27,31,41,50,60 'typenam':61 'use':33 'van':9 'without':19
8	2	0	59e28af88b0416d65e53b1f085aaadb6	Aggregate functions now support multiple input parameters (Sergey Koposov, Tom)	'aggreg':1 'function':2 'input':6 'koposov':9 'multipl':5 'paramet':7 'sergey':8 'support':4 'tom':10
8	2	0	804161c344769ce5c0b5a2d00183b2ef	Support configurable timezone abbreviations (Joachim Wieland) A desired set of timezone abbreviations can be chosen via the configuration parameter timezone_abbreviations .	'abbrevi':4,12,21 'chosen':15 'configur':2,18 'desir':8 'joachim':5 'paramet':19 'set':9 'support':1 'timezon':3,11,20 'via':16 'wieland':6
8	2	0	d1ebec6ce1c8c6bc0c4c3b95eeb74555	Add new aggregate creation syntax (Tom) The new syntax is CREATE AGGREGATE aggname ( input_type ) ( parameter_list ) . This more naturally supports the new multi-parameter aggregate functionality. The previous syntax is still supported.	'add':1 'aggnam':13 'aggreg':3,12,27 'creat':11 'creation':4 'function':28 'input':14 'list':17 'multi':25 'multi-paramet':24 'natur':20 'new':2,8,23 'paramet':16,26 'previous':30 'still':33 'support':21,34 'syntax':5,9,31 'tom':6 'type':15
8	2	0	d725925c1748a19a426dae79dfa0296a	Add ALTER ROLE PASSWORD NULL to remove a previously set role password (Peter)	'add':1 'alter':2 'null':5 'password':4,12 'peter':13 'previous':9 'remov':7 'role':3,11 'set':10
8	2	0	f355f527e6e85464099a68b6a506397e	Add DROP object IF EXISTS for many object types (Andrew) This allows DROP operations on non-existent objects without generating an error.	'add':1 'allow':12 'andrew':10 'drop':2,13 'error':23 'exist':5,18 'generat':21 'mani':7 'non':17 'non-exist':16 'object':3,8,19 'oper':14 'type':9 'without':20
8	2	0	d6a2ddd925f5f6206322e0c294fe00ae	Add DROP OWNED to drop all objects owned by a role (Alvaro)	'add':1 'alvaro':12 'drop':2,5 'object':7 'own':3,8 'role':11
8	2	0	aeaeac61317888a5c93d05371009742b	Add GRANT ON SEQUENCE syntax (Bruce) This was added for setting sequence-specific permissions. GRANT ON TABLE for sequences is still supported for backward compatibility.	'ad':9 'add':1 'backward':25 'bruce':6 'compat':26 'grant':2,16 'permiss':15 'sequenc':4,13,20 'sequence-specif':12 'set':11 'specif':14 'still':22 'support':23 'syntax':5 'tabl':18
8	2	0	e8adb3fc9721ae0a74559a83b8d6181e	Add USAGE permission for sequences that allows only currval() and nextval() , not setval() (Bruce) USAGE permission allows more fine-grained control over sequence access. Granting USAGE allows users to increment a sequence, but prevents them from setting the sequence to an arbitrary value using setval() .	'access':25 'add':1 'allow':7,17,28 'arbitrari':43 'bruce':14 'control':22 'currval':9 'fine':20 'fine-grain':19 'grain':21 'grant':26 'increment':31 'nextval':11 'permiss':3,16 'prevent':35 'sequenc':5,24,33,40 'set':38 'setval':13,46 'usag':2,15,27 'use':45 'user':29 'valu':44
8	2	0	ec1acaafbe17c1dfaa10a55c88db7ea9	Add ALTER TABLE [ NO ] INHERIT (Greg Stark) This allows inheritance to be adjusted dynamically, rather than just at table creation and destruction. This is very valuable when using inheritance to implement table partitioning.	'add':1 'adjust':13 'allow':9 'alter':2 'creation':20 'destruct':22 'dynam':14 'greg':6 'implement':31 'inherit':5,10,29 'partit':33 'rather':15 'stark':7 'tabl':3,19,32 'use':28 'valuabl':26
8	2	0	72603d218b45864837111f35a06a20e4	Allow comments on global objects to be stored globally (Kris Jurka) Previously, comments attached to databases were stored in individual databases, making them ineffective, and there was no provision at all for comments on roles or tablespaces. This change adds a new shared catalog pg_shdescription and stores comments on databases, roles, and tablespaces therein.	'add':40 'allow':1 'attach':14 'catalog':44 'chang':39 'comment':2,13,33,49 'databas':16,21,51 'global':4,9 'individu':20 'ineffect':24 'jurka':11 'kris':10 'make':22 'new':42 'object':5 'pg':45 'previous':12 'provis':29 'role':35,52 'share':43 'shdescript':46 'store':8,18,48 'tablespac':37,54 'therein':55
8	2	0	50d773ee5746264c05874cf2e03f3bdd	Add option to allow indexes to be created without blocking concurrent writes to the table (Greg Stark, Tom) The new syntax is CREATE INDEX CONCURRENTLY . The default behavior is still to block table modification while a index is being created.	'add':1 'allow':4 'behavior':28 'block':10,32 'concurr':11,25 'creat':8,23,40 'default':27 'greg':16 'index':5,24,37 'modif':34 'new':20 'option':2 'stark':17 'still':30 'syntax':21 'tabl':15,33 'tom':18 'without':9 'write':12
8	2	0	752b0a342f642c12474477f188570570	Provide advisory locking functionality (Abhijit Menon-Sen, Tom) This is a new locking API designed to replace what used to be in /contrib/userlock. The userlock code is now on pgfoundry.	'/contrib/userlock':24 'abhijit':5 'advisori':2 'api':15 'code':27 'design':16 'function':4 'lock':3,14 'menon':7 'menon-sen':6 'new':13 'pgfoundri':31 'provid':1 'replac':18 'sen':8 'tom':9 'use':20 'userlock':26
8	2	0	60e0840c97bcc0b9662f4c592ac2cfcc	Allow COPY to dump a SELECT query (Zoltan Boszormenyi, Karel Zak) This allows COPY to dump arbitrary SQL queries. The syntax is COPY (SELECT ...) TO .	'allow':1,13 'arbitrari':17 'boszormenyi':9 'copi':2,14,23 'dump':4,16 'karel':10 'queri':7,19 'select':6,24 'sql':18 'syntax':21 'zak':11 'zoltan':8
8	2	0	28cce042d24b685966ca6f71f2552212	Make the COPY command return a command tag that includes the number of rows copied (Volkan YAZICI)	'command':4,7 'copi':3,15 'includ':10 'make':1 'number':12 'return':5 'row':14 'tag':8 'volkan':16 'yazici':17
8	2	0	4084dd84ede7b8991c70c014cf41fbc5	Allow VACUUM to expire rows without being affected by other concurrent VACUUM operations (Hannu Krossing, Alvaro, Tom)	'affect':8 'allow':1 'alvaro':16 'concurr':11 'expir':4 'hannu':14 'kross':15 'oper':13 'row':5 'tom':17 'vacuum':2,12 'without':6
8	2	0	5e6e789ec23d2169947097d91243e4ff	Make initdb detect the operating system locale and set the default DateStyle accordingly (Peter) This makes it more likely that the installed postgresql.conf DateStyle value will be as desired.	'accord':13 'datestyl':12,24 'default':11 'desir':29 'detect':3 'initdb':2 'instal':22 'like':19 'local':7 'make':1,16 'oper':5 'peter':14 'postgresql.conf':23 'set':9 'system':6 'valu':25
8	2	0	3a141b87b38cf487dbdcb9a1fa1729c1	Reduce number of progress messages displayed by initdb (Tom)	'display':6 'initdb':8 'messag':5 'number':2 'progress':4 'reduc':1 'tom':9
8	2	0	332efa5df9ae9353a419740857532098	Allow full timezone names in timestamp input values (Joachim Wieland) For example, '2006-05-24 21:11 America/New_York'::timestamptz .	'-05':14 '-24':15 '11':17 '2006':13 '21':16 'allow':1 'america/new_york':18 'exampl':12 'full':2 'input':7 'joachim':9 'name':4 'timestamp':6 'timestamptz':19 'timezon':3 'valu':8 'wieland':10
8	2	0	6de4ee7ad7a2fcaadf3b0d79997b51a1	Add a BY clause to the FOR loop, to control the iteration increment (Jaime Casanova)	'add':1 'casanova':15 'claus':4 'control':10 'increment':13 'iter':12 'jaim':14 'loop':8
8	2	0	76b29053e023b0dd9121412116237450	Add clock_timestamp() , statement_timestamp() , and transaction_timestamp() (Bruce) clock_timestamp() is the current wall-clock time, statement_timestamp() is the time the current statement arrived at the server, and transaction_timestamp() is an alias for now() .	'add':1 'alia':36 'arriv':27 'bruce':9 'clock':2,10,17 'current':14,25 'server':30 'statement':4,19,26 'time':18,23 'timestamp':3,5,8,11,20,33 'transact':7,32 'wall':16 'wall-clock':15
8	2	0	4c7c3c92d98f0e9d41716d1680026446	Allow to_char() to print localized month and day names (Euler Taveira de Oliveira)	'allow':1 'char':3 'day':9 'de':13 'euler':11 'local':6 'month':7 'name':10 'oliveira':14 'print':5 'taveira':12
8	2	0	a6c0d7c05199d71a753744bb3dd1d90a	Allow to_char(time) and to_char(interval) to output AM / PM specifications (Bruce) Intervals and times are treated as 24-hour periods, e.g. 25 hours is considered AM .	'24':21 '25':25 'allow':1 'bruce':14 'char':3,7 'consid':28 'e.g':24 'hour':22,26 'interv':8,15 'output':10 'period':23 'pm':12 'specif':13 'time':4,17 'treat':19
8	2	0	1c4fca36fe0e8e0a0fd3e3547f54a8b9	Add new function justify_interval() to adjust interval units (Mark Dilger)	'add':1 'adjust':7 'dilger':11 'function':3 'interv':5,8 'justifi':4 'mark':10 'new':2 'unit':9
8	2	0	425961a0b070d26fc0add9d927c8d552	Allow timezone offsets up to 14:59 away from GMT Kiribati uses GMT+14, so we'd better accept that.	'+14':14 '14':6 '59':7 'accept':19 'allow':1 'away':8 'better':18 'd':17 'gmt':10,13 'kiribati':11 'offset':3 'timezon':2 'use':12
8	2	0	5571dfbb989132267bb97ca932a892d3	Interval computation improvements (Michael Glaesemann, Bruce)	'bruce':6 'comput':2 'glaesemann':5 'improv':3 'interv':1 'michael':4
8	2	0	7d0e25a2123eee295578ca618de20e25	Allow arrays to contain NULL elements (Tom)	'allow':1 'array':2 'contain':4 'element':6 'null':5 'tom':7
8	2	0	7ee801ca9044c74217037aa8951339e0	Allow assignment to array elements not contiguous with the existing entries (Tom) The intervening array positions will be filled with nulls. This is per SQL standard.	'allow':1 'array':4,15 'assign':2 'contigu':7 'element':5 'entri':11 'exist':10 'fill':19 'interven':14 'null':21 'per':24 'posit':16 'sql':25 'standard':26 'tom':12
8	2	0	22cfbc8c04208cda83736ba49635446f	New built-in operators for array-subset comparisons ( @&gt; , &lt;@ , &amp;&amp; ) (Teodor, Tom) These operators can be indexed for many data types using GiST or GIN indexes.	'array':8 'array-subset':7 'built':3 'built-in':2 'comparison':10 'data':20 'gin':25 'gist':23 'index':17,26 'mani':19 'new':1 'oper':5,14 'subset':9 'teodor':11 'tom':12 'type':21 'use':22
8	2	0	4d12126e1ee9ab3b71b6a8b2757e94ab	Add convenient arithmetic operations on INET / CIDR values (Stephen R. van den Berg) The new operators are &amp; (and), | (or), ~ (not), inet + int8 , inet - int8 , and inet - inet .	'add':1 'arithmet':3 'berg':13 'cidr':7 'conveni':2 'den':12 'inet':6,21,23,26,27 'int8':22,24 'new':15 'oper':4,16 'r':10 'stephen':9 'valu':8 'van':11
8	2	0	46ff47f6681e8886635d9e390da147f6	Add new aggregate functions from SQL:2003 (Neil) The new functions are var_pop() , var_samp() , stddev_pop() , and stddev_samp() . var_samp() and stddev_samp() are merely renamings of the existing aggregates variance() and stddev() . The latter names remain available for backward compatibility.	'2003':7 'add':1 'aggreg':3,33 'avail':41 'backward':43 'compat':44 'exist':32 'function':4,11 'latter':38 'mere':28 'name':39 'neil':8 'new':2,10 'pop':14,18 'remain':40 'renam':29 'samp':16,21,23,26 'sql':6 'stddev':17,20,25,36 'var':13,15,22 'varianc':34
8	2	0	1a1c9914de4d15fb2ba28e06867ec08b	Add SQL:2003 statistical aggregates (Sergey Koposov) New functions: regr_intercept() , regr_slope() , regr_r2() , corr() , covar_samp() , covar_pop() , regr_avgx() , regr_avgy() , regr_sxy() , regr_sxx() , regr_syy() , regr_count() .	'2003':3 'add':1 'aggreg':5 'avgi':24 'avgx':22 'corr':16 'count':32 'covar':17,19 'function':9 'intercept':11 'koposov':7 'new':8 'pop':20 'r2':15 'regr':10,12,14,21,23,25,27,29,31 'samp':18 'sergey':6 'slope':13 'sql':2 'statist':4 'sxi':26 'sxx':28 'syy':30
8	2	0	4dbcbeecb7457aed048aa97d8a2b0286	Allow domains to be based on other domains (Tom)	'allow':1 'base':5 'domain':2,8 'tom':9
8	2	0	24390109ebbba0145cdaa4c56c2df10a	Properly enforce domain CHECK constraints everywhere (Neil, Tom) For example, the result of a user-defined function that is declared to return a domain type is now checked against the domain's constraints. This closes a significant hole in the domain implementation.	'check':4,29 'close':36 'constraint':5,34 'declar':21 'defin':17 'domain':3,25,32,42 'enforc':2 'everywher':6 'exampl':10 'function':18 'hole':39 'implement':43 'neil':7 'proper':1 'result':12 'return':23 'signific':38 'tom':8 'type':26 'user':16 'user-defin':15
8	2	0	7d73597c163bccf2a6cdd54337749696	Fix problems with dumping renamed SERIAL columns (Tom) The fix is to dump a SERIAL column by explicitly specifying its DEFAULT and sequence elements, and reconstructing the SERIAL column on reload using a new ALTER SEQUENCE OWNED BY command. This also allows dropping a SERIAL column specification.	'allow':42 'also':41 'alter':35 'column':7,16,29,46 'command':39 'default':21 'drop':43 'dump':4,13 'element':24 'explicit':18 'fix':1,10 'new':34 'own':37 'problem':2 'reconstruct':26 'reload':31 'renam':5 'sequenc':23,36 'serial':6,15,28,45 'specif':47 'specifi':19 'tom':8 'use':32
8	2	0	33594983dd7d5a2a3e0c15799c7ed984	Add a server-side sleep function pg_sleep() (Joachim Wieland)	'add':1 'function':7 'joachim':10 'pg':8 'server':4 'server-sid':3 'side':5 'sleep':6,9 'wieland':11
8	2	0	6ae7421478a2f2c317e8856a6a4d06fb	Add all comparison operators for the tid (tuple id) data type (Mark Kirkwood, Greg Stark, Tom)	'add':1 'comparison':3 'data':10 'greg':14 'id':9 'kirkwood':13 'mark':12 'oper':4 'stark':15 'tid':7 'tom':16 'tupl':8 'type':11
8	2	0	e6e19c93c8bd6ab3bc4a16b42130fcbc	Add TG_table_name and TG_table_schema to trigger parameters (Andrew) TG_relname is now deprecated. Comparable changes have been made in the trigger parameters for the other PLs as well.	'add':1 'andrew':12 'chang':19 'compar':18 'deprec':17 'made':22 'name':4 'paramet':11,26 'pls':30 'relnam':14 'schema':8 'tabl':3,7 'tg':2,6,13 'trigger':10,25 'well':32
8	2	0	b34151d537f162bded3dc8ed98380ba5	Allow FOR statements to return values to scalars as well as records and row types (Pavel Stehule)	'allow':1 'pavel':16 'record':12 'return':5 'row':14 'scalar':8 'statement':3 'stehul':17 'type':15 'valu':6 'well':10
8	2	0	455868e33a1743ea21a870453a71a87d	Add STRICT to SELECT INTO (Matt Miller) STRICT mode throws an exception if more or less than one row is returned by the SELECT , for Oracle PL/SQL compatibility.	'add':1 'compat':28 'except':12 'less':16 'matt':6 'miller':7 'mode':9 'one':18 'oracl':26 'pl/sql':27 'return':21 'row':19 'select':4,24 'strict':2,8 'throw':10
8	2	0	95d2f9c0720cbbb2cbf43296faade200	Add table_name and table_schema to trigger parameters (Adam Sj&oslash;gren)	'adam':10 'add':1 'gren':12 'name':3 'paramet':9 'schema':6 'sj':11 'tabl':2,5 'trigger':8
8	2	0	ecbf85b77fdf0d714cbb73e0e55367bc	Add prepared queries (Dmitry Karasik)	'add':1 'dmitri':4 'karasik':5 'prepar':2 'queri':3
8	2	0	c26bc48ee0f826bb52d141844bfa96a8	Make $_TD trigger data a global variable (Andrew) Previously, it was lexical, which caused unexpected sharing violations.	'andrew':8 'caus':14 'data':4 'global':6 'lexic':12 'make':1 'previous':9 'share':16 'td':2 'trigger':3 'unexpect':15 'variabl':7 'violat':17
8	3	5	81d5ac8aa36a0054e00cdf3f404a5cdd	Ensure DISCARD is handled properly by statement logging (Tom)	'discard':2 'ensur':1 'handl':4 'log':8 'proper':5 'statement':7 'tom':9
8	2	0	88f8038755acbbaa84d2b119ec77686b	Run PL/Perl and PL/PerlU in separate interpreters, for security reasons (Andrew) In consequence, they can no longer share data nor loaded modules. Also, if Perl has not been compiled with the requisite flags to allow multiple interpreters, only one of these languages can be used in any given backend process.	'allow':35 'also':23 'andrew':11 'backend':49 'compil':29 'consequ':13 'data':19 'flag':33 'given':48 'interpret':7,37 'languag':42 'load':21 'longer':17 'modul':22 'multipl':36 'one':39 'perl':25 'pl/perl':2 'pl/perlu':4 'process':50 'reason':10 'requisit':32 'run':1 'secur':9 'separ':6 'share':18 'use':45
8	2	0	292a02c030e9dd73adeb63a03ee0b744	Named parameters are passed as ordinary variables, as well as in the args[] array (Sven Suursoho)	'arg':13 'array':14 'name':1 'ordinari':6 'paramet':2 'pass':4 'suursoho':16 'sven':15 'variabl':7 'well':9
8	2	0	29313c615a2fa7df47122247cd03a01c	Add table_name and table_schema to trigger parameters (Andrew)	'add':1 'andrew':10 'name':3 'paramet':9 'schema':6 'tabl':2,5 'trigger':8
8	2	0	bdf810246bec6c2ac1a21b4dc116fb63	Allow returning of composite types and result sets (Sven Suursoho)	'allow':1 'composit':4 'result':7 'return':2 'set':8 'suursoho':10 'sven':9 'type':5
8	2	0	14f4118fe191519988a9b7fe5d9283b2	Return result-set as list , iterator , or generator (Sven Suursoho)	'generat':9 'iter':7 'list':6 'result':3 'result-set':2 'return':1 'set':4 'suursoho':11 'sven':10
8	2	0	1ed799006b0bf9f0ce10103e26154b9e	Allow functions to return void (Neil)	'allow':1 'function':2 'neil':6 'return':4 'void':5
8	2	0	60ef4c6f0bcc860a044ac3909bfc4910	Python 2.5 is now supported (Tom)	'2.5':2 'python':1 'support':5 'tom':6
8	2	0	00b14a25d38b432e4230eddeab6e83ce	Add new command \\password for changing role password with client-side password encryption (Peter)	'add':1 'chang':6 'client':11 'client-sid':10 'command':3 'encrypt':14 'new':2 'password':4,8,13 'peter':15 'role':7 'side':12
8	2	0	eeba26e4fae446060b42a8b9692f65e6	Allow \\c to connect to a new host and port number (David, Volkan YAZICI)	'allow':1 'c':2 'connect':4 'david':12 'host':8 'new':7 'number':11 'port':10 'volkan':13 'yazici':14
8	2	0	4ae03c4e2f72df2d9423c4939009b2e6	Add tablespace display to \\l+ (Philip Yarra)	'add':1 'display':3 'l':5 'philip':6 'tablespac':2 'yarra':7
8	2	0	8ea491b58454d55911c2d33fce9cac8e	Improve \\df slash command to include the argument names and modes ( OUT or INOUT ) of the function (David Fetter)	'argument':8 'command':4 'david':18 'df':2 'fetter':19 'function':17 'improv':1 'includ':6 'inout':14 'mode':11 'name':9 'slash':3
8	2	0	7b99d80d37f6bbe260da0f76e298b4a3	Support binary COPY (Andreas Pflug)	'andrea':4 'binari':2 'copi':3 'pflug':5 'support':1
8	2	0	97a90ae8f16a94b44f3b639f18b7b077	Add option to run the entire session in a single transaction (Simon) Use option -1 or --single-transaction .	'-1':15 'add':1 'entir':6 'option':2,14 'run':4 'session':7 'simon':12 'singl':10,18 'single-transact':17 'transact':11,19 'use':13
8	2	0	fd6d48446f9c0a682a4adc38d89da62d	Support for automatically retrieving SELECT results in batches using a cursor (Chris Mair) This is enabled using \\set FETCH_COUNT n . This feature allows large result sets to be retrieved in psql without attempting to buffer the entire result set in memory.	'allow':24 'attempt':34 'automat':3 'batch':8 'buffer':36 'chris':12 'count':20 'cursor':11 'enabl':16 'entir':38 'featur':23 'fetch':19 'larg':25 'mair':13 'memori':42 'n':21 'psql':32 'result':6,26,39 'retriev':4,30 'select':5 'set':18,27,40 'support':1 'use':9,17 'without':33
8	2	0	7fe8d9a15fbc673cd364e0898cf35ae6	Make multi-line values align in the proper column (Martijn van Oosterhout) Field values containing newlines are now displayed in a more readable fashion.	'align':6 'column':10 'contain':16 'display':20 'fashion':25 'field':14 'line':4 'make':1 'martijn':11 'multi':3 'multi-lin':2 'newlin':17 'oosterhout':13 'proper':9 'readabl':24 'valu':5,15 'van':12
8	2	0	e8b6434ea295527781b783e8a936557b	Save multi-line statements as a single entry, rather than one line at a time (Sergey E. Koposov) This makes up-arrow recall of queries easier. (This is not available on Windows, because that platform uses the native command-line editing present in the operating system.)	'arrow':24 'avail':32 'command':42 'command-lin':41 'e':18 'easier':28 'edit':44 'entri':9 'koposov':19 'line':4,13,43 'make':21 'multi':3 'multi-lin':2 'nativ':40 'one':12 'oper':48 'platform':37 'present':45 'queri':27 'rather':10 'recal':25 'save':1 'sergey':17 'singl':8 'statement':5 'system':49 'time':16 'up-arrow':22 'use':38 'window':34
8	2	0	21e8e0b588d0c4ed84c89722d21ecdbb	Make the line counter 64-bit so it can handle files with more than two billion lines (David Fetter)	'64':5 'billion':16 'bit':6 'counter':4 'david':18 'fetter':19 'file':11 'handl':10 'line':3,17 'make':1 'two':15
8	2	0	4dcaccf5f373a6d12529a8e211627207	Report both the returned data and the command status tag for INSERT / UPDATE / DELETE RETURNING (Tom)	'command':8 'data':5 'delet':14 'insert':12 'report':1 'return':4,15 'status':9 'tag':10 'tom':16 'updat':13
8	2	0	bac1d2d628ab836b7443d82d66ce983a	Emit warnings for unknown configure options (Martijn van Oosterhout)	'configur':5 'emit':1 'martijn':7 'oosterhout':9 'option':6 'unknown':4 'van':8 'warn':2
8	2	0	6755e6e676cdbecb135dd982c2336e3d	Allow complex selection of objects to be included or excluded by pg_dump (Greg Sabino Mullane) pg_dump now supports multiple -n (schema) and -t (table) options, and adds -N and -T options to exclude objects. Also, the arguments of these switches can now be wild-card expressions rather than single object names, for example -t 'foo*' , and a schema can be part of a -t or -T switch, for example -t schema1.table1 .	'add':29 'allow':1 'also':37 'argument':39 'card':48 'complex':2 'dump':13,18 'exampl':56,72 'exclud':10,35 'express':49 'foo':58 'greg':14 'includ':8 'mullan':16 'multipl':21 'n':22,30 'name':54 'object':5,36,53 'option':27,33 'part':64 'pg':12,17 'rather':50 'sabino':15 'schema':23,61 'schema1.table1':74 'select':3 'singl':52 'support':20 'switch':42,70 'tabl':26 'wild':47 'wild-card':46
8	2	0	c6f5148ce22e0c5b04757424cd02d139	Add pg_freespacemap module to display free space map information (Mark Kirkwood)	'add':1 'display':6 'free':7 'freespacemap':3 'inform':10 'kirkwood':12 'map':9 'mark':11 'modul':4 'pg':2 'space':8
8	2	0	fbb583eab7d58346d2890a0f340e9ded	Add pg_restore --no-data-for-failed-tables option to suppress loading data if table creation failed (i.e., the table already exists) (Martin Pitt)	'add':1 'alreadi':22 'creation':17 'data':6,14 'exist':23 'fail':8,18 'i.e':19 'load':13 'martin':24 'no-data-for-failed-t':4 'option':10 'pg':2 'pitt':25 'restor':3 'suppress':12 'tabl':9,16,21
8	2	0	1632e5c70ec7b74896e1fa99ca9ee86e	Add pg_restore option to run the entire session in a single transaction (Simon) Use option -1 or --single-transaction .	'-1':17 'add':1 'entir':8 'option':4,16 'pg':2 'restor':3 'run':6 'session':9 'simon':14 'singl':12,20 'single-transact':19 'transact':13,21 'use':15
8	2	0	6786e33a65a341571f29b2537df72fd4	Add PQencryptPassword() to encrypt passwords (Tom) This allows passwords to be sent pre-encrypted for commands like ALTER ROLE ... PASSWORD .	'add':1 'allow':8 'alter':19 'command':17 'encrypt':4,15 'like':18 'password':5,9,21 'pqencryptpassword':2 'pre':14 'pre-encrypt':13 'role':20 'sent':12 'tom':6
8	2	0	e428233419985847d9a013fd09fc6ec4	Add function PQisthreadsafe() (Bruce) This allows applications to query the thread-safety status of the library.	'add':1 'allow':6 'applic':7 'bruce':4 'function':2 'librari':17 'pqisthreadsaf':3 'queri':9 'safeti':13 'status':14 'thread':12 'thread-safeti':11
8	2	0	d109be15975c2374b2c1ef79e2f4bb5e	Add PQdescribePrepared() , PQdescribePortal() , and related functions to return information about previously prepared statements and open cursors (Volkan YAZICI)	'add':1 'cursor':16 'function':6 'inform':9 'open':15 'pqdescribeport':3 'pqdescribeprepar':2 'prepar':12 'previous':11 'relat':5 'return':8 'statement':13 'volkan':17 'yazici':18
8	2	0	d0cf641debb8fd8b74dd9e86847c65dd	Allow LDAP lookups from pg_service.conf (Laurenz Albe)	'alb':8 'allow':1 'laurenz':7 'ldap':2 'lookup':3 'pg':5 'service.conf':6
8	2	0	55d34683e501bbb49c9132c86daf95b0	Allow a hostname in ~/.pgpass to match the default socket directory (Bruce) A blank hostname continues to match any Unix-socket connection, but this addition allows entries that are specific to one of several postmasters on the machine.	'/.pgpass':5 'addit':26 'allow':1,27 'blank':14 'bruce':12 'connect':23 'continu':16 'default':9 'directori':11 'entri':28 'hostnam':3,15 'machin':39 'match':7,18 'one':33 'postmast':36 'sever':35 'socket':10,22 'specif':31 'unix':21 'unix-socket':20
8	2	0	7b021484af9a01465ab28c0f33142626	Allow SHOW to put its result into a variable (Joachim Wieland)	'allow':1 'joachim':10 'put':4 'result':6 'show':2 'variabl':9 'wieland':11
8	2	0	a33d4a1aa70ede3e4808aad60f24cde9	Add COPY TO STDOUT (Joachim Wieland)	'add':1 'copi':2 'joachim':5 'stdout':4 'wieland':6
8	2	0	750af4ae9bf6b4abc663734fbc5385ca	Add regression tests (Joachim Wieland, Michael)	'add':1 'joachim':4 'michael':6 'regress':2 'test':3 'wieland':5
8	2	0	93d7db0fbc6a69a4e10e705bc1d035a8	Major source code cleanups (Joachim Wieland, Michael)	'cleanup':4 'code':3 'joachim':5 'major':1 'michael':7 'sourc':2 'wieland':6
8	2	0	9dee393c67b1853738841d6e3dac849d	Add GIN (Generalized Inverted iNdex) index access method (Teodor, Oleg)	'access':7 'add':1 'general':3 'gin':2 'index':5,6 'invert':4 'method':8 'oleg':10 'teodor':9
8	2	0	b3884e58f291a1503c46d2b237c4851a	Remove R-tree indexing (Tom) Rtree has been re-implemented using GiST . Among other differences, this means that rtree indexes now have support for crash recovery via write-ahead logging (WAL).	'ahead':32 'among':15 'crash':27 'differ':17 'gist':14 'implement':12 'index':5,22 'log':33 'mean':19 'r':3 'r-tree':2 're':11 're-impl':10 'recoveri':28 'remov':1 'rtree':7,21 'support':25 'tom':6 'tree':4 'use':13 'via':29 'wal':34 'write':31 'write-ahead':30
8	2	0	9cc3e73295afe172fc55d16de88f4a76	Reduce libraries needlessly linked into the backend (Martijn van Oosterhout, Tom)	'backend':7 'librari':2 'link':4 'martijn':8 'needless':3 'oosterhout':10 'reduc':1 'tom':11 'van':9
8	2	0	bc52339ad40c3e6c1649843a9c437e26	Add a configure flag to allow libedit to be preferred over GNU readline (Bruce) Use configure --with-libedit-preferred .	'add':1 'allow':6 'bruce':14 'configur':3,16 'flag':4 'gnu':12 'libedit':7,19 'prefer':10,20 'readlin':13 'use':15 'with-libedit-pref':17
8	2	0	640ecfeb8c3d138941c2c0cb49c93532	Allow installation into directories containing spaces (Peter)	'allow':1 'contain':5 'directori':4 'instal':2 'peter':7 'space':6
8	2	0	e2bd4f1baa974be16b9a4b2a5c572f35	Improve ability to relocate installation directories (Tom)	'abil':2 'directori':6 'improv':1 'instal':5 'reloc':4 'tom':7
8	2	0	94874d91b5a554037fd377bd7c3e2253	Add support for Solaris x86_64 using the Solaris compiler (Pierre Girard, Theo Schlossnagle, Bruce)	'64':6 'add':1 'bruce':15 'compil':10 'girard':12 'pierr':11 'schlossnagl':14 'solari':4,9 'support':2 'theo':13 'use':7 'x86':5
8	2	0	b2a8dbacfbb9bf23690b644f37d37c1a	Add DTrace support (Robert Lor)	'add':1 'dtrace':2 'lor':5 'robert':4 'support':3
8	2	0	408a552e3f90099bd56fcd70b31dde4c	Add PG_VERSION_NUM for use by third-party applications wanting to test the backend version in C using &gt; and &lt; comparisons (Bruce)	'add':1 'applic':11 'backend':16 'bruce':23 'c':19 'comparison':22 'num':4 'parti':10 'pg':2 'test':14 'third':9 'third-parti':8 'use':6,20 'version':3,17 'want':12
8	2	0	e48521643cda6fc8234c9e848592d637	Add XLOG_BLCKSZ as independent from BLCKSZ (Mark Wong)	'add':1 'blcksz':3,7 'independ':5 'mark':8 'wong':9 'xlog':2
8	2	0	773a177ae57e1829a6e375d7a1864e08	Add LWLOCK_STATS define to report locking activity (Tom)	'activ':8 'add':1 'defin':4 'lock':7 'lwlock':2 'report':6 'stat':3 'tom':9
8	2	0	17b234d4e838d6dac8b1c145123a570f	pgcrypto now has all planned functionality (Marko Kreen) Include iMath library in pgcrypto to have the public-key encryption functions always available.	'alway':22 'avail':23 'encrypt':20 'function':6,21 'imath':10 'includ':9 'key':19 'kreen':8 'librari':11 'marko':7 'pgcrypto':1,13 'plan':5 'public':18 'public-key':17
8	2	0	0efe1fb8ddc426c1b920ac58b20db090	Add SHA224 algorithm that was missing in OpenBSD code.	'add':1 'algorithm':3 'code':9 'miss':6 'openbsd':8 'sha224':2
8	2	0	d676326cd9d9463bfa4e3d3eea6e1d78	Add server support for plugin libraries that can be used for add-on tasks such as debugging and performance measurement (Korry Douglas) This consists of two features: a table of rendezvous variables that allows separately-loaded shared libraries to communicate, and a new configuration parameter local_preload_libraries that allows libraries to be loaded into specific sessions without explicit cooperation from the client application. This allows external add-ons to implement features such as a PL/PgSQL debugger.	'add':1,13,71 'add-on':12,70 'allow':35,52,68 'applic':66 'client':65 'communic':42 'configur':46 'consist':25 'cooper':62 'debug':18 'debugg':80 'dougla':23 'explicit':61 'extern':69 'featur':28,75 'implement':74 'korri':22 'librari':6,40,50,53 'load':38,56 'local':48 'measur':21 'new':45 'on':72 'paramet':47 'perform':20 'pl/pgsql':79 'plugin':5 'preload':49 'rendezv':32 'separ':37 'separately-load':36 'server':2 'session':59 'share':39 'specif':58 'support':3 'tabl':30 'task':15 'two':27 'use':10 'variabl':33 'without':60
8	2	0	b3e11d7f0b15758d69bc8ee392a56db1	Rename existing configuration parameter preload_libraries to shared_preload_libraries (Tom) This was done for clarity in comparison to local_preload_libraries .	'clariti':16 'comparison':18 'configur':3 'done':14 'exist':2 'librari':6,10,22 'local':20 'paramet':4 'preload':5,9,21 'renam':1 'share':8 'tom':11
8	2	0	969809538b8d91caa1666fe109c233e2	Add new configuration parameter server_version_num (Greg Sabino Mullane) This is like server_version , but is an integer, e.g. 80200 . This allows applications to make version checks more easily.	'80200':21 'add':1 'allow':23 'applic':24 'check':28 'configur':3 'e.g':20 'easili':30 'greg':8 'integ':19 'like':13 'make':26 'mullan':10 'new':2 'num':7 'paramet':4 'sabino':9 'server':5,14 'version':6,15,27
8	2	0	4ddaf81919208dcc7dd3b4de90530055	Add a configuration parameter seq_page_cost (Tom)	'add':1 'configur':3 'cost':7 'page':6 'paramet':4 'seq':5 'tom':8
8	2	0	fd8e6f8b2b548633c6c33be45bcd8368	Re-implement the regression test script as a C program (Magnus, Tom)	'c':10 'implement':3 'magnus':12 'program':11 're':2 're-impl':1 'regress':5 'script':7 'test':6 'tom':13
8	2	0	6d41a47b60cdf294f9cf6e932201552d	Allow loadable modules to allocate shared memory and lightweight locks (Marc Munro)	'alloc':5 'allow':1 'lightweight':9 'loadabl':2 'lock':10 'marc':11 'memori':7 'modul':3 'munro':12 'share':6
8	2	0	d9450dab3454d904cd652e0373fee9aa	Add automatic initialization and finalization of dynamically loaded libraries (Ralf Engelschall, Tom) New functions _PG_init() and _PG_fini() are called if the library defines such symbols. Hence we no longer need to specify an initialization function in shared_preload_libraries ; we can assume that the library used the _PG_init() convention instead.	'add':1 'assum':44 'automat':2 'call':21 'convent':52 'defin':25 'dynam':7 'engelschal':11 'final':5 'fini':19 'function':14,37 'henc':28 'init':16,51 'initi':3,36 'instead':53 'librari':9,24,41,47 'load':8 'longer':31 'need':32 'new':13 'pg':15,18,50 'preload':40 'ralf':10 'share':39 'specifi':34 'symbol':27 'tom':12 'use':48
8	2	0	425bd6fce9dfe0fd58117229db318f98	Add PG_MODULE_MAGIC header block to all shared object files (Martijn van Oosterhout) The magic block prevents version mismatches between loadable object files and servers.	'add':1 'block':6,17 'file':11,24 'header':5 'loadabl':22 'magic':4,16 'martijn':12 'mismatch':20 'modul':3 'object':10,23 'oosterhout':14 'pg':2 'prevent':18 'server':26 'share':9 'van':13 'version':19
8	2	0	6d8ea62f6b9317853fc1d4e2a4bc98af	Add shared library support for AIX (Laurenz Albe)	'add':1 'aix':6 'alb':8 'laurenz':7 'librari':3 'share':2 'support':4
8	2	0	407cb3e3e1e896a37e443126364e0758	New XML documentation section (Bruce)	'bruce':5 'document':3 'new':1 'section':4 'xml':2
8	2	0	f08574978258971cf16aac18f5c77275	Major tsearch2 improvements (Oleg, Teodor) multibyte encoding support, including UTF8	'encod':7 'improv':3 'includ':9 'major':1 'multibyt':6 'oleg':4 'support':8 'teodor':5 'tsearch2':2 'utf8':10
8	2	0	0f8bceb25e7be21a3da1a94f5d007852	query rewriting support	'queri':1 'rewrit':2 'support':3
8	2	0	99c8957cd1c807d962f53e16e66e6168	improved ranking functions	'function':3 'improv':1 'rank':2
8	2	0	629905831592f8fe21b4dcff68f498d5	thesaurus dictionary support	'dictionari':2 'support':3 'thesaurus':1
8	2	0	4088391a9b5fe006063f6e3e6d7f1286	Ispell dictionaries now recognize MySpell format, used by OpenOffice	'dictionari':2 'format':6 'ispel':1 'myspel':5 'openoffic':9 'recogn':4 'use':7
8	2	0	a2dd8caa23f0328906f38eb4a9683380	GIN support	'gin':1 'support':2
8	2	0	f8f8d32d295ee7b5b7d01cf7ec0a339d	Add adminpack module containing Pgadmin administration functions (Dave) These functions provide additional file system access routines not present in the default PostgreSQL server.	'access':15 'add':1 'addit':12 'administr':6 'adminpack':2 'contain':4 'dave':8 'default':21 'file':13 'function':7,10 'modul':3 'pgadmin':5 'postgresql':22 'present':18 'provid':11 'routin':16 'server':23 'system':14
8	2	0	a341be3bcecb3482df5fbcc4f4b2022b	Add sslinfo module (Victor Wagner) Reports information about the current connection's SSL certificate.	'add':1 'certif':14 'connect':11 'current':10 'inform':7 'modul':3 'report':6 'ssl':13 'sslinfo':2 'victor':4 'wagner':5
8	2	0	b01c51df668cc61ea5a4d30a92828465	Add pgrowlocks module (Tatsuo) This shows row locking information for a specified table.	'add':1 'inform':9 'lock':8 'modul':3 'pgrowlock':2 'row':7 'show':6 'specifi':12 'tabl':13 'tatsuo':4
8	2	0	69cf5a9bd2305536e196bbe6cbd2e777	Add hstore module (Oleg, Teodor)	'add':1 'hstore':2 'modul':3 'oleg':4 'teodor':5
8	2	0	d41c6fd8b1c8338b8e9606200d54d518	Add isn module, replacing isbn_issn (Jeremy Kronuz) This new implementation supports EAN13 , UPC , ISBN (books), ISMN (music), and ISSN (serials).	'add':1 'book':16 'ean13':13 'implement':11 'isbn':5,15 'ismn':17 'isn':2 'issn':6,20 'jeremi':7 'kronuz':8 'modul':3 'music':18 'new':10 'replac':4 'serial':21 'support':12 'upc':14
8	2	0	e49c36a5907979490ac1e5967c38eff0	Add index information functions to pgstattuple (ITAGAKI Takahiro, Satoshi Nagayasu)	'add':1 'function':4 'index':2 'inform':3 'itagaki':7 'nagayasu':10 'pgstattupl':6 'satoshi':9 'takahiro':8
8	2	0	c874e5b4f06dd359df24a805a3abceee	Activate builtin code for SHA224/256/384/512 hashes on older OpenSSL to have those algorithms always available.	'activ':1 'algorithm':13 'alway':14 'avail':15 'builtin':2 'code':3 'hash':6 'older':8 'openssl':9 'sha224/256/384/512':5
8	2	0	db1ad901a1af178a51034d2a4d69157c	New function gen_random_bytes() that returns cryptographically strong randomness. Useful for generating encryption keys.	'byte':5 'cryptograph':8 'encrypt':14 'function':2 'gen':3 'generat':13 'key':15 'new':1 'random':4,10 'return':7 'strong':9 'use':11
8	2	0	f6e8a46c8e20de96e5ed6dca0ab5e57a	Remove digest_exists(), hmac_exists() and cipher_exists() functions.	'cipher':7 'digest':2 'exist':3,5,8 'function':9 'hmac':4 'remov':1
8	2	0	a6dbe29c81cdaae987f7f847bdd22ca9	Improvements to cube module (Joshua Reich) New functions are cube(float[]) , cube(float[], float[]) , and cube_subset(cube, int4[]) .	'cube':3,10,12,16,18 'float':11,13,14 'function':8 'improv':1 'int4':19 'joshua':5 'modul':4 'new':7 'reich':6 'subset':17
8	2	0	9b0962b83f5f7d8409e3c76b92c070c3	Add async query capability to dblink (Kai Londenberg, Joe Conway)	'add':1 'async':2 'capabl':4 'conway':10 'dblink':6 'joe':9 'kai':7 'londenberg':8 'queri':3
8	2	0	1127ebd31421c0adbcfa31263e702899	New operators for array-subset comparisons ( @&gt; , &lt;@ , &amp;&amp; ) (Tom) Various contrib packages already had these operators for their datatypes, but the naming wasn't consistent. We have now added consistently named array-subset comparison operators to the core code and all the contrib packages that have such functionality. (The old names remain available, but are deprecated.)	'ad':28 'alreadi':12 'array':5,32 'array-subset':4,31 'avail':53 'code':39 'comparison':7,34 'consist':24,29 'contrib':10,43 'core':38 'datatyp':18 'deprec':56 'function':48 'name':21,30,51 'new':1 'old':50 'oper':2,15,35 'packag':11,44 'remain':52 'subset':6,33 'tom':8 'various':9 'wasn':22
8	2	0	49c5f318aa99e772672a75699c8f6586	Add uninstall scripts for all contrib packages that have install scripts (David, Josh Drake)	'add':1 'contrib':6 'david':12 'drake':14 'instal':10 'josh':13 'packag':7 'script':3,11 'uninstal':2
8	3	7	823a5ca6b2bbd23f7396677c912fcb2a	Prevent error recursion crashes when encoding conversion fails (Tom) This change extends fixes made in the last two minor releases for related failure scenarios. The previous fixes were narrowly tailored for the original problem reports, but we have now recognized that any error thrown by an encoding conversion function could potentially lead to infinite recursion while trying to report the error. The solution therefore is to disable translation and encoding conversion and report the plain-ASCII form of any error message, if we find we have gotten into a recursive error reporting situation. (CVE-2009-0922)	'-0922':97 '-2009':96 'ascii':77 'chang':11 'convers':7,48,71 'could':50 'crash':4 'cve':95 'disabl':67 'encod':6,47,70 'error':2,43,61,81,92 'extend':12 'fail':8 'failur':23 'find':85 'fix':13,27 'form':78 'function':49 'gotten':88 'infinit':54 'last':17 'lead':52 'made':14 'messag':82 'minor':19 'narrowli':29 'origin':33 'plain':76 'plain-ascii':75 'potenti':51 'prevent':1 'previous':26 'problem':34 'recogn':40 'recurs':3,55,91 'relat':22 'releas':20 'report':35,59,73,93 'scenario':24 'situat':94 'solut':63 'tailor':30 'therefor':64 'thrown':44 'tom':9 'translat':68 'tri':57 'two':18
8	3	7	029dd667f0b3c50067008fadae2d5c39	Disallow CREATE CONVERSION with the wrong encodings for the specified conversion function (Heikki) This prevents one possible scenario for encoding conversion failure. The previous change is a backstop to guard against other kinds of failures in the same area.	'area':39 'backstop':28 'chang':25 'convers':3,11,21 'creat':2 'disallow':1 'encod':7,20 'failur':22,35 'function':12 'guard':30 'heikki':13 'kind':33 'one':16 'possibl':17 'prevent':15 'previous':24 'scenario':18 'specifi':10 'wrong':6
8	3	7	ffa2a73790215ba3d40a7fa5168cebf4	Fix xpath() to not modify the path expression unless necessary, and to make a saner attempt at it when necessary (Andrew) The SQL standard suggests that xpath should work on data that is a document fragment, but libxml doesn't support that, and indeed it's not clear that this is sensible according to the XPath standard. xpath attempted to work around this mismatch by modifying both the data and the path expression, but the modification was buggy and could cause valid searches to fail. Now, xpath checks whether the data is in fact a well-formed document, and if so invokes libxml with no change to the data or path expression. Otherwise, a different modification method that is somewhat less likely to fail is used. The new modification method is still not 100% satisfactory, and it seems likely that no real solution is possible. This patch should therefore be viewed as a band-aid to keep from breaking existing applications unnecessarily. It is likely that PostgreSQL 8.4 will simply reject use of xpath on data that is not a well-formed document.	'100':135 '8.4':170 'accord':53 'aid':157 'andrew':21 'applic':163 'around':62 'attempt':16,59 'band':156 'band-aid':155 'break':161 'buggi':78 'caus':81 'chang':107 'check':88 'clear':48 'could':80 'data':31,69,91,110,178 'differ':116 'document':35,99,186 'doesn':39 'exist':162 'express':8,73,113 'fact':94 'fail':85,125 'fix':1 'form':98,185 'fragment':36 'inde':44 'invok':103 'keep':159 'less':122 'libxml':38,104 'like':123,140,167 'make':13 'method':118,131 'mismatch':64 'modif':76,117,130 'modifi':5,66 'necessari':10,20 'new':129 'otherwis':114 'patch':148 'path':7,72,112 'possibl':146 'postgresql':169 'real':143 'reject':173 'saner':15 'satisfactori':136 'search':83 'seem':139 'sensibl':52 'simpli':172 'solut':144 'somewhat':121 'sql':23 'standard':24,57 'still':133 'suggest':25 'support':41 'therefor':150 'unless':9 'unnecessarili':164 'use':127,174 'valid':82 'view':152 'well':97,184 'well-form':96,183 'whether':89 'work':29,61 'xpath':2,27,56,58,87,176
8	3	7	c57ebc9c3b373992f1a0ed31f9e15011	Fix core dump when to_char() is given format codes that are inappropriate for the type of the data argument (Tom)	'argument':20 'char':6 'code':10 'core':2 'data':19 'dump':3 'fix':1 'format':9 'given':8 'inappropri':13 'tom':21 'type':16
8	3	7	7f35dc3f6d78ac24027c7bd8b975b000	Fix possible failure in text search when C locale is used with a multi-byte encoding (Teodor) Crashes were possible on platforms where wchar_t is narrower than int ; Windows in particular.	'byte':16 'c':8 'crash':19 'encod':17 'failur':3 'fix':1 'int':30 'local':9 'multi':15 'multi-byt':14 'narrow':28 'particular':33 'platform':23 'possibl':2,21 'search':6 'teodor':18 'text':5 'use':11 'wchar':25 'window':31
8	3	7	f1612028e33223fd95e7bbcf654fc238	Fix extreme inefficiency in text search parser's handling of an email-like string containing multiple @ characters (Heikki)	'charact':18 'contain':16 'email':13 'email-lik':12 'extrem':2 'fix':1 'handl':9 'heikki':19 'ineffici':3 'like':14 'multipl':17 'parser':7 'search':6 'string':15 'text':5
8	3	7	a1771977ebebb201eaa781ecf28f8d8c	Fix planner problem with sub- SELECT in the output list of a larger subquery (Tom) The known symptom of this bug is a failed to locate grouping columns error that is dependent on the datatype involved; but there could be other issues as well.	'bug':21 'column':28 'could':39 'datatyp':35 'depend':32 'error':29 'fail':24 'fix':1 'group':27 'involv':36 'issu':42 'known':17 'larger':13 'list':10 'locat':26 'output':9 'planner':2 'problem':3 'select':6 'sub':5 'subqueri':14 'symptom':18 'tom':15 'well':44
8	3	7	c74bc370db7edd8327e6beef7b43c846	Fix decompilation of CASE WHEN with an implicit coercion (Tom) This mistake could lead to Assert failures in an Assert-enabled build, or an unexpected CASE WHEN clause error message in other cases, when trying to examine or dump a view.	'assert':16,21 'assert-en':20 'build':23 'case':4,27,34 'claus':29 'coercion':9 'could':13 'decompil':2 'dump':40 'enabl':22 'error':30 'examin':38 'failur':17 'fix':1 'implicit':8 'lead':14 'messag':31 'mistak':12 'tom':10 'tri':36 'unexpect':26 'view':42
8	3	7	4fc7778c1973bf1c60b123ebbdea9e37	Fix possible misassignment of the owner of a TOAST table's rowtype (Tom) If CLUSTER or a rewriting variant of ALTER TABLE were executed by someone other than the table owner, the pg_type entry for the table's TOAST table would end up marked as owned by that someone. This caused no immediate problems, since the permissions on the TOAST rowtype aren't examined by any ordinary database operation. However, it could lead to unexpected failures if one later tried to drop the role that issued the command (in 8.1 or 8.2), or owner of data type appears to be invalid warnings from pg_dump after having done so (in 8.3).	'8.1':91 '8.2':93 '8.3':112 'alter':21 'appear':99 'aren':63 'caus':52 'cluster':15 'command':89 'could':73 'data':97 'databas':69 'done':109 'drop':83 'dump':106 'end':43 'entri':35 'examin':65 'execut':24 'failur':77 'fix':1 'howev':71 'immedi':54 'invalid':102 'issu':87 'later':80 'lead':74 'mark':45 'misassign':3 'one':79 'oper':70 'ordinari':68 'own':47 'owner':6,31,95 'permiss':58 'pg':33,105 'possibl':2 'problem':55 'rewrit':18 'role':85 'rowtyp':12,62 'sinc':56 'someon':26,50 'tabl':10,22,30,38,41 'toast':9,40,61 'tom':13 'tri':81 'type':34,98 'unexpect':76 'variant':19 'warn':103 'would':42
8	3	7	cc0db7382c0b2b1f730f7547229d8a9b	Change UNLISTEN to exit quickly if the current session has never executed any LISTEN command (Tom) Most of the time this is not a particularly useful optimization, but since DISCARD ALL invokes UNLISTEN , the previous coding caused a substantial performance problem for applications that made heavy use of DISCARD ALL .	'applic':43 'caus':37 'chang':1 'code':36 'command':15 'current':8 'discard':30,49 'execut':12 'exit':4 'heavi':46 'invok':32 'listen':14 'made':45 'never':11 'optim':27 'particular':25 'perform':40 'previous':35 'problem':41 'quick':5 'session':9 'sinc':29 'substanti':39 'time':20 'tom':16 'unlisten':2,33 'use':26,47
8	3	7	e39949b32ec60a2d388b4cb259b33bc9	Fix PL/pgSQL to not treat INTO after INSERT as an INTO-variables clause anywhere in the string, not only at the start; in particular, don't fail for INSERT INTO within CREATE RULE (Tom)	'anywher':15 'claus':14 'creat':33 'fail':28 'fix':1 'insert':8,30 'into-vari':11 'particular':25 'pl/pgsql':2 'rule':34 'start':23 'string':18 'tom':35 'treat':5 'variabl':13 'within':32
8	3	7	92f2632bd47e2327831630c10b927b5c	Clean up PL/pgSQL error status variables fully at block exit (Ashesh Vashi and Dave Page) This is not a problem for PL/pgSQL itself, but the omission could cause the PL/pgSQL Debugger to crash while examining the state of a function.	'ashesh':11 'block':9 'caus':28 'clean':1 'could':27 'crash':33 'dave':14 'debugg':31 'error':4 'examin':35 'exit':10 'fulli':7 'function':40 'omiss':26 'page':15 'pl/pgsql':3,22,30 'problem':20 'state':37 'status':5 'variabl':6 'vashi':12
8	3	7	3862fbefa5c0092aad950d5c63d13611	Retry failed calls to CallNamedPipe() on Windows (Steve Marshall, Magnus) It appears that this function can sometimes fail transiently; we previously treated any failure as a hard error, which could confuse LISTEN / NOTIFY as well as other operations.	'appear':12 'call':3 'callnamedpip':5 'confus':31 'could':30 'error':28 'fail':2,18 'failur':24 'function':15 'hard':27 'listen':32 'magnus':10 'marshal':9 'notifi':33 'oper':38 'previous':21 'retri':1 'sometim':17 'steve':8 'transient':19 'treat':22 'well':35 'window':7
8	3	7	16364a26b80915323dd1cc503f14e851	Add MUST (Mauritius Island Summer Time) to the default list of known timezone abbreviations (Xavier Bugaud)	'abbrevi':14 'add':1 'bugaud':16 'default':9 'island':4 'known':12 'list':10 'mauritius':3 'must':2 'summer':5 'time':6 'timezon':13 'xavier':15
8	3	6	d244b2bb47831a65e8a81e68ccb70b45	Make DISCARD ALL release advisory locks, in addition to everything it already did (Tom) This was decided to be the most appropriate behavior. This could affect existing applications, however.	'addit':8 'advisori':5 'affect':26 'alreadi':12 'applic':28 'appropri':22 'behavior':23 'could':25 'decid':17 'discard':2 'everyth':10 'exist':27 'howev':29 'lock':6 'make':1 'releas':4 'tom':14
8	3	6	7eb8b46b2eb9badd770de8a17cd2c66f	Fix whole-index GiST scans to work correctly (Teodor) This error could cause rows to be lost if a table is clustered on a GiST index.	'caus':14 'cluster':23 'correct':9 'could':13 'error':12 'fix':1 'gist':5,26 'index':4,27 'lost':18 'row':15 'scan':6 'tabl':21 'teodor':10 'whole':3 'whole-index':2 'work':8
8	3	6	6b694c9eda7551663188cf74552c1eba	Fix crash of xmlconcat(NULL) (Peter)	'crash':2 'fix':1 'null':5 'peter':6 'xmlconcat':4
8	3	6	297e9f71d192d42348128436af117815	Fix encoding conversion problems in XML functions when the database encoding isn't UTF-8 (Tom)	'-8':15 'convers':3 'databas':10 'encod':2,11 'fix':1 'function':7 'isn':12 'problem':4 'tom':16 'utf':14 'xml':6
8	3	6	b22cd758012d48291431b87c8675b4c2	Fix possible crash in ispell dictionary if high-bit-set characters are used as flags (Teodor) This is known to be done by one widely available Norwegian dictionary, and the same condition may exist in others.	'avail':27 'bit':10 'charact':12 'condit':33 'crash':3 'dictionari':6,29 'done':23 'exist':35 'fix':1 'flag':16 'high':9 'high-bit-set':8 'ispel':5 'known':20 'may':34 'norwegian':28 'one':25 'other':37 'possibl':2 'set':11 'teodor':17 'use':14 'wide':26
8	3	6	7168617281d6e823a07c2dad340ae5ee	Fix possible mis-signaling in autovacuum (Heikki)	'autovacuum':7 'fix':1 'heikki':8 'mis':4 'mis-sign':3 'possibl':2 'signal':5
8	3	6	d1a7dd340f95f62d839d1c4663fa7b10	Fix misordering of pg_dump output for composite types (Tom) The most likely problem was for user-defined operator classes to be dumped after indexes or views that needed them.	'class':21 'composit':8 'defin':19 'dump':5,24 'fix':1 'index':26 'like':13 'misord':2 'need':30 'oper':20 'output':6 'pg':4 'problem':14 'tom':10 'type':9 'user':18 'user-defin':17 'view':28
8	3	6	43d54f6f6facad24a74fae2bf1fc594a	Improve handling of URLs in headline() function (Teodor)	'function':7 'handl':2 'headlin':6 'improv':1 'teodor':8 'url':4
8	3	6	b7a30488addd44acfd80b1a32536ed98	Improve handling of overlength headlines in headline() function (Teodor)	'function':8 'handl':2 'headlin':5,7 'improv':1 'overlength':4 'teodor':9
8	3	6	6c4bde05922323122598c20e06c184ff	Prevent possible Assert failure or misconversion if an encoding conversion is created with the wrong conversion function for the specified pair of encodings (Tom, Heikki)	'assert':3 'convers':10,16 'creat':12 'encod':9,23 'failur':4 'function':17 'heikki':25 'misconvers':6 'pair':21 'possibl':2 'prevent':1 'specifi':20 'tom':24 'wrong':15
8	3	6	0f5199ba74761316278655b6f32aa2c0	Fix possible Assert failure if a statement executed in PL/pgSQL is rewritten into another kind of statement, for example if an INSERT is rewritten into an UPDATE (Heikki)	'anoth':14 'assert':3 'exampl':19 'execut':8 'failur':4 'fix':1 'heikki':28 'insert':22 'kind':15 'pl/pgsql':10 'possibl':2 'rewritten':12,24 'statement':7,17 'updat':27
8	3	6	1d4f21ca7dcc18a5d83867bc4edeb15c	Ensure that a snapshot is available to datatype input functions (Tom) This primarily affects domains that are declared with CHECK constraints involving user-defined stable or immutable functions. Such functions typically fail if no snapshot has been set.	'affect':14 'avail':6 'check':20 'constraint':21 'datatyp':8 'declar':18 'defin':25 'domain':15 'ensur':1 'fail':33 'function':10,29,31 'immut':28 'input':9 'involv':22 'primarili':13 'set':39 'snapshot':4,36 'stabl':26 'tom':11 'typic':32 'user':24 'user-defin':23
8	3	6	f75ec54055b09d14b7c7077164513e49	Make it safer for SPI-using functions to be used within datatype I/O; in particular, to be used in domain check constraints (Tom)	'check':22 'constraint':23 'datatyp':13 'domain':21 'function':8 'i/o':14 'make':1 'particular':16 'safer':3 'spi':6 'spi-us':5 'tom':24 'use':7,11,19 'within':12
8	3	6	ee82c3df361cb89bcd075dbbc6f1a63f	Avoid unnecessary locking of small tables in VACUUM (Heikki)	'avoid':1 'heikki':9 'lock':3 'small':5 'tabl':6 'unnecessari':2 'vacuum':8
8	3	6	bf99aeb679838badc170d05d7ffd7d74	Fix a problem that sometimes kept ALTER TABLE ENABLE/DISABLE RULE from being recognized by active sessions (Tom)	'activ':15 'alter':7 'enable/disable':9 'fix':1 'kept':6 'problem':3 'recogn':13 'rule':10 'session':16 'sometim':5 'tabl':8 'tom':17
8	3	6	fba962dfae3687fb56553fbacc8abc05	Fix a problem that made UPDATE RETURNING tableoid return zero instead of the correct OID (Tom)	'correct':14 'fix':1 'instead':11 'made':5 'oid':15 'problem':3 'return':7,9 'tableoid':8 'tom':16 'updat':6 'zero':10
8	3	6	ed96f72846ecd83eea6db9e318589bb7	Allow functions declared as taking ANYARRAY to work on the pg_statistic columns of that type (Tom) This used to work, but was unintentionally broken in 8.3.	'8.3':27 'allow':1 'anyarray':6 'broken':25 'column':13 'declar':3 'function':2 'pg':11 'statist':12 'take':5 'tom':17 'type':16 'unintent':24 'use':19 'work':8,21
8	3	6	dd4f3d3444521a74ec6d7dde8d21b861	Fix planner misestimation of selectivity when transitive equality is applied to an outer-join clause (Tom) This could result in bad plans for queries like ... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...	'42':37 'a.a1':33,36 'appli':10 'b':31 'b.b1':34 'bad':22 'claus':16 'could':19 'equal':8 'fix':1 'join':15,30 'left':29 'like':26 'misestim':3 'outer':14 'outer-join':13 'plan':23 'planner':2 'queri':25 'result':20 'select':5 'tom':17 'transit':7
8	3	6	626c724f34366a51f1189d9ee636e5db	Improve optimizer's handling of long IN lists (Tom) This change avoids wasting large amounts of time on such lists when constraint exclusion is enabled.	'amount':15 'avoid':12 'chang':11 'constraint':22 'enabl':25 'exclus':23 'handl':4 'improv':1 'larg':14 'list':8,20 'long':6 'optim':2 'time':17 'tom':9 'wast':13
8	3	6	4a2fcb0e78953ec10ee354718942991a	Prevent synchronous scan during GIN index build (Tom) Because GIN is optimized for inserting tuples in increasing TID order, choosing to use a synchronous scan could slow the build by a factor of three or more.	'build':7,29 'choos':20 'could':26 'factor':32 'gin':5,10 'increas':17 'index':6 'insert':14 'optim':12 'order':19 'prevent':1 'scan':3,25 'slow':27 'synchron':2,24 'three':34 'tid':18 'tom':8 'tupl':15 'use':22
8	3	6	04f77799a591e5fa5c4d572e94f9e065	Ensure that the contents of a holdable cursor don't depend on the contents of TOAST tables (Tom) Previously, large field values in a cursor result might be represented as TOAST pointers, which would fail if the referenced table got dropped before the cursor is read, or if the large value is deleted and then vacuumed away. This cannot happen with an ordinary cursor, but it could with a cursor that is held past its creating transaction.	'away':57 'cannot':59 'content':4,14 'could':67 'creat':76 'cursor':8,25,44,64,70 'delet':53 'depend':11 'drop':41 'ensur':1 'fail':35 'field':21 'got':40 'happen':60 'held':73 'holdabl':7 'larg':20,50 'might':27 'ordinari':63 'past':74 'pointer':32 'previous':19 'read':46 'referenc':38 'repres':29 'result':26 'tabl':17,39 'toast':16,31 'tom':18 'transact':77 'vacuum':56 'valu':22,51 'would':34
8	3	6	e3de541b87f719e0e8b183ab966d5126	Fix memory leak when a set-returning function is terminated without reading its whole result (Tom)	'fix':1 'function':9 'leak':3 'memori':2 'read':13 'result':16 'return':8 'set':7 'set-return':6 'termin':11 'tom':17 'whole':15 'without':12
8	3	6	ea51301813d8da98ac58e5123c64c301	Fix contrib/dblink 's dblink_get_result(text,bool) function (Joe)	'bool':8 'contrib/dblink':2 'dblink':4 'fix':1 'function':9 'get':5 'joe':10 'result':6 'text':7
8	3	6	1f6e6a4212ab43cfc0038e4e9a544548	Fix incorrect behavior of contrib/tsearch2 compatibility trigger when it's fired more than once in a command (Teodor)	'behavior':3 'command':17 'compat':6 'contrib/tsearch2':5 'fire':11 'fix':1 'incorrect':2 'teodor':18 'trigger':7
8	3	6	fb022dd859d223813030f07f0f74b720	Fix configure script to properly report failure when unable to obtain linkage information for PL/Perl (Andrew)	'andrew':16 'configur':2 'failur':7 'fix':1 'inform':13 'linkag':12 'obtain':11 'pl/perl':15 'proper':5 'report':6 'script':3 'unabl':9
8	3	6	7dbc05bf9e4f556ca7d7446dd7b76cea	Make all documentation reference pgsql-bugs and/or pgsql-hackers as appropriate, instead of the now-decommissioned pgsql-ports and pgsql-patches mailing lists (Tom)	'and/or':8 'appropri':13 'bug':7 'decommiss':19 'document':3 'hacker':11 'instead':14 'list':28 'mail':27 'make':1 'now-decommiss':17 'patch':26 'pgsql':6,10,21,25 'pgsql-bug':5 'pgsql-hacker':9 'pgsql-patch':24 'pgsql-port':20 'port':22 'refer':4 'tom':29
8	3	6	a137f3d11406ba38e754a4441b9e6752	Update time zone data files to tzdata release 2009a (for Kathmandu and historical DST corrections in Switzerland, Cuba)	'2009a':9 'correct':15 'cuba':18 'data':4 'dst':14 'file':5 'histor':13 'kathmandu':11 'releas':8 'switzerland':17 'time':2 'tzdata':7 'updat':1 'zone':3
8	3	5	3ea6b093f857a02dc014a5619a4fa2ce	Fix GiST index corruption due to marking the wrong index entry dead after a deletion (Teodor) This would result in index searches failing to find rows they should have found. Corrupted indexes can be fixed with REINDEX .	'corrupt':4,31 'dead':12 'delet':15 'due':5 'entri':11 'fail':23 'find':25 'fix':1,35 'found':30 'gist':2 'index':3,10,21,32 'mark':7 'reindex':37 'result':19 'row':26 'search':22 'teodor':16 'would':18 'wrong':9
8	3	5	397c350d8275d5b104e3c065081708a7	Fix backend crash when the client encoding cannot represent a localized error message (Tom) We have addressed similar issues before, but it would still fail if the character has no equivalent message itself couldn't be converted. The fix is to disable localization and send the plain ASCII error message when we detect such a situation.	'address':17 'ascii':48 'backend':2 'cannot':8 'charact':28 'client':6 'convert':37 'couldn':34 'crash':3 'detect':53 'disabl':42 'encod':7 'equival':31 'error':12,49 'fail':25 'fix':1,39 'issu':19 'local':11,43 'messag':13,32,50 'plain':47 'repres':9 'send':45 'similar':18 'situat':56 'still':24 'tom':14 'would':23
8	3	5	b053ac7540b6b30d85141e30856b811d	Fix possible crash in bytea -to-XML mapping (Michael McMaster)	'bytea':5 'crash':3 'fix':1 'map':9 'mcmaster':11 'michael':10 'possibl':2 'to-xml':6 'xml':8
8	3	5	a9f7d93fbd56975e91b88bbe9416360c	Fix possible crash when deeply nested functions are invoked from a trigger (Tom)	'crash':3 'deepli':5 'fix':1 'function':7 'invok':9 'nest':6 'possibl':2 'tom':13 'trigger':12
8	3	5	f5b773bd93df79db4993988bd7091bd3	Improve optimization of expression IN ( expression-list ) queries (Tom, per an idea from Robert Haas) Cases in which there are query variables on the right-hand side had been handled less efficiently in 8.2.x and 8.3.x than in prior versions. The fix restores 8.1 behavior for such cases.	'8.1':48 '8.2':36 '8.3':39 'behavior':49 'case':17,52 'effici':34 'express':4,7 'expression-list':6 'fix':46 'haa':16 'hand':28 'handl':32 'idea':13 'improv':1 'less':33 'list':8 'optim':2 'per':11 'prior':43 'queri':9,22 'restor':47 'right':27 'right-hand':26 'robert':15 'side':29 'tom':10 'variabl':23 'version':44 'x':37,40
8	3	5	bfbb7a32dac504c80d0b92929e621400	Fix mis-expansion of rule queries when a sub- SELECT appears in a function call in FROM , a multi-row VALUES list, or a RETURNING list (Tom) The usual symptom of this problem is an unrecognized node type error.	'appear':12 'call':16 'error':41 'expans':4 'fix':1 'function':15 'list':24,28 'mis':3 'mis-expans':2 'multi':21 'multi-row':20 'node':39 'problem':35 'queri':7 'return':27 'row':22 'rule':6 'select':11 'sub':10 'symptom':32 'tom':29 'type':40 'unrecogn':38 'usual':31 'valu':23
8	3	5	e6d26c479029aec9c979a1a3f6ee6aa1	Fix Assert failure during rescan of an IS NULL search of a GiST index (Teodor)	'assert':2 'failur':3 'fix':1 'gist':13 'index':14 'null':9 'rescan':5 'search':10 'teodor':15
8	3	5	06f6ad3f2a5341ef3bdc6533ac7059c1	Fix memory leak during rescan of a hashed aggregation plan (Neil)	'aggreg':9 'fix':1 'hash':8 'leak':3 'memori':2 'neil':11 'plan':10 'rescan':5
8	3	5	5331107353ccbe0920d333113a7771a2	Ensure an error is reported when a newly-defined PL/pgSQL trigger function is invoked as a normal function (Tom)	'defin':10 'ensur':1 'error':3 'function':13,19 'invok':15 'newli':9 'newly-defin':8 'normal':18 'pl/pgsql':11 'report':5 'tom':20 'trigger':12
8	3	5	b8fa5e0d7f9bcdc55112188f193d31cf	Force a checkpoint before CREATE DATABASE starts to copy files (Heikki) This prevents a possible failure if files had recently been deleted in the source database.	'checkpoint':3 'copi':9 'creat':5 'databas':6,26 'delet':22 'failur':16 'file':10,18 'forc':1 'heikki':11 'possibl':15 'prevent':13 'recent':20 'sourc':25 'start':7
8	3	5	168bafae2d57952f1862ad2dc6fe3812	Prevent possible collision of relfilenode numbers when moving a table to another tablespace with ALTER SET TABLESPACE (Heikki) The command tried to re-use the existing filename, instead of picking one that is known unused in the destination directory.	'alter':15 'anoth':12 'collis':3 'command':20 'destin':39 'directori':40 'exist':27 'filenam':28 'heikki':18 'instead':29 'known':35 'move':8 'number':6 'one':32 'pick':31 'possibl':2 'prevent':1 're':24 're-us':23 'relfilenod':5 'set':16 'tabl':10 'tablespac':13,17 'tri':21 'unus':36 'use':25
8	3	5	203779db3edd74e7fa8a04f1dc4ad99e	Fix incorrect text search headline generation when single query item matches first word of text (Sushant Sinha)	'first':12 'fix':1 'generat':6 'headlin':5 'incorrect':2 'item':10 'match':11 'queri':9 'search':4 'singl':8 'sinha':17 'sushant':16 'text':3,15 'word':13
8	3	5	46ec7f88abf6be219a4abca766871823	Fix improper display of fractional seconds in interval values when using a non-ISO datestyle in an --enable-integer-datetimes build (Ron Mayer)	'build':23 'datestyl':16 'datetim':22 'display':3 'enabl':20 'enable-integer-datetim':19 'fix':1 'fraction':5 'improp':2 'integ':21 'interv':8 'iso':15 'mayer':25 'non':14 'non-iso':13 'ron':24 'second':6 'use':11 'valu':9
8	3	5	95c79507a37f6b927c321c32ed61ae6c	Make ILIKE compare characters case-insensitively even when they're escaped (Andrew)	'andrew':13 'case':6 'case-insensit':5 'charact':4 'compar':3 'escap':12 'even':8 'ilik':2 'insensit':7 'make':1 're':11
8	3	5	62bf247deb9110044daa13352da5eb0c	Fix incorrect logging of last-completed-transaction time during PITR recovery (Tom)	'complet':7 'fix':1 'incorrect':2 'last':6 'last-completed-transact':5 'log':3 'pitr':11 'recoveri':12 'time':9 'tom':13 'transact':8
8	3	5	c706c337d807900d535ad406ff966b86	Ensure SPI_getvalue and SPI_getbinval behave correctly when the passed tuple and tuple descriptor have different numbers of columns (Tom) This situation is normal when a table has had columns added or removed, but these two functions didn't handle it properly. The only likely consequence is an incorrect error indication.	'ad':32 'behav':7 'column':20,31 'consequ':47 'correct':8 'descriptor':15 'didn':39 'differ':17 'ensur':1 'error':51 'function':38 'getbinv':6 'getvalu':3 'handl':41 'incorrect':50 'indic':52 'like':46 'normal':25 'number':18 'pass':11 'proper':43 'remov':34 'situat':23 'spi':2,5 'tabl':28 'tom':21 'tupl':12,14 'two':37
8	3	5	c7e3721b97af8abedfb15441cfdfe973	Mark SessionReplicationRole as PGDLLIMPORT so it can be used by Slony on Windows (Magnus)	'magnus':14 'mark':1 'pgdllimport':4 'sessionreplicationrol':2 'sloni':11 'use':9 'window':13
8	3	5	3c97d2beba2c49f3a26ecbc41fbf063d	Fix small memory leak when using libpq 's gsslib parameter (Magnus) The space used by the parameter string was not freed at connection close.	'close':24 'connect':23 'fix':1 'freed':21 'gsslib':9 'leak':4 'libpq':7 'magnus':11 'memori':3 'paramet':10,17 'small':2 'space':13 'string':18 'use':6,14
8	3	5	cc5ce1cc1e2b9d8e320b8e0888e0fc59	Ensure libgssapi is linked into libpq if needed (Markus Schaaf)	'ensur':1 'libgssapi':2 'libpq':6 'link':4 'markus':9 'need':8 'schaaf':10
8	3	5	2b0b91b554c653a6d5838d497b0bef75	Fix ecpg 's parsing of CREATE ROLE (Michael)	'creat':6 'ecpg':2 'fix':1 'michael':8 'pars':4 'role':7
8	3	5	3dbfb8a024c3fd8d3d1d95d750222bf3	Fix recent breakage of pg_ctl restart (Tom)	'breakag':3 'ctl':6 'fix':1 'pg':5 'recent':2 'restart':7 'tom':8
8	3	5	f4e957db57481e4af92681ecf9c248f9	Ensure pg_control is opened in binary mode (Itagaki Takahiro) pg_controldata and pg_resetxlog did this incorrectly, and so could fail on Windows.	'binari':7 'control':3 'controldata':12 'could':21 'ensur':1 'fail':22 'incorrect':18 'itagaki':9 'mode':8 'open':5 'pg':2,11,14 'resetxlog':15 'takahiro':10 'window':24
8	3	5	9bf87483bd69d58d2b6e0cd2934c66ef	Update time zone data files to tzdata release 2008i (for DST law changes in Argentina, Brazil, Mauritius, Syria)	'2008i':9 'argentina':15 'brazil':16 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':17 'releas':8 'syria':18 'time':2 'tzdata':7 'updat':1 'zone':3
8	3	4	a870b3af96c40485243c85b420beb46f	Fix bug in btree WAL recovery code (Heikki) Recovery failed if the WAL ended partway through a page split operation.	'btree':4 'bug':2 'code':7 'end':14 'fail':10 'fix':1 'heikki':8 'oper':20 'page':18 'partway':15 'recoveri':6,9 'split':19 'wal':5,13
8	3	4	dc9cbd0973fab77e092fd61116adedfe	Fix potential use of wrong cutoff XID for HOT page pruning (Alvaro) This error created a risk of corruption in system catalogs that are consulted by VACUUM : dead tuple versions might be removed too soon. The impact of this on actual database operations would be minimal, since the system doesn't follow MVCC rules while examining catalogs, but it might result in transiently wrong output from pg_dump or other client programs.	'actual':41 'alvaro':12 'catalog':22,57 'client':71 'consult':25 'corrupt':19 'creat':15 'cutoff':6 'databas':42 'dead':28 'doesn':50 'dump':68 'error':14 'examin':56 'fix':1 'follow':52 'hot':9 'impact':37 'might':31,60 'minim':46 'mvcc':53 'oper':43 'output':65 'page':10 'pg':67 'potenti':2 'program':72 'prune':11 'remov':33 'result':61 'risk':17 'rule':54 'sinc':47 'soon':35 'system':21,49 'transient':63 'tupl':29 'use':3 'vacuum':27 'version':30 'would':44 'wrong':5,64 'xid':7
8	3	4	62ad63b32ee714a7aefc9b67a84f098d	Fix potential miscalculation of datfrozenxid (Alvaro) This error may explain some recent reports of failure to remove old pg_clog data.	'alvaro':6 'clog':20 'data':21 'datfrozenxid':5 'error':8 'explain':10 'failur':15 'fix':1 'may':9 'miscalcul':3 'old':18 'pg':19 'potenti':2 'recent':12 'remov':17 'report':13
8	3	4	8f04839bbd3ffd2748803bb388096e3a	Fix incorrect HOT updates after pg_class is reindexed (Tom) Corruption of pg_class could occur if REINDEX TABLE pg_class was followed in the same session by an ALTER TABLE RENAME or ALTER TABLE SET SCHEMA command.	'alter':30,34 'class':7,14,21 'command':38 'corrupt':11 'could':15 'fix':1 'follow':23 'hot':3 'incorrect':2 'occur':16 'pg':6,13,20 'reindex':9,18 'renam':32 'schema':37 'session':27 'set':36 'tabl':19,31,35 'tom':10 'updat':4
8	3	4	38efbc3548ab9ee43c36209dd164ad07	Fix missed combo cid case (Karl Schnaitter) This error made rows incorrectly invisible to a transaction in which they had been deleted by multiple subtransactions that all aborted.	'abort':28 'case':5 'cid':4 'combo':3 'delet':22 'error':9 'fix':1 'incorrect':12 'invis':13 'karl':6 'made':10 'miss':2 'multipl':24 'row':11 'schnaitter':7 'subtransact':25 'transact':16
8	3	4	3def60c04bfa7a395b0a1864940e561a	Prevent autovacuum from crashing if the table it's currently checking is deleted at just the wrong time (Alvaro)	'alvaro':19 'autovacuum':2 'check':11 'crash':4 'current':10 'delet':13 'prevent':1 'tabl':7 'time':18 'wrong':17
8	3	2	72f51763151665f6d56502dd985eeb84	Fix problems with SELECT FOR UPDATE/SHARE occurring as a subquery in a query with a non- SELECT top-level operation (Tom)	'fix':1 'level':20 'non':16 'occur':7 'oper':21 'problem':2 'queri':13 'select':4,17 'subqueri':10 'tom':22 'top':19 'top-level':18 'update/share':6
8	3	4	ac11de008a8e58a5d1dbb3b637bdfedf	Widen local lock counters from 32 to 64 bits (Tom) This responds to reports that the counters could overflow in sufficiently long transactions, leading to unexpected lock is already held errors.	'32':6 '64':8 'alreadi':29 'bit':9 'could':18 'counter':4,17 'error':31 'held':30 'lead':24 'local':2 'lock':3,27 'long':22 'overflow':19 'report':14 'respond':12 'suffici':21 'tom':10 'transact':23 'unexpect':26 'widen':1
8	3	4	1eefaf6bdf649340ef623af81f6c2113	Fix possible duplicate output of tuples during a GiST index scan (Teodor)	'duplic':3 'fix':1 'gist':9 'index':10 'output':4 'possibl':2 'scan':11 'teodor':12 'tupl':6
8	3	4	cf6de6d1d915216f89d4f91c304f1d08	Regenerate foreign key checking queries from scratch when either table is modified (Tom) Previously, 8.3 would attempt to replan the query, but would work from previously generated query text. This led to failures if a table or column was renamed.	'8.3':15 'attempt':17 'check':4 'column':38 'either':9 'failur':33 'foreign':2 'generat':27 'key':3 'led':31 'modifi':12 'previous':14,26 'queri':5,21,28 'regener':1 'renam':40 'replan':19 'scratch':7 'tabl':10,36 'text':29 'tom':13 'work':24 'would':16,23
8	3	4	2c2d850c7276b767a5f8f617eb8b99e6	Fix missed permissions checks when a view contains a simple UNION ALL construct (Heikki) Permissions for the referenced tables were checked properly, but not permissions for the view itself.	'check':4,21 'construct':13 'contain':8 'fix':1 'heikki':14 'miss':2 'permiss':3,15,25 'proper':22 'referenc':18 'simpl':10 'tabl':19 'union':11 'view':7,28
8	3	4	7f6ffd88ec95672805f75c8b3a2081f3	Add checks in executor startup to ensure that the tuples produced by an INSERT or UPDATE will match the target table's current rowtype (Tom) This situation is believed to be impossible in 8.3, but it can happen in prior releases, so a check seems prudent.	'8.3':34 'add':1 'believ':29 'check':2,44 'current':23 'ensur':7 'executor':4 'happen':38 'imposs':32 'insert':14 'match':18 'prior':40 'produc':11 'prudent':46 'releas':41 'rowtyp':24 'seem':45 'situat':27 'startup':5 'tabl':21 'target':20 'tom':25 'tupl':10 'updat':16
8	3	4	61bfec266a08abfbe88b196798381ce1	Fix possible repeated drops during DROP OWNED (Tom) This would typically result in strange errors such as cache lookup failed for relation NNN .	'cach':18 'drop':4,6 'error':15 'fail':20 'fix':1 'lookup':19 'nnn':23 'own':7 'possibl':2 'relat':22 'repeat':3 'result':12 'strang':14 'tom':8 'typic':11 'would':10
8	3	4	e50238aa81815dfcff99b3619efff67a	Fix several memory leaks in XML operations (Kris Jurka, Tom)	'fix':1 'jurka':9 'kris':8 'leak':4 'memori':3 'oper':7 'sever':2 'tom':10 'xml':6
8	3	4	d057915b9ed8e42f152cd4537c1a64dd	Fix xmlserialize() to raise error properly for unacceptable target data type (Tom)	'data':10 'error':5 'fix':1 'proper':6 'rais':4 'target':9 'tom':12 'type':11 'unaccept':8 'xmlserial':2
8	3	4	5dd4caf51737df63ef5035feec9114cc	Fix a couple of places that mis-handled multibyte characters in text search configuration file parsing (Tom) Certain characters occurring in configuration files would always cause invalid byte sequence for encoding failures.	'alway':26 'byte':29 'caus':27 'certain':19 'charact':11,20 'configur':15,23 'coupl':3 'encod':32 'failur':33 'file':16,24 'fix':1 'handl':9 'invalid':28 'mis':8 'mis-handl':7 'multibyt':10 'occur':21 'pars':17 'place':5 'search':14 'sequenc':30 'text':13 'tom':18 'would':25
8	3	4	6bdcd604b6e277b6fe418fba68b0197d	Provide file name and line number location for all errors reported in text search configuration files (Tom)	'configur':15 'error':10 'file':2,16 'line':5 'locat':7 'name':3 'number':6 'provid':1 'report':11 'search':14 'text':13 'tom':17
8	3	4	15cd6b1a036685dfb19f2f46af04db6d	Fix AT TIME ZONE to first try to interpret its timezone argument as a timezone abbreviation, and only try it as a full timezone name if that fails, rather than the other way around as formerly (Tom) The timestamp input functions have always resolved ambiguous zone names in this order. Making AT TIME ZONE do so as well improves consistency, and fixes a compatibility bug introduced in 8.1: in ambiguous cases we now behave the same as 8.0 and before did, since in the older versions AT TIME ZONE accepted only abbreviations.	'8.0':78 '8.1':68 'abbrevi':16,92 'accept':90 'alway':43 'ambigu':45,70 'argument':12 'around':34 'behav':74 'bug':65 'case':71 'compat':64 'consist':60 'fail':28 'first':6 'fix':1,62 'former':36 'full':23 'function':41 'improv':59 'input':40 'interpret':9 'introduc':66 'make':51 'name':25,47 'older':85 'order':50 'rather':29 'resolv':44 'sinc':82 'time':3,53,88 'timestamp':39 'timezon':11,15,24 'tom':37 'tri':7,19 'version':86 'way':33 'well':58 'zone':4,46,54,89
8	3	4	2a23a4ad2dad26a347325d454794dd21	Fix datetime input functions to correctly detect integer overflow when running on a 64-bit platform (Tom)	'64':14 'bit':15 'correct':6 'datetim':2 'detect':7 'fix':1 'function':4 'input':3 'integ':8 'overflow':9 'platform':16 'run':11 'tom':17
8	3	4	e0067fe1146c824093c6bed3a25621ed	Prevent integer overflows during units conversion when displaying a configuration parameter that has units (Tom)	'configur':10 'convers':6 'display':8 'integ':2 'overflow':3 'paramet':11 'prevent':1 'tom':15 'unit':5,14
8	3	4	29a9d16ebb0879a3ca692b8fd6f2b3c5	Improve performance of writing very long log messages to syslog (Tom)	'improv':1 'log':7 'long':6 'messag':8 'perform':2 'syslog':10 'tom':11 'write':4
8	3	4	ec99d9572c8443ea46cd3ee3fdb0cf90	Allow spaces in the suffix part of an LDAP URL in pg_hba.conf (Tom)	'allow':1 'hba.conf':13 'ldap':9 'part':6 'pg':12 'space':2 'suffix':5 'tom':14 'url':10
8	3	4	47d3340fd4ac365b13ef28eab8d4437a	Fix bug in backwards scanning of a cursor on a SELECT DISTINCT ON query (Tom)	'backward':4 'bug':2 'cursor':8 'distinct':12 'fix':1 'queri':14 'scan':5 'select':11 'tom':15
8	3	4	3a7de0cfe8c3a22c241f1d9081e310ff	Fix planner bug that could improperly push down IS NULL tests below an outer join (Tom) This was triggered by occurrence of IS NULL tests for the same relation in all arms of an upper OR clause.	'arm':32 'bug':3 'claus':37 'could':5 'fix':1 'improp':6 'join':15 'null':10,24 'occurr':21 'outer':14 'planner':2 'push':7 'relat':29 'test':11,25 'tom':16 'trigger':19 'upper':35
8	3	2	e8ee123b907c8cf7dd2057da017d9806	Fix possible CREATE TABLE failure when inheriting the same constraint from multiple parent relations that inherited that constraint from a common ancestor (Tom)	'ancestor':22 'common':21 'constraint':10,18 'creat':3 'failur':5 'fix':1 'inherit':7,16 'multipl':12 'parent':13 'possibl':2 'relat':14 'tabl':4 'tom':23
8	3	4	e361faf05adc1b4672f4100fd8b9bbd9	Fix planner bug with nested sub-select expressions (Tom) If the outer sub-select has no direct dependency on the parent query, but the inner one does, the outer value might not get recalculated for new parent query rows.	'bug':3 'depend':20 'direct':19 'express':9 'fix':1 'get':35 'inner':27 'might':33 'nest':5 'new':38 'one':28 'outer':13,31 'parent':23,39 'planner':2 'queri':24,40 'recalcul':36 'row':41 'select':8,16 'sub':7,15 'sub-select':6,14 'tom':10 'valu':32
8	3	4	759db704b2320d4bc4bccae74a052ec0	Fix planner to estimate that GROUP BY expressions yielding boolean results always result in two groups, regardless of the expressions' contents (Tom) This is very substantially more accurate than the regular GROUP BY estimate for certain boolean tests like col IS NULL .	'accur':28 'alway':12 'boolean':10,37 'certain':36 'col':40 'content':21 'estim':4,34 'express':8,20 'fix':1 'group':6,16,32 'like':39 'null':42 'planner':2 'regardless':17 'regular':31 'result':11,13 'substanti':26 'test':38 'tom':22 'two':15 'yield':9
8	3	4	57e2400239d22c9b7c72e92d82957b5c	Fix PL/PgSQL to not fail when a FOR loop's target variable is a record containing composite-type fields (Tom)	'composit':18 'composite-typ':17 'contain':16 'fail':5 'field':20 'fix':1 'loop':9 'pl/pgsql':2 'record':15 'target':11 'tom':21 'type':19 'variabl':12
8	3	4	70fc9a4f185e818e99c7bfe937165c65	Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful about the encoding of data sent to or from Tcl (Tom)	'8.5':8 'behav':4 'care':13 'correct':5 'data':18 'encod':16 'fix':1 'pl/tcl':2 'sent':19 'tcl':7,23 'tom':24
8	3	4	b28ac6f13b4c69a7a017d7b76993c0e1	Improve performance of PQescapeBytea() (Rudolf Leitgeb)	'improv':1 'leitgeb':6 'perform':2 'pqescapebytea':4 'rudolf':5
8	3	4	712851d53f21871e234bb76944f0739f	On Windows, work around a Microsoft bug by preventing libpq from trying to send more than 64kB per system call (Magnus)	'64kb':17 'around':4 'bug':7 'call':20 'libpq':10 'magnus':21 'microsoft':6 'per':18 'prevent':9 'send':14 'system':19 'tri':12 'window':2 'work':3
8	3	4	4a2c023abef14da42437bb895837dc3a	Fix ecpg to handle variables properly in SET commands (Michael)	'command':9 'ecpg':2 'fix':1 'handl':4 'michael':10 'proper':6 'set':8 'variabl':5
8	3	4	af452e00b3eafc6294a31f6b5d3d0b4d	Improve pg_dump and pg_restore 's error reporting after failure to send a SQL command (Tom)	'command':16 'dump':3 'error':8 'failur':11 'improv':1 'pg':2,5 'report':9 'restor':6 'send':13 'sql':15 'tom':17
8	3	4	1277360c4443f843fc81df97fed6bad1	Fix pg_ctl to properly preserve postmaster command-line arguments across a restart (Bruce)	'across':12 'argument':11 'bruce':15 'command':9 'command-lin':8 'ctl':3 'fix':1 'line':10 'pg':2 'postmast':7 'preserv':6 'proper':5 'restart':14
8	3	4	69fb81d7ada626be0f0d2e96505ffe5e	Fix erroneous WAL file cutoff point calculation in pg_standby (Simon)	'calcul':7 'cutoff':5 'erron':2 'file':4 'fix':1 'pg':9 'point':6 'simon':11 'standbi':10 'wal':3
8	3	4	ec45c869c77e0c74a72c406fa0d7e4e0	Update time zone data files to tzdata release 2008f (for DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco, Pakistan, Palestine, and Paraguay)	'2008f':9 'argentina':15 'bahama':16 'brazil':17 'chang':13 'data':4 'dst':11 'file':5 'law':12 'mauritius':18 'morocco':19 'pakistan':20 'palestin':21 'paraguay':23 'releas':8 'time':2 'tzdata':7 'updat':1 'zone':3
8	3	3	db798581b8b44ea9d6cab7fea4a6bc46	Make pg_get_ruledef() parenthesize negative constants (Tom) Before this fix, a negative constant in a view or rule might be dumped as, say, -42::integer , which is subtly incorrect: it should be (-42)::integer due to operator precedence rules. Usually this would make little difference, but it could interact with another recent patch to cause PostgreSQL to reject what had been a valid SELECT DISTINCT view query. Since this could result in pg_dump output failing to reload, it is being treated as a high-priority fix. The only released versions in which dump output is actually incorrect are 8.3.1 and 8.2.7.	'-42':25,34 '8.2.7':104 '8.3.1':102 'actual':99 'anoth':52 'caus':56 'constant':7,14 'could':49,71 'differ':46 'distinct':66 'due':36 'dump':22,75,96 'fail':77 'fix':11,89 'get':3 'high':87 'high-prior':86 'incorrect':30,100 'integ':26,35 'interact':50 'littl':45 'make':1,44 'might':20 'negat':6,13 'oper':38 'output':76,97 'parenthes':5 'patch':54 'pg':2,74 'postgresql':57 'preced':39 'prioriti':88 'queri':68 'recent':53 'reject':59 'releas':92 'reload':79 'result':72 'rule':19,40 'ruledef':4 'say':24 'select':65 'sinc':69 'subt':29 'tom':8 'treat':83 'usual':41 'valid':64 'version':93 'view':17,67 'would':43
8	3	3	516d6d43e350ee3813694a8cc9ef0c84	Make ALTER AGGREGATE ... OWNER TO update pg_shdepend (Tom) This oversight could lead to problems if the aggregate was later involved in a DROP OWNED or REASSIGN OWNED operation.	'aggreg':3,18 'alter':2 'could':12 'drop':24 'involv':21 'later':20 'lead':13 'make':1 'oper':29 'oversight':11 'own':25,28 'owner':4 'pg':7 'problem':15 'reassign':27 'shdepend':8 'tom':9 'updat':6
8	3	2	9612448353477970b11f4d7d145bf0b3	Fix ERRORDATA_STACK_SIZE exceeded crash that occurred on Windows when using UTF-8 database encoding and a different client encoding (Tom)	'-8':14 'client':20 'crash':6 'databas':15 'differ':19 'encod':16,21 'errordata':2 'exceed':5 'fix':1 'occur':8 'size':4 'stack':3 'tom':22 'use':12 'utf':13 'window':10
8	3	2	a9586dbe2333a13589bb2550525dcb18	Fix incorrect archive truncation point calculation for the %r macro in recovery_command parameters (Simon) This could lead to data loss if a warm-standby script relied on %r to decide when to throw away WAL segment files.	'archiv':3 'away':36 'calcul':6 'command':13 'could':17 'data':20 'decid':32 'file':39 'fix':1 'incorrect':2 'lead':18 'loss':21 'macro':10 'paramet':14 'point':5 'r':9,30 'recoveri':12 'reli':28 'script':27 'segment':38 'simon':15 'standbi':26 'throw':35 'truncat':4 'wal':37 'warm':25 'warm-standbi':24
8	3	2	fd658d336c599356fbaa956aedd2e10c	Fix ALTER TABLE ADD COLUMN ... PRIMARY KEY so that the new column is correctly checked to see if it's been initialized to all non-nulls (Brendan Jurd) Previous versions neglected to check this requirement at all.	'add':4 'alter':2 'brendan':28 'check':15,34 'column':5,12 'correct':14 'fix':1 'initi':22 'jurd':29 'key':7 'neglect':32 'new':11 'non':26 'non-nul':25 'null':27 'previous':30 'primari':6 'requir':36 'see':17 'tabl':3 'version':31
8	3	2	9aeeb40c15dcc76385c58015678f866f	Fix pg_get_ruledef() to show the alias, if any, attached to the target table of an UPDATE or DELETE (Tom)	'alia':8 'attach':11 'delet':20 'fix':1 'get':3 'pg':2 'ruledef':4 'show':6 'tabl':15 'target':14 'tom':21 'updat':18
8	3	1	b38bcdf66579d921c9948bc8573ee4e6	Fix unrecognized node type error in some variants of ALTER OWNER (Tom)	'alter':10 'error':5 'fix':1 'node':3 'owner':11 'tom':12 'type':4 'unrecogn':2 'variant':8
8	3	2	e21f3c70f7e252491eec4cb1212d655f	Restore the pre-8.3 behavior that an out-of-range block number in a TID being used in a TidScan plan results in silently not matching any rows (Tom) 8.3.0 and 8.3.1 threw an error instead.	'-8.3':4 '8.3.0':31 '8.3.1':33 'behavior':5 'block':12 'error':36 'instead':37 'match':27 'number':13 'out-of-rang':8 'plan':22 'pre':3 'rang':11 'restor':1 'result':23 'row':29 'silent':25 'threw':34 'tid':16 'tidscan':21 'tom':30 'use':18
8	3	2	91113ec105cb983bbcdb111472cc3219	Fix GIN bug that could result in a too many LWLocks taken failure (Teodor)	'bug':3 'could':5 'failur':13 'fix':1 'gin':2 'lwlock':11 'mani':10 'result':6 'taken':12 'teodor':14
8	3	2	8b221cc88ba63e4adf4572a64be51fe5	Fix broken GiST comparison function for tsquery (Teodor)	'broken':2 'comparison':4 'fix':1 'function':5 'gist':3 'teodor':8 'tsqueri':7
8	3	2	c57ffbbe85e2989c0fb0e253cadfd097	Fix tsvector_update_trigger() and ts_stat() to accept domains over the types they expect to work with (Tom)	'accept':9 'domain':10 'expect':15 'fix':1 'stat':7 'tom':19 'trigger':4 'ts':6 'tsvector':2 'type':13 'updat':3 'work':17
8	3	2	542f678277d0c73fb16a003adbac7de6	Fix failure to support enum data types as foreign keys (Tom)	'data':6 'enum':5 'failur':2 'fix':1 'foreign':9 'key':10 'support':4 'tom':11 'type':7
8	3	2	361a55c898ca0cea507d61af8ea580ca	Avoid possible crash when decompressing corrupted data (Zdenek Kotala)	'avoid':1 'corrupt':6 'crash':3 'data':7 'decompress':5 'kotala':9 'possibl':2 'zdenek':8
8	3	2	e92e0226f44d58b3471841d79c3fe0b2	Fix race conditions between delayed unlinks and DROP DATABASE (Heikki) In the worst case this could result in deleting a newly created table in a new database that happened to get the same OID as the recently-dropped one; but of course that is an extremely low-probability scenario.	'case':14 'condit':3 'could':16 'cours':43 'creat':22 'databas':9,27 'delay':5 'delet':19 'drop':8,39 'extrem':47 'fix':1 'get':31 'happen':29 'heikki':10 'low':49 'low-prob':48 'new':26 'newli':21 'oid':34 'one':40 'probabl':50 'race':2 'recent':38 'recently-drop':37 'result':17 'scenario':51 'tabl':23 'unlink':6 'worst':13
8	3	2	6be8ad928674bd26c2c197ec28d1c0e8	Repair two places where SIGTERM exit of a backend could leave corrupted state in shared memory (Tom) Neither case is very important if SIGTERM is used to shut down the whole database cluster together, but there was a problem if someone tried to SIGTERM individual backends.	'backend':9,46 'case':19 'cluster':33 'corrupt':12 'could':10 'databas':32 'exit':6 'import':22 'individu':45 'leav':11 'memori':16 'neither':18 'place':3 'problem':39 'repair':1 'share':15 'shut':28 'sigterm':5,24,44 'someon':41 'state':13 'togeth':34 'tom':17 'tri':42 'two':2 'use':26 'whole':31
8	3	2	1c78308d23ed263e3ae753394b97a6eb	Fix possible crash due to incorrect plan generated for an x IN (SELECT y FROM ...) clause when x and y have different data types; and make sure the behavior is semantically correct when the conversion from y 's type to x 's type is lossy (Tom)	'behavior':29 'claus':16 'convers':35 'correct':32 'crash':3 'data':23 'differ':22 'due':4 'fix':1 'generat':8 'incorrect':6 'lossi':45 'make':26 'plan':7 'possibl':2 'select':13 'semant':31 'sure':27 'tom':46 'type':24,39,43 'x':11,18,41 'y':14,20,37
8	3	2	ed21c27033cc2f26ab21e5bcef01cfa1	Fix oversight that prevented the planner from substituting known Param values as if they were constants (Tom) This mistake partially disabled optimization of unnamed extended-Query statements in 8.3.0 and 8.3.1: in particular the LIKE-to-indexscan optimization would never be applied if the LIKE pattern was passed as a parameter, and constraint exclusion depending on a parameter value didn't work either.	'8.3.0':30 '8.3.1':32 'appli':44 'constant':16 'constraint':55 'depend':57 'didn':62 'disabl':21 'either':65 'exclus':56 'extend':26 'extended-queri':25 'fix':1 'indexscan':39 'known':9 'like':37,47 'like-to-indexscan':36 'mistak':19 'never':42 'optim':22,40 'oversight':2 'param':10 'paramet':53,60 'partial':20 'particular':34 'pass':50 'pattern':48 'planner':6 'prevent':4 'queri':27 'statement':28 'substitut':8 'tom':17 'unnam':24 'valu':11,61 'work':64 'would':41
8	3	2	9c4c1beb9625ae50e307472086c5025a	Fix planner failure when an indexable MIN or MAX aggregate is used with DISTINCT or ORDER BY (Tom)	'aggreg':10 'distinct':14 'failur':3 'fix':1 'index':6 'max':9 'min':7 'order':16 'planner':2 'tom':18 'use':12
8	3	2	7e860fd29b3dab7bb8c518be7117dcd0	Fix planner to ensure it never uses a physical tlist for a plan node that is feeding a Sort node (Tom) This led to the sort having to push around more data than it really needed to, since unused column values were included in the sorted data.	'around':30 'column':40 'data':32,47 'ensur':4 'feed':17 'fix':1 'includ':43 'led':23 'need':36 'never':6 'node':14,20 'physic':9 'plan':13 'planner':2 'push':29 'realli':35 'sinc':38 'sort':19,26,46 'tlist':10 'tom':21 'unus':39 'use':7 'valu':41
8	3	2	c5093f25546b21cecf42e1e432026528	Avoid unnecessary copying of query strings (Tom) This fixes a performance problem introduced in 8.3.0 when a very large number of commands are submitted as a single query string.	'8.3.0':15 'avoid':1 'command':22 'copi':3 'fix':9 'introduc':13 'larg':19 'number':20 'perform':11 'problem':12 'queri':5,28 'singl':27 'string':6,29 'submit':24 'tom':7 'unnecessari':2
8	3	2	d4a0b84e2844e26fa0020fb4f9f34573	Make TransactionIdIsCurrentTransactionId() use binary search instead of linear search when checking child-transaction XIDs (Heikki) This fixes some cases in which 8.3.0 was significantly slower than earlier releases.	'8.3.0':23 'binari':4 'case':20 'check':11 'child':13 'child-transact':12 'earlier':28 'fix':18 'heikki':16 'instead':6 'linear':8 'make':1 'releas':29 'search':5,9 'signific':25 'slower':26 'transact':14 'transactionidiscurrenttransactionid':2 'use':3 'xid':15
8	3	2	56c8907c422c955208a03b738693a4a2	Fix conversions between ISO-8859-5 and other encodings to handle Cyrillic Yo characters ( e and E with two dots) (Sergey Burladyan)	'-5':6 '-8859':5 'burladyan':22 'charact':14 'convers':2 'cyril':12 'dot':20 'e':15,17 'encod':9 'fix':1 'handl':11 'iso':4 'sergey':21 'two':19 'yo':13
8	3	1	e341b2b7139f50b9d35ad0435c4eb22d	Avoid tablespace permissions errors in CREATE TABLE LIKE INCLUDING INDEXES (Tom)	'avoid':1 'creat':6 'error':4 'includ':9 'index':10 'like':8 'permiss':3 'tabl':7 'tablespac':2 'tom':11
8	3	2	a69bd8c3c5149e3a2294c0d8532ce1ba	Fix several datatype input functions, notably array_in() , that were allowing unused bytes in their results to contain uninitialized, unpredictable values (Tom) This could lead to failures in which two apparently identical literal values were not seen as equal, resulting in the parser complaining about unmatched ORDER BY and DISTINCT expressions.	'allow':11 'appar':31 'array':7 'byte':13 'complain':44 'contain':18 'could':24 'datatyp':3 'distinct':50 'equal':39 'express':51 'failur':27 'fix':1 'function':5 'ident':32 'input':4 'lead':25 'liter':33 'notabl':6 'order':47 'parser':43 'result':16,40 'seen':37 'sever':2 'tom':22 'two':30 'uniniti':19 'unmatch':46 'unpredict':20 'unus':12 'valu':21,34
8	3	2	e433bfce0c4b7a064ae159dec508499a	Fix a corner case in regular-expression substring matching ( substring( string from pattern ) ) (Tom) The problem occurs when there is a match to the pattern overall but the user has specified a parenthesized subexpression and that subexpression hasn't got a match. An example is substring('foo' from 'foo(bar)?') . This should return NULL, since (bar) isn't matched, but it was mistakenly returning the whole-pattern match instead (ie, foo ).	'bar':51,57 'case':4 'corner':3 'exampl':45 'express':8 'fix':1 'foo':48,50,73 'got':41 'hasn':39 'ie':72 'instead':71 'isn':58 'match':10,23,43,60,70 'mistaken':64 'null':55 'occur':18 'overal':27 'parenthes':34 'pattern':14,26,69 'problem':17 'regular':7 'regular-express':6 'return':54,65 'sinc':56 'specifi':32 'string':12 'subexpress':35,38 'substr':9,11,47 'tom':15 'user':30 'whole':68 'whole-pattern':67
8	3	2	51aca931c12da5da882dc29aec2b48c5	Prevent cancellation of an auto-vacuum that was launched to prevent XID wraparound (Alvaro)	'alvaro':15 'auto':6 'auto-vacuum':5 'cancel':2 'launch':10 'prevent':1,12 'vacuum':7 'wraparound':14 'xid':13
8	3	2	682ae37989e7fa23f5685ca4fcdfcdd2	Improve ANALYZE 's handling of in-doubt tuples (those inserted or deleted by a not-yet-committed transaction) so that the counts it reports to the stats collector are more likely to be correct (Pavan Deolasee)	'analyz':2 'collector':30 'commit':19 'correct':36 'count':24 'delet':13 'deolase':38 'doubt':8 'handl':4 'improv':1 'in-doubt':6 'insert':11 'like':33 'not-yet-commit':16 'pavan':37 'report':26 'stat':29 'transact':20 'tupl':9 'yet':18
8	3	2	d7a03e28688d0c6fa385cd6f1f6ea8ab	Fix initdb to reject a relative path for its --xlogdir ( -X ) option (Tom)	'fix':1 'initdb':2 'option':12 'path':7 'reject':4 'relat':6 'tom':13 'x':11 'xlogdir':10
8	3	2	a02badfc01b19e279ced7bca1c5c6fab	Make psql print tab characters as an appropriate number of spaces, rather than \\x09 as was done in 8.3.0 and 8.3.1 (Bruce)	'8.3.0':19 '8.3.1':21 'appropri':8 'bruce':22 'charact':5 'done':17 'make':1 'number':9 'print':3 'psql':2 'rather':12 'space':11 'tab':4 'x09':14
8	3	2	1192905e08aea7bd5b3dc5d872bc640e	Update time zone data files to tzdata release 2008c (for DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and Argentina/San_Luis)	'2008c':9 'argentina/san_luis':22 'chang':13 'choibalsan':17 'cuba':20 'data':4 'dst':11 'file':5 'iraq':16 'law':12 'morocco':15 'pakistan':18 'releas':8 'syria':19 'time':2 'tzdata':7 'updat':1 'zone':3
8	3	2	95a7a9419ef3e357fc0730b0763ae644	Add ECPGget_PGconn() function to ecpglib (Michael)	'add':1 'ecpgget':2 'ecpglib':6 'function':4 'michael':7 'pgconn':3
8	3	2	af9ed9daa5cda7b3ea3e2630d86c6096	Fix incorrect result from ecpg 's PGTYPEStimestamp_sub() function (Michael)	'ecpg':5 'fix':1 'function':9 'incorrect':2 'michael':10 'pgtypestimestamp':7 'result':3 'sub':8
8	3	2	eccd6dc2a667c41037bcbeb521ee2660	Fix handling of continuation line markers in ecpg (Michael)	'continu':4 'ecpg':8 'fix':1 'handl':2 'line':5 'marker':6 'michael':9
8	3	2	7e2971b13f32d4fb40b5007c18193efd	Fix possible crashes in contrib/cube functions (Tom)	'contrib/cube':5 'crash':3 'fix':1 'function':6 'possibl':2 'tom':7
8	3	2	85618920178e644a6e9b0da529179d3f	Fix core dump in contrib/xml2 's xpath_table() function when the input query returns a NULL value (Tom)	'contrib/xml2':5 'core':2 'dump':3 'fix':1 'function':9 'input':12 'null':16 'queri':13 'return':14 'tabl':8 'tom':18 'valu':17 'xpath':7
8	3	2	33ba14dbef908ebf870c49f15da728fd	Fix contrib/xml2 's makefile to not override CFLAGS , and make it auto-configure properly for libxslt present or not (Tom)	'auto':13 'auto-configur':12 'cflag':8 'configur':14 'contrib/xml2':2 'fix':1 'libxslt':17 'make':10 'makefil':4 'overrid':7 'present':18 'proper':15 'tom':21
8	3	1	13db9430b5ac323f87e41fcd174d0d8a	Fix character string comparison for Windows locales that consider different character combinations as equal (Tom) This fix applies only on Windows and only when using UTF-8 database encoding. The same fix was made for all other cases over two years ago, but Windows with UTF-8 uses a separate code path that was not updated. If you are using a locale that considers some non-identical strings as equal, you may need to REINDEX to fix existing indexes on textual columns.	'-8':27,47 'ago':42 'appli':18 'case':38 'charact':2,11 'code':51 'column':83 'combin':12 'comparison':4 'consid':9,64 'databas':28 'differ':10 'encod':29 'equal':14,71 'exist':79 'fix':1,17,32,78 'ident':68 'index':80 'local':7,62 'made':34 'may':73 'need':74 'non':67 'non-ident':66 'path':52 'reindex':76 'separ':50 'string':3,69 'textual':82 'tom':15 'two':40 'updat':56 'use':25,48,60 'utf':26,46 'window':6,21,44 'year':41
8	3	1	ef19a8c24344af8d1d428fee507bd057	Make encode( bytea , 'escape') convert all high-bit-set byte values into \\ nnn octal escape sequences (Tom) This is necessary to avoid encoding problems when the database encoding is multi-byte. This change could pose compatibility issues for applications that are expecting specific results from encode .	'applic':41 'avoid':23 'bit':9 'byte':11,33 'bytea':3 'chang':35 'compat':38 'convert':5 'could':36 'databas':28 'encod':2,24,29,48 'escap':4,16 'expect':44 'high':8 'high-bit-set':7 'issu':39 'make':1 'multi':32 'multi-byt':31 'necessari':21 'nnn':14 'octal':15 'pose':37 'problem':25 'result':46 'sequenc':17 'set':10 'specif':45 'tom':18 'valu':12
8	3	1	b8bc3d8f2054b5621751e05d0543026b	Fix input of datetime values for February 29 in years BC (Tom) The former coding was mistaken about which years were leap years.	'29':8 'bc':11 'code':15 'datetim':4 'februari':7 'fix':1 'former':14 'input':2 'leap':22 'mistaken':17 'tom':12 'valu':5 'year':10,20,23
8	3	1	fa1333ea962ba820d0c64abca6dd4567	Repair corner-case bugs in VACUUM FULL (Tom) A potential deadlock between concurrent VACUUM FULL operations on different system catalogs was introduced in 8.2. This has now been corrected. 8.3 made this worse because the deadlock could occur within a critical code section, making it a PANIC rather than just ERROR condition. Also, a VACUUM FULL that failed partway through vacuuming a system catalog could result in cache corruption in concurrent database sessions. Another VACUUM FULL bug introduced in 8.3 could result in a crash or out-of-memory report when dealing with pages containing no live tuples.	'8.2':25 '8.3':31,81 'also':54 'anoth':75 'bug':5,78 'cach':69 'case':4 'catalog':21,65 'code':43 'concurr':14,72 'condit':53 'contain':97 'corner':3 'corner-cas':2 'correct':30 'corrupt':70 'could':38,66,82 'crash':86 'critic':42 'databas':73 'deadlock':12,37 'deal':94 'differ':19 'error':52 'fail':59 'full':8,16,57,77 'introduc':23,79 'live':99 'made':32 'make':45 'memori':91 'occur':39 'oper':17 'out-of-memori':88 'page':96 'panic':48 'partway':60 'potenti':11 'rather':49 'repair':1 'report':92 'result':67,83 'section':44 'session':74 'system':20,64 'tom':9 'tupl':100 'vacuum':7,15,56,62,76 'within':40 'wors':34
8	3	1	79cfc15fd365a8d62490a6444e388638	Fix misbehavior of foreign key checks involving character or bit columns (Tom) If the referencing column were of a different but compatible type (for instance varchar ), the constraint was enforced incorrectly.	'bit':10 'charact':8 'check':6 'column':11,16 'compat':22 'constraint':28 'differ':20 'enforc':30 'fix':1 'foreign':4 'incorrect':31 'instanc':25 'involv':7 'key':5 'misbehavior':2 'referenc':15 'tom':12 'type':23 'varchar':26
8	3	1	48d13068452c8110797dfb6a17ffe6eb	Avoid needless deadlock failures in no-op foreign-key checks (Stephan Szabo, Tom)	'avoid':1 'check':12 'deadlock':3 'failur':4 'foreign':10 'foreign-key':9 'key':11 'needless':2 'no-op':6 'op':8 'stephan':13 'szabo':14 'tom':15
8	3	1	60bb51eab4a45aeb8f1204ad77a0beda	Fix possible core dump when re-planning a prepared query (Tom) This bug affected only protocol-level prepare operations, not SQL PREPARE , and so tended to be seen only with JDBC, DBI, and other client-side drivers that use prepared statements heavily.	'affect':15 'bug':14 'client':38 'client-sid':37 'core':3 'dbi':34 'driver':40 'dump':4 'fix':1 'heavili':45 'jdbc':33 'level':19 'oper':21 'plan':8 'possibl':2 'prepar':10,20,24,43 'protocol':18 'protocol-level':17 'queri':11 're':7 're-plan':6 'seen':30 'side':39 'sql':23 'statement':44 'tend':27 'tom':12 'use':42
8	3	1	249788cb8c6b8de3e3be40654a286446	Fix possible failure when re-planning a query that calls an SPI-using function (Tom)	'call':11 'failur':3 'fix':1 'function':16 'plan':7 'possibl':2 'queri':9 're':6 're-plan':5 'spi':14 'spi-us':13 'tom':17 'use':15
8	3	1	64f8fca1aa5667c112baa84a4cce269e	Fix failure in row-wise comparisons involving columns of different datatypes (Tom)	'column':9 'comparison':7 'datatyp':12 'differ':11 'failur':2 'fix':1 'involv':8 'row':5 'row-wis':4 'tom':13 'wise':6
8	3	1	d16a4a28282d8076c9daaad3726e18a4	Fix longstanding LISTEN / NOTIFY race condition (Tom) In rare cases a session that had just executed a LISTEN might not get a notification, even though one would be expected because the concurrent transaction executing NOTIFY was observed to commit later. A side effect of the fix is that a transaction that has executed a not-yet-committed LISTEN command will not see any row in pg_listener for the LISTEN , should it choose to look; formerly it would have. This behavior was never documented one way or the other, but it is possible that some applications depend on the old behavior.	'applic':97 'behavior':82,102 'case':10 'choos':74 'command':60 'commit':39,58 'concurr':32 'condit':6 'depend':98 'document':85 'effect':43 'even':24 'execut':16,34,53 'expect':29 'fix':1,46 'former':77 'get':21 'later':40 'listen':3,18,59,68,71 'longstand':2 'look':76 'might':19 'never':84 'not-yet-commit':55 'notif':23 'notifi':4,35 'observ':37 'old':101 'one':26,86 'pg':67 'possibl':94 'race':5 'rare':9 'row':65 'see':63 'session':12 'side':42 'though':25 'tom':7 'transact':33,50 'way':87 'would':27,79 'yet':57
8	3	1	7f9a170ddf48fa8a56a169fcbeb5a916	Disallow LISTEN and UNLISTEN within a prepared transaction (Tom) This was formerly allowed but trying to do it had various unpleasant consequences, notably that the originating backend could not exit as long as an UNLISTEN remained uncommitted.	'allow':13 'backend':27 'consequ':22 'could':28 'disallow':1 'exit':30 'former':12 'listen':2 'long':32 'notabl':23 'origin':26 'prepar':7 'remain':36 'tom':9 'transact':8 'tri':15 'uncommit':37 'unlisten':4,35 'unpleas':21 'various':20 'within':5
8	3	1	d9e99b0dad67d4fc9037f6296bd5c23b	Disallow dropping a temporary table within a prepared transaction (Heikki) This was correctly disallowed by 8.1, but the check was inadvertently broken in 8.2 and 8.3.	'8.1':16 '8.2':24 '8.3':26 'broken':22 'check':19 'correct':13 'disallow':1,14 'drop':2 'heikki':10 'inadvert':21 'prepar':8 'tabl':5 'temporari':4 'transact':9 'within':6
8	3	1	22e2b118bc322fbc702a325f9ea14c4b	Fix rare crash when an error occurs during a query using a hash index (Heikki)	'crash':3 'error':6 'fix':1 'hash':13 'heikki':15 'index':14 'occur':7 'queri':10 'rare':2 'use':11
8	3	1	a677f4cfd501e89e6391754119088b76	Fix incorrect comparison of tsquery values (Teodor)	'comparison':3 'fix':1 'incorrect':2 'teodor':7 'tsqueri':5 'valu':6
8	3	1	ca219240b7242d3e94d45f97a1c14eef	Fix incorrect behavior of LIKE with non-ASCII characters in single-byte encodings (Rolf Jentsch)	'ascii':9 'behavior':3 'byte':14 'charact':10 'encod':15 'fix':1 'incorrect':2 'jentsch':17 'like':5 'non':8 'non-ascii':7 'rolf':16 'singl':13 'single-byt':12
8	3	1	150e85816e0a2891c70233efddd267bc	Disable xmlvalidate (Tom) This function should have been removed before 8.3 release, but was inadvertently left in the source code. It poses a small security risk since unprivileged users could use it to read the first few characters of any file accessible to the server.	'8.3':11 'access':42 'charact':38 'code':20 'could':30 'disabl':1 'file':41 'first':36 'function':5 'inadvert':15 'left':16 'pose':22 'read':34 'releas':12 'remov':9 'risk':26 'secur':25 'server':45 'sinc':27 'small':24 'sourc':19 'tom':3 'unprivileg':28 'use':31 'user':29 'xmlvalid':2
8	3	1	f32fbc3e7f9d6e90aa211c284737fd39	Fix memory leaks in certain usages of set-returning functions (Neil)	'certain':5 'fix':1 'function':11 'leak':3 'memori':2 'neil':12 'return':10 'set':9 'set-return':8 'usag':6
8	3	1	e59c41c51da3f8b4fbeb52e7954be3ef	Ensure pg_stat_activity . waiting flag is cleared when a lock wait is aborted (Tom)	'abort':14 'activ':4 'clear':8 'ensur':1 'flag':6 'lock':11 'pg':2 'stat':3 'tom':15 'wait':5,12
8	3	1	85f2e7b894cedcfda89e8d6f10efb7c4	Fix handling of process permissions on Windows Vista (Dave, Magnus) In particular, this fix allows starting the server as the Administrator user.	'administr':21 'allow':15 'dave':9 'fix':1,14 'handl':2 'magnus':10 'particular':12 'permiss':5 'process':4 'server':18 'start':16 'user':22 'vista':8 'window':7
8	3	1	e2cc663421096be5d49a548f233e220d	Update time zone data files to tzdata release 2008a (in particular, recent Chile changes); adjust timezone abbreviation VET (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)	'-4':23,27 '00':28 '2008a':9 '30':24 'abbrevi':17 'adjust':15 'chang':14 'chile':13 'data':4 'file':5 'mean':21 'particular':11 'recent':12 'releas':8 'time':2 'timezon':16 'tom':29 'tzdata':7 'updat':1 'utc':22,26 'venezuela':19 'vet':18 'zone':3
8	3	1	bb0558a751e56ef2a272e104597449e2	Fix ecpg problems with arrays (Michael)	'array':5 'ecpg':2 'fix':1 'michael':6 'problem':3
8	3	1	b29a1d221ce8a748eb7df87b6ea5daad	Fix pg_ctl to correctly extract the postmaster's port number from command-line options (Itagaki Takahiro, Tom) Previously, pg_ctl start -w could try to contact the postmaster on the wrong port, leading to bogus reports of startup failure.	'bogus':37 'command':14 'command-lin':13 'contact':28 'correct':5 'could':25 'ctl':3,22 'extract':6 'failur':41 'fix':1 'itagaki':17 'lead':35 'line':15 'number':11 'option':16 'pg':2,21 'port':10,34 'postmast':8,30 'previous':20 'report':38 'start':23 'startup':40 'takahiro':18 'tom':19 'tri':26 'w':24 'wrong':33
8	3	1	63140e0cb402e6a602586b52d1374f77	Use -fwrapv to defend against possible misoptimization in recent gcc versions (Tom) This is known to be necessary when building PostgreSQL with gcc 4.3 or later.	'4.3':24 'build':20 'defend':4 'fwrapv':2 'gcc':10,23 'known':15 'later':26 'misoptim':7 'necessari':18 'possibl':6 'postgresql':21 'recent':9 'tom':12 'use':1 'version':11
8	3	1	305152930daff333d87b353690ff67f2	Enable building contrib/uuid-ossp with MSVC (Hiroshi Saito)	'build':2 'contrib/uuid-ossp':3 'enabl':1 'hiroshi':6 'msvc':5 'saito':7
\.
